[
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "Get Started Take a Tour"
    },
    {
        "uniqueId": "23",
        "target": "23 in Mclean, VA.",
        "description": "Click here for more details and to register."
    },
    {
        "uniqueId": "10",
        "target": "10 techniques 8 techniques 10 techniques 14 techniques 20 techniques 14 techniques 43 techniques 17 techniques 32 techniques 9 techniques 17 techniques 18 techniques 9 techniques 14 techniques",
        "description": "Active Scanning (3)"
    },
    {
        "uniqueId": "C2",
        "target": "C2 Channel",
        "description": "Exfiltration Over Other Network Medium (1)"
    },
    {
        "uniqueId": "T1489",
        "target": "T1489 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1489",
        "target": "T1489 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "29",
        "target": "29 March 2019",
        "description": "Last Modified: 28 July 2022"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon looks for and attempts to stop database processes.[4]"
    },
    {
        "uniqueId": "S1053",
        "target": "S1053 AvosLocker",
        "description": "AvosLocker has terminated specific processes before encryption.[5]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk can stop specific services related to backups.[6][7][8]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat has the ability to stop VM services on compromised networks.[9][10]"
    },
    {
        "uniqueId": "S1096",
        "target": "S1096 Cheerscrypt",
        "description": "Cheerscrypt has the ability to terminate VM processes on compromised hosts through execution of esxcli vm process kill.[11]"
    },
    {
        "uniqueId": "S0611",
        "target": "S0611 Clop",
        "description": "Clop can kill several processes and services related to backups and security solutions.[12][13]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can stop up to 146 Windows services related to security, backup, database, and email solutions through the use of net stop.[14]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba has a hardcoded list of services and processes to terminate.[15]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol will terminate services using the Service Control Manager (SCM) API.[16]"
    },
    {
        "uniqueId": "S0605",
        "target": "S0605 EKANS",
        "description": "EKANS stops database, data backup solution, antivirus, and ICS-related processes.[17][18][19]"
    },
    {
        "uniqueId": "S0697",
        "target": "S0697 HermeticWiper",
        "description": "HermeticWiper has the ability to stop the Volume Shadow Copy service.[20]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to stop services on the infected host.[21]"
    },
    {
        "uniqueId": "G0119",
        "target": "G0119 Indrik Spider",
        "description": "Indrik Spider has used PsExec to stop services prior to the execution of ransomware.[22]"
    },
    {
        "uniqueId": "S0604",
        "target": "S0604 Industroyer",
        "description": "Industroyer\u2019s data wiper module writes zeros into the registry keys in SYSTEM\\CurrentControlSet\\Services to render a system inoperable.[23]"
    },
    {
        "uniqueId": "S0607",
        "target": "S0607 KillDisk",
        "description": "KillDisk terminates various processes to get the user to reboot the victim machine.[24]"
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$",
        "description": "LAPSUS$ has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure.[25]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has stopped the MSExchangeIS service to render Exchange contents inaccessible to users.[26]"
    },
    {
        "uniqueId": "S0582",
        "target": "S0582 LookBack",
        "description": "LookBack can kill processes and delete services.[27]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has stopped SQL services to ensure it can encrypt any database.[28]"
    },
    {
        "uniqueId": "S0576",
        "target": "S0576 MegaCortex",
        "description": "MegaCortex can stop and disable services on the system.[29]"
    },
    {
        "uniqueId": "S0688",
        "target": "S0688 Meteor",
        "description": "Meteor can disconnect all network adapters on a compromised host using powershell -Command \"Get-WmiObject -class Win32_NetworkAdapter | ForEach { If ($.NetEnabled) { $.Disable() } }\" > NUL.[30]"
    },
    {
        "uniqueId": "S0457",
        "target": "S0457 Netwalker",
        "description": "Netwalker can terminate system processes and services, some of which relate to backup software.[31]"
    },
    {
        "uniqueId": "S0365",
        "target": "S0365 Olympic Destroyer",
        "description": "Olympic Destroyer uses the API call ChangeServiceConfigW to disable all services on the affected system.[1]"
    },
    {
        "uniqueId": "S0556",
        "target": "S0556 Pay2Key",
        "description": "Pay2Key can stop the MS SQL service at the end of the encryption process to release files locked by the service.[32]"
    },
    {
        "uniqueId": "S1058",
        "target": "S1058 Prestige",
        "description": "Prestige has attempted to stop the MSSQL Windows service to ensure successful encryption using C:\\Windows\\System32\\net.exe stop MSSQLSERVER.[33]"
    },
    {
        "uniqueId": "S0583",
        "target": "S0583 Pysa",
        "description": "Pysa can stop services and processes.[34]"
    },
    {
        "uniqueId": "S0481",
        "target": "S0481 Ragnar Locker",
        "description": "Ragnar Locker has attempted to stop services associated with business applications and databases to release the lock on files used by these applications so they may be encrypted.[35]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil has the capability to stop services and kill processes.[36][37]"
    },
    {
        "uniqueId": "S0400",
        "target": "S0400 RobbinHood",
        "description": "RobbinHood stops 181 Windows services on the system before beginning the encryption process.[38]"
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal can use RmShutDown to kill applications and services using the resources that are targeted for encryption.[39]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk has called kill.bat for stopping services, disabling services and killing processes.[40]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA has the capability to stop processes and services.[41]"
    },
    {
        "uniqueId": "S0366",
        "target": "S0366 WannaCry",
        "description": "WannaCry attempts to kill processes associated with Exchange, Microsoft SQL Server, and MySQL to make it possible to encrypt their data stores.[42][3]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has used taskkill.exe and net.exe to stop backup, catalog, cloud, and other services prior to network encryption.[43]"
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Operate intrusion detection, analysis, and response systems on a separate network from the production environment to lessen the chances that an adversary can see and interfere with critical response functions."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Ensure proper process and file permissions are in place to inhibit adversaries from disabling or interfering with critical services."
    },
    {
        "uniqueId": "M1024",
        "target": "M1024 Restrict Registry Permissions",
        "description": "Ensure proper registry permissions are in place to inhibit adversaries from disabling or interfering with critical services."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Modification",
        "description": "Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, ChangeServiceConfigW may be used by an adversary to prevent services from starting.[1]"
    },
    {
        "uniqueId": "DS0019",
        "target": "DS0019 Service Service Metadata",
        "description": "Alterations to the service binary path or the service startup type changed to disabled may be suspicious."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Modification",
        "description": "Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users."
    },
    {
        "uniqueId": "471",
        "target": "471 Malware Intelligence team. (2020, March 31). REvil Ransomware-as-a-Service \u2013 An analysis of a ransomware affiliate operation. Retrieved August 4, 2020.",
        "description": "Counter Threat Unit Research Team. (2019, September 24). REvil/Sodinokibi Ransomware. Retrieved August 4, 2020."
    },
    {
        "uniqueId": "181",
        "target": "181 Windows Services Before Encryption. Retrieved July 29, 2019.",
        "description": "Cybereason Global SOC and Cybereason Security Research Teams. (2022, December 14). Royal Rumble: Analysis of Royal Ransomware. Retrieved March 30, 2023."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "202",
        "target": "202 Sub-techniques: 435",
        "description": "ID Name Description"
    },
    {
        "uniqueId": "T1548",
        "target": "T1548 Abuse Elevation Control Mechanism Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.",
        "description": ".001 Setuid and Setgid An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user\u2019s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively. Normally an application is run in the current user\u2019s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges."
    },
    {
        "uniqueId": "002",
        "target": "002 Bypass User Account Control Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.",
        "description": ".003 Sudo and Sudo Caching Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges."
    },
    {
        "uniqueId": "004",
        "target": "004 Elevated Execution with Prompt Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified.",
        "description": ".005 Temporary Elevated Cloud Access Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own."
    },
    {
        "uniqueId": "006",
        "target": "006 TCC Manipulation Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to execute malicious applications with elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA).",
        "description": "T1134 Access Token Manipulation Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token."
    },
    {
        "uniqueId": "001",
        "target": "001 Token Impersonation/Theft Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.",
        "description": ".002 Create Process with Token Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas."
    },
    {
        "uniqueId": "003",
        "target": "003 Make and Impersonate Token Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread.",
        "description": ".004 Parent PID Spoofing Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context."
    },
    {
        "uniqueId": "005",
        "target": "005 SID-History Injection Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).",
        "description": "T1531 Account Access Removal Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a System Shutdown/Reboot to set malicious changes into place."
    },
    {
        "uniqueId": "T1087",
        "target": "T1087 Account Discovery Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).",
        "description": ".001 Local Account Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior."
    },
    {
        "uniqueId": "002",
        "target": "002 Domain Account Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.",
        "description": ".003 Email Account Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs)."
    },
    {
        "uniqueId": "004",
        "target": "004 Cloud Account Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.",
        "description": "T1098 Account Manipulation Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials."
    },
    {
        "uniqueId": "001",
        "target": "001 Additional Cloud Credentials Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.",
        "description": ".002 Additional Email Delegate Permissions Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account."
    },
    {
        "uniqueId": "003",
        "target": "003 Additional Cloud Roles An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).",
        "description": ".004 SSH Authorized Keys Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The authorized_keys file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <user-home>/.ssh/authorized_keys. Users may edit the system\u2019s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value \"yes\" to ensure public key and RSA authentication are enabled. The SSH config file is usually located under /etc/ssh/sshd_config."
    },
    {
        "uniqueId": "005",
        "target": "005 Device Registration Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.",
        "description": ".006 Additional Container Cluster Roles An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account. Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions."
    },
    {
        "uniqueId": "T1650",
        "target": "T1650 Acquire Access Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems. In some cases, adversary groups may form partnerships to share compromised systems with each other.",
        "description": "T1583 Acquire Infrastructure Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost. Additionally, botnets are available for rent or purchase."
    },
    {
        "uniqueId": "001",
        "target": "001 Domains Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.",
        "description": ".002 DNS Server Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations."
    },
    {
        "uniqueId": "003",
        "target": "003 Virtual Private Server Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.",
        "description": ".004 Server Adversaries may buy, lease, rent, or obtain physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in Drive-by Compromise, enabling Phishing operations, or facilitating Command and Control. Instead of compromising a third-party Server or renting a Virtual Private Server, adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused."
    },
    {
        "uniqueId": "005",
        "target": "005 Botnet Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).",
        "description": ".006 Web Services Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them."
    },
    {
        "uniqueId": "007",
        "target": "007 Serverless Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.",
        "description": ".008 Malvertising Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites."
    },
    {
        "uniqueId": "T1595",
        "target": "T1595 Active Scanning Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.",
        "description": ".001 Scanning IP Blocks Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses."
    },
    {
        "uniqueId": "002",
        "target": "002 Vulnerability Scanning Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.",
        "description": ".003 Wordlist Scanning Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to Brute Force, its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: Gather Victim Org Information, or Search Victim-Owned Websites)."
    },
    {
        "uniqueId": "T1557",
        "target": "T1557 Adversary-in-the-Middle Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.",
        "description": ".001 LLMNR/NBT-NS Poisoning and SMB Relay By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials."
    },
    {
        "uniqueId": "002",
        "target": "002 ARP Cache Poisoning Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.",
        "description": ".003 DHCP Spoofing Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation."
    },
    {
        "uniqueId": "T1071",
        "target": "T1071 Application Layer Protocol Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.",
        "description": ".001 Web Protocols Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
    },
    {
        "uniqueId": "002",
        "target": "002 File Transfer Protocols Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.",
        "description": ".003 Mail Protocols Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
    },
    {
        "uniqueId": "004",
        "target": "004 DNS Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.",
        "description": "T1010 Application Window Discovery Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade."
    },
    {
        "uniqueId": "T1560",
        "target": "T1560 Archive Collected Data An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.",
        "description": ".001 Archive via Utility Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport."
    },
    {
        "uniqueId": "002",
        "target": "002 Archive via Library An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data.",
        "description": ".003 Archive via Custom Method An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used."
    },
    {
        "uniqueId": "T1123",
        "target": "T1123 Audio Capture An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.",
        "description": "T1119 Automated Collection Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals."
    },
    {
        "uniqueId": "T1020",
        "target": "T1020 Automated Exfiltration Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.",
        "description": ".001 Traffic Duplication Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device."
    },
    {
        "uniqueId": "T1197",
        "target": "T1197 BITS Jobs Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through Component Object Model (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.",
        "description": "T1547 Boot or Logon Autostart Execution Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon. These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel."
    },
    {
        "uniqueId": "001",
        "target": "001 Registry Run Keys / Startup Folder Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.",
        "description": ".002 Authentication Package Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system."
    },
    {
        "uniqueId": "003",
        "target": "003 Time Providers Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.",
        "description": ".004 Winlogon Helper DLL Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\Software[\\Wow6432Node\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are used to manage additional helper programs and functionalities that support Winlogon."
    },
    {
        "uniqueId": "005",
        "target": "005 Security Support Provider Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.",
        "description": ".006 Kernel Modules and Extensions Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. "
    },
    {
        "uniqueId": "007",
        "target": "007 Re-opened Applications Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\". When selected, all applications currently open are added to a property list file named com.apple.loginwindow.[UUID].plist within the ~/Library/Preferences/ByHost directory. Applications listed in this file are automatically reopened upon the user\u2019s next logon.",
        "description": ".008 LSASS Driver Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process."
    },
    {
        "uniqueId": "009",
        "target": "009 Shortcut Modification Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.",
        "description": ".010 Port Monitors Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup. This DLL can be located in C:\\Windows\\System32 and will be loaded and run by the print spooler service, spoolsv.exe, under SYSTEM level permissions on boot."
    },
    {
        "uniqueId": "012",
        "target": "012 Print Processors Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot.",
        "description": ".013 XDG Autostart Entries Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user\u2019s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (.desktop) to configure the user\u2019s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media."
    },
    {
        "uniqueId": "014",
        "target": "014 Active Setup Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer. These programs will be executed under the context of the user and will have the account's associated permissions level.",
        "description": ".015 Login Items Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in. Login items can be added via a shared file list or Service Management Framework. Shared file list login items can be set using scripting languages such as AppleScript, whereas the Service Management Framework uses the API call SMLoginItemSetEnabled."
    },
    {
        "uniqueId": "T1037",
        "target": "T1037 Boot or Logon Initialization Scripts Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.",
        "description": ".001 Logon Script (Windows) Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to the HKCU\\Environment\\UserInitMprLogonScript Registry key."
    },
    {
        "uniqueId": "002",
        "target": "002 Login Hook Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the /Library/Preferences/com.apple.loginwindow.plist file and can be modified using the defaults command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.",
        "description": ".003 Network Logon Script Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects. These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems."
    },
    {
        "uniqueId": "004",
        "target": "004 RC Scripts Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system\u2019s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.",
        "description": ".005 Startup Items Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items."
    },
    {
        "uniqueId": "T1176",
        "target": "T1176 Browser Extensions Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.",
        "description": "T1217 Browser Information Discovery Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure."
    },
    {
        "uniqueId": "T1185",
        "target": "T1185 Browser Session Hijacking Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.",
        "description": "T1110 Brute Force Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes."
    },
    {
        "uniqueId": "001",
        "target": "001 Password Guessing Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.",
        "description": ".002 Password Cracking Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping can be used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Further, adversaries may leverage Data from Configuration Repository in order to obtain hashed credentials for network devices."
    },
    {
        "uniqueId": "003",
        "target": "003 Password Spraying Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.",
        "description": ".004 Credential Stuffing Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts."
    },
    {
        "uniqueId": "T1612",
        "target": "T1612 Build Image on Host Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote build request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.",
        "description": "T1115 Clipboard Data Adversaries may collect data stored in the clipboard from users copying information within or between applications."
    },
    {
        "uniqueId": "T1651",
        "target": "T1651 Cloud Administration Command Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents.",
        "description": "T1580 Cloud Infrastructure Discovery An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services."
    },
    {
        "uniqueId": "T1538",
        "target": "T1538 Cloud Service Dashboard An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.",
        "description": "T1526 Cloud Service Discovery An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs."
    },
    {
        "uniqueId": "T1619",
        "target": "T1619 Cloud Storage Object Discovery Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage. Similar to File and Directory Discovery on a local host, after identifying available storage services (i.e. Cloud Infrastructure Discovery) adversaries may access the contents/objects stored in cloud infrastructure.",
        "description": "T1059 Command and Scripting Interpreter Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell."
    },
    {
        "uniqueId": "001",
        "target": "001 PowerShell Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).",
        "description": ".002 AppleScript Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely."
    },
    {
        "uniqueId": "003",
        "target": "003 Windows Command Shell Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH.",
        "description": ".004 Unix Shell Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges."
    },
    {
        "uniqueId": "005",
        "target": "005 Visual Basic Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.",
        "description": ".006 Python Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables."
    },
    {
        "uniqueId": "007",
        "target": "007 JavaScript Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.",
        "description": ".008 Network Device CLI Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands."
    },
    {
        "uniqueId": "009",
        "target": "009 Cloud API Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, PowerShell modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such as Python.",
        "description": ".010 AutoHotKey & AutoIT Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs."
    },
    {
        "uniqueId": "T1092",
        "target": "T1092 Communication Through Removable Media Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by Replication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",
        "description": "T1586 Compromise Accounts Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. Establish Accounts), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona."
    },
    {
        "uniqueId": "001",
        "target": "001 Social Media Accounts Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.",
        "description": ".002 Email Accounts Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct Phishing for Information, Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: Domains)."
    },
    {
        "uniqueId": "003",
        "target": "003 Cloud Accounts Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.",
        "description": "T1554 Compromise Host Software Binary Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications."
    },
    {
        "uniqueId": "T1584",
        "target": "T1584 Compromise Infrastructure Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.",
        "description": ".001 Domains Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps."
    },
    {
        "uniqueId": "002",
        "target": "002 DNS Server Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.",
        "description": ".003 Virtual Private Server Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves."
    },
    {
        "uniqueId": "004",
        "target": "004 Server Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a Server or Virtual Private Server, adversaries may compromise third-party servers in support of operations.",
        "description": ".005 Botnet Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS)."
    },
    {
        "uniqueId": "006",
        "target": "006 Web Services Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
        "description": ".007 Serverless Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them."
    },
    {
        "uniqueId": "008",
        "target": "008 Network Devices Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not Initial Access to that environment -- instead leveraging these devices to support additional targeting.",
        "description": "T1609 Container Administration Command Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment."
    },
    {
        "uniqueId": "T1613",
        "target": "T1613 Container and Resource Discovery Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.",
        "description": "T1659 Content Injection Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., Drive-by Target followed by Drive-by Compromise), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., Ingress Tool Transfer) and other data to already compromised systems."
    },
    {
        "uniqueId": "T1136",
        "target": "T1136 Create Account Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
        "description": ".001 Local Account Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
    },
    {
        "uniqueId": "002",
        "target": "002 Domain Account Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the net user /add /domain command can be used to create a domain account.",
        "description": ".003 Cloud Account Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system."
    },
    {
        "uniqueId": "T1543",
        "target": "T1543 Create or Modify System Process Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. On macOS, launchd processes known as Launch Daemon and Launch Agent are run to finish system initialization and load user specific parameters.",
        "description": ".001 Launch Agent Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in /System/Library/LaunchAgents, /Library/LaunchAgents, and ~/Library/LaunchAgents. Property list files use the Label, ProgramArguments , and RunAtLoad keys to identify the Launch Agent's name, executable location, and execution time. Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks."
    },
    {
        "uniqueId": "002",
        "target": "002 Systemd Service Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.",
        "description": ".003 Windows Service Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry."
    },
    {
        "uniqueId": "004",
        "target": "004 Launch Daemon Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in /System/Library/LaunchDaemons/ and /Library/LaunchDaemons/. Required Launch Daemons parameters include a Label to identify the task, Program to provide a path to the executable, and RunAtLoad to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.",
        "description": ".005 Container Service Adversaries may create or modify container or container cluster management tools that run as daemons, agents, or services on individual hosts. These include software for creating and managing individual containers, such as Docker and Podman, as well as container cluster node-level agents such as kubelet. By modifying these services, an adversary may be able to achieve persistence or escalate their privileges on a host."
    },
    {
        "uniqueId": "T1555",
        "target": "T1555 Credentials from Password Stores Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
        "description": ".001 Keychain Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service."
    },
    {
        "uniqueId": "002",
        "target": "002 Securityd Memory An adversary with root access may gather credentials by reading securityd\u2019s memory. securityd is a service/daemon responsible for implementing security protocols such as encryption and authorization. A privileged adversary may be able to scan through securityd's memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.",
        "description": ".003 Credentials from Web Browsers Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers."
    },
    {
        "uniqueId": "004",
        "target": "004 Windows Credential Manager Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).",
        "description": ".005 Password Managers Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk."
    },
    {
        "uniqueId": "006",
        "target": "006 Cloud Secrets Management Stores Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.",
        "description": "T1485 Data Destruction Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such as del and rm often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from Disk Content Wipe and Disk Structure Wipe because individual files are destroyed rather than sections of a storage disk or the disk's logical structure."
    },
    {
        "uniqueId": "T1132",
        "target": "T1132 Data Encoding Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems. Some data encoding systems may also result in data compression, such as gzip.",
        "description": ".001 Standard Encoding Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip."
    },
    {
        "uniqueId": "002",
        "target": "002 Non-Standard Encoding Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.",
        "description": "T1486 Data Encrypted for Impact Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted."
    },
    {
        "uniqueId": "T1530",
        "target": "T1530 Data from Cloud Storage Adversaries may access data from cloud storage.",
        "description": "T1602 Data from Configuration Repository Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices."
    },
    {
        "uniqueId": "001",
        "target": "001 SNMP (MIB Dump) Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).",
        "description": ".002 Network Device Configuration Dump Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use."
    },
    {
        "uniqueId": "T1213",
        "target": "T1213 Data from Information Repositories Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization.",
        "description": ".001 Confluence Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:"
    },
    {
        "uniqueId": "002",
        "target": "002 Sharepoint Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:",
        "description": ".003 Code Repositories Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git."
    },
    {
        "uniqueId": "T1005",
        "target": "T1005 Data from Local System Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.",
        "description": "T1039 Data from Network Shared Drive Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information."
    },
    {
        "uniqueId": "T1025",
        "target": "T1025 Data from Removable Media Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information.",
        "description": "T1565 Data Manipulation Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making."
    },
    {
        "uniqueId": "001",
        "target": "001 Stored Data Manipulation Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.",
        "description": ".002 Transmitted Data Manipulation Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
    },
    {
        "uniqueId": "003",
        "target": "003 Runtime Data Manipulation Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.",
        "description": "T1001 Data Obfuscation Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols."
    },
    {
        "uniqueId": "001",
        "target": "001 Junk Data Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters.",
        "description": ".002 Steganography Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control."
    },
    {
        "uniqueId": "003",
        "target": "003 Protocol Impersonation Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.",
        "description": "T1074 Data Staged Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location."
    },
    {
        "uniqueId": "001",
        "target": "001 Local Data Staging Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.",
        "description": ".002 Remote Data Staging Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location."
    },
    {
        "uniqueId": "T1030",
        "target": "T1030 Data Transfer Size Limits An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
        "description": "T1622 Debugger Evasion Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads."
    },
    {
        "uniqueId": "T1491",
        "target": "T1491 Defacement Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for Defacement include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages.",
        "description": ".001 Internal Defacement An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of Internal Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished."
    },
    {
        "uniqueId": "002",
        "target": "002 External Defacement An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. External Defacement may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. External Defacement may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise.",
        "description": "T1140 Deobfuscate/Decode Files or Information Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."
    },
    {
        "uniqueId": "T1610",
        "target": "T1610 Deploy Container Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to Escape to Host and access other containers running on the node.",
        "description": "T1587 Develop Capabilities Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle."
    },
    {
        "uniqueId": "001",
        "target": "001 Malware Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.",
        "description": ".002 Code Signing Certificates Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is."
    },
    {
        "uniqueId": "003",
        "target": "003 Digital Certificates Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).",
        "description": ".004 Exploits Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via Vulnerabilities to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis."
    },
    {
        "uniqueId": "T1652",
        "target": "T1652 Device Driver Discovery Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. Security Software Discovery) or other defenses (e.g., Virtualization/Sandbox Evasion), as well as potential exploitable vulnerabilities (e.g., Exploitation for Privilege Escalation).",
        "description": "T1006 Direct Volume Access Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools."
    },
    {
        "uniqueId": "T1561",
        "target": "T1561 Disk Wipe Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.",
        "description": ".001 Disk Content Wipe Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources."
    },
    {
        "uniqueId": "002",
        "target": "002 Disk Structure Wipe Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.",
        "description": "T1484 Domain or Tenant Policy Modification Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation."
    },
    {
        "uniqueId": "001",
        "target": "001 Group Policy Modification Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path \\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\.",
        "description": ".002 Trust Modification Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains."
    },
    {
        "uniqueId": "T1482",
        "target": "T1482 Domain Trust Discovery Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain. Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting. Domain trusts can be enumerated using the DSEnumerateDomainTrusts() Win32 API call, .NET methods, and LDAP. The Windows utility Nltest is known to be used by adversaries to enumerate domain trusts.",
        "description": "T1189 Drive-by Compromise Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token."
    },
    {
        "uniqueId": "T1568",
        "target": "T1568 Dynamic Resolution Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.",
        "description": ".001 Fast Flux DNS Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record."
    },
    {
        "uniqueId": "002",
        "target": "002 Domain Generation Algorithms Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.",
        "description": ".003 DNS Calculation Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel."
    },
    {
        "uniqueId": "T1114",
        "target": "T1114 Email Collection Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients.",
        "description": ".001 Local Email Collection Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user\u2019s local system, such as Outlook storage or cache files."
    },
    {
        "uniqueId": "002",
        "target": "002 Remote Email Collection Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords.",
        "description": ".003 Email Forwarding Rule Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim\u2019s organization to use as part of further exploits or operations. Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators. Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes."
    },
    {
        "uniqueId": "T1573",
        "target": "T1573 Encrypted Channel Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
        "description": ".001 Symmetric Cryptography Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4."
    },
    {
        "uniqueId": "002",
        "target": "002 Asymmetric Cryptography Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.",
        "description": "T1499 Endpoint Denial of Service Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion."
    },
    {
        "uniqueId": "001",
        "target": "001 OS Exhaustion Flood Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.",
        "description": ".002 Service Exhaustion Flood Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service."
    },
    {
        "uniqueId": "003",
        "target": "003 Application Exhaustion Flood Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.",
        "description": ".004 Application or System Exploitation Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition."
    },
    {
        "uniqueId": "T1611",
        "target": "T1611 Escape to Host Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.",
        "description": "T1585 Establish Accounts Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity."
    },
    {
        "uniqueId": "001",
        "target": "001 Social Media Accounts Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.",
        "description": ".002 Email Accounts Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct Phishing for Information or Phishing. Establishing email accounts may also allow adversaries to abuse free services \u2013 such as trial periods \u2013 to Acquire Infrastructure for follow-on purposes."
    },
    {
        "uniqueId": "003",
        "target": "003 Cloud Accounts Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.",
        "description": "T1546 Event Triggered Execution Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events."
    },
    {
        "uniqueId": "001",
        "target": "001 Change Default File Association Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.",
        "description": ".002 Screensaver Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in C:\\Windows\\System32\\, and C:\\Windows\\sysWOW64\\ on 64-bit Windows systems, along with screensavers included with base Windows installations."
    },
    {
        "uniqueId": "003",
        "target": "003 Windows Management Instrumentation Event Subscription Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.",
        "description": ".004 Unix Shell Configuration Modification Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately."
    },
    {
        "uniqueId": "005",
        "target": "005 Trap Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The trap command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like ctrl+c and ctrl+d.",
        "description": ".006 LC_LOAD_DYLIB Addition Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. There are tools available to perform these changes."
    },
    {
        "uniqueId": "007",
        "target": "007 Netsh Helper DLL Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at HKLM\\SOFTWARE\\Microsoft\\Netsh.",
        "description": ".008 Accessibility Features Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system."
    },
    {
        "uniqueId": "009",
        "target": "009 AppCert DLLs Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\ are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec.",
        "description": ".010 AppInit DLLs Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows or HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library."
    },
    {
        "uniqueId": "011",
        "target": "011 Application Shimming Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10.",
        "description": ".012 Image File Execution Options Injection Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., C:\\dbg\\ntsd.exe -g notepad.exe)."
    },
    {
        "uniqueId": "013",
        "target": "013 PowerShell Profile Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile (profile.ps1) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments.",
        "description": ".014 Emond Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a Launch Daemon that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at /sbin/emond will load any rules from the /etc/emond.d/rules/ directory and take action once an explicitly defined event takes place."
    },
    {
        "uniqueId": "015",
        "target": "015 Component Object Model Hijacking Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system. References to various COM objects are stored in the Registry.",
        "description": ".016 Installer Packages Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation."
    },
    {
        "uniqueId": "T1480",
        "target": "T1480 Execution Guardrails Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\u2019s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.",
        "description": ".001 Environmental Keying Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment."
    },
    {
        "uniqueId": "T1048",
        "target": "T1048 Exfiltration Over Alternative Protocol Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.",
        "description": ".001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
    },
    {
        "uniqueId": "002",
        "target": "002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.",
        "description": ".003 Exfiltration Over Unencrypted Non-C2 Protocol Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
    },
    {
        "uniqueId": "T1041",
        "target": "T1041 Exfiltration Over C2 Channel Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
        "description": "T1011 Exfiltration Over Other Network Medium Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel."
    },
    {
        "uniqueId": "001",
        "target": "001 Exfiltration Over Bluetooth Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.",
        "description": "T1052 Exfiltration Over Physical Medium Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems."
    },
    {
        "uniqueId": "001",
        "target": "001 Exfiltration over USB Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
        "description": "T1567 Exfiltration Over Web Service Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services."
    },
    {
        "uniqueId": "001",
        "target": "001 Exfiltration to Code Repository Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.",
        "description": ".002 Exfiltration to Cloud Storage Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet."
    },
    {
        "uniqueId": "003",
        "target": "003 Exfiltration to Text Storage Sites Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as pastebin[.]com, are commonly used by developers to share code and other information.",
        "description": ".004 Exfiltration Over Webhook Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server. Many public and commercial services, such as Discord, Slack, and webhook.site, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello. When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application."
    },
    {
        "uniqueId": "T1190",
        "target": "T1190 Exploit Public-Facing Application Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.",
        "description": "T1203 Exploitation for Client Execution Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility."
    },
    {
        "uniqueId": "T1212",
        "target": "T1212 Exploitation for Credential Access Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. ",
        "description": "T1211 Exploitation for Defense Evasion Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them."
    },
    {
        "uniqueId": "T1068",
        "target": "T1068 Exploitation for Privilege Escalation Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.",
        "description": "T1210 Exploitation of Remote Services Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system."
    },
    {
        "uniqueId": "T1133",
        "target": "T1133 External Remote Services Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as Windows Remote Management and VNC can also be used externally.",
        "description": "T1008 Fallback Channels Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."
    },
    {
        "uniqueId": "T1083",
        "target": "T1083 File and Directory Discovery Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
        "description": "T1222 File and Directory Permissions Modification Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)."
    },
    {
        "uniqueId": "001",
        "target": "001 Windows File and Directory Permissions Modification Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).",
        "description": ".002 Linux and Mac File and Directory Permissions Modification Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)."
    },
    {
        "uniqueId": "T1657",
        "target": "T1657 Financial Theft Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware, business email compromise (BEC) and fraud, \"pig butchering,\" bank hacking, and exploiting cryptocurrency networks.",
        "description": "T1495 Firmware Corruption Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards."
    },
    {
        "uniqueId": "T1187",
        "target": "T1187 Forced Authentication Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.",
        "description": "T1606 Forge Web Credentials Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access."
    },
    {
        "uniqueId": "001",
        "target": "001 Web Cookies Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.",
        "description": ".002 SAML Tokens An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in the NotOnOrAfter value of the conditions ... element in a token. This value can be changed using the AccessTokenLifetime in a LifetimeTokenPolicy. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism."
    },
    {
        "uniqueId": "T1592",
        "target": "T1592 Gather Victim Host Information Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).",
        "description": ".001 Hardware Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.)."
    },
    {
        "uniqueId": "002",
        "target": "002 Software Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).",
        "description": ".003 Firmware Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.)."
    },
    {
        "uniqueId": "004",
        "target": "004 Client Configurations Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.",
        "description": "T1589 Gather Victim Identity Information Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations."
    },
    {
        "uniqueId": "001",
        "target": "001 Credentials Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.",
        "description": ".002 Email Addresses Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees."
    },
    {
        "uniqueId": "003",
        "target": "003 Employee Names Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.",
        "description": "T1590 Gather Victim Network Information Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations."
    },
    {
        "uniqueId": "001",
        "target": "001 Domain Properties Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.",
        "description": ".002 DNS Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk."
    },
    {
        "uniqueId": "003",
        "target": "003 Network Trust Dependencies Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.",
        "description": ".004 Network Topology Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure."
    },
    {
        "uniqueId": "005",
        "target": "005 IP Addresses Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.",
        "description": ".006 Network Security Appliances Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations."
    },
    {
        "uniqueId": "T1591",
        "target": "T1591 Gather Victim Org Information Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.",
        "description": ".001 Determine Physical Locations Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within."
    },
    {
        "uniqueId": "002",
        "target": "002 Business Relationships Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization\u2019s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim\u2019s hardware and software resources.",
        "description": ".003 Identify Business Tempo Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization\u2019s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim\u2019s hardware and software resources."
    },
    {
        "uniqueId": "004",
        "target": "004 Identify Roles Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.",
        "description": "T1615 Group Policy Discovery Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path \\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\."
    },
    {
        "uniqueId": "T1200",
        "target": "T1200 Hardware Additions Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. Replication Through Removable Media), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.",
        "description": "T1564 Hide Artifacts Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection."
    },
    {
        "uniqueId": "001",
        "target": "001 Hidden Files and Directories Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls \u2013a for Linux and macOS).",
        "description": ".002 Hidden Users Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users."
    },
    {
        "uniqueId": "003",
        "target": "003 Hidden Window Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.",
        "description": ".004 NTFS File Attributes Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. Within MFT entries are file attributes, such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files)."
    },
    {
        "uniqueId": "005",
        "target": "005 Hidden File System Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.",
        "description": ".006 Run Virtual Instance Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values."
    },
    {
        "uniqueId": "007",
        "target": "007 VBA Stomping Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.",
        "description": ".008 Email Hiding Rules Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the New-InboxRule or Set-InboxRule PowerShell cmdlets on Windows systems."
    },
    {
        "uniqueId": "009",
        "target": "009 Resource Forking Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using ls -l@ or xattr -l commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the /Resources folder.",
        "description": ".010 Process Argument Spoofing Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB."
    },
    {
        "uniqueId": "011",
        "target": "011 Ignore Process Interrupts Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off. These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.",
        "description": ".012 File/Path Exclusions Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate."
    },
    {
        "uniqueId": "T1665",
        "target": "T1665 Hide Infrastructure Adversaries may manipulate network traffic in order to hide and evade detection of their C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools, masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers, and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely.",
        "description": "T1574 Hijack Execution Flow Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution."
    },
    {
        "uniqueId": "001",
        "target": "001 DLL Search Order Hijacking Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.",
        "description": ".002 DLL Side-Loading Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s)."
    },
    {
        "uniqueId": "004",
        "target": "004 Dylib Hijacking Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with @rpath, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable. Additionally, if weak linking is used, such as the LC_LOAD_WEAK_DYLIB function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.",
        "description": ".005 Executable Installer File Permissions Weakness Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
    },
    {
        "uniqueId": "006",
        "target": "006 Dynamic Linker Hijacking Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as LD_PRELOAD on Linux or DYLD_INSERT_LIBRARIES on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.",
        "description": ".007 Path Interception by PATH Environment Variable Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line."
    },
    {
        "uniqueId": "008",
        "target": "008 Path Interception by Search Order Hijacking Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.",
        "description": ".009 Path Interception by Unquoted Path Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch."
    },
    {
        "uniqueId": "010",
        "target": "010 Services File Permissions Weakness Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.",
        "description": ".011 Services Registry Permissions Weakness Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through access control lists and user permissions."
    },
    {
        "uniqueId": "012",
        "target": "012 COR_PROFILER Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.",
        "description": ".013 KernelCallbackTable Adversaries may abuse the KernelCallbackTable of a process to hijack its execution flow in order to run their own payloads. The KernelCallbackTable can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once user32.dll is loaded."
    },
    {
        "uniqueId": "014",
        "target": "014 AppDomainManager Adversaries may execute their own malicious payloads by hijacking how the .NET AppDomainManager loads assemblies. The .NET framework uses the AppDomainManager class to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (.exe or .dll binaries compiled to run as .NET code) may be loaded into an application domain as executable code.",
        "description": "T1562 Impair Defenses Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators."
    },
    {
        "uniqueId": "001",
        "target": "001 Disable or Modify Tools Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.",
        "description": ".002 Disable Windows Event Logging Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections."
    },
    {
        "uniqueId": "003",
        "target": "003 Impair Command History Logging Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.",
        "description": ".004 Disable or Modify System Firewall Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel."
    },
    {
        "uniqueId": "006",
        "target": "006 Indicator Blocking An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation.",
        "description": ".007 Disable or Modify Cloud Firewall Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in Disable or Modify System Firewall."
    },
    {
        "uniqueId": "008",
        "target": "008 Disable or Modify Cloud Logs An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.",
        "description": ".009 Safe Mode Boot Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot."
    },
    {
        "uniqueId": "010",
        "target": "010 Downgrade Attack Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system\u2019s backward compatibility to force it into less secure modes of operation.",
        "description": ".011 Spoof Security Alerting Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders\u2019 awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident."
    },
    {
        "uniqueId": "012",
        "target": "012 Disable or Modify Linux Audit System Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.",
        "description": "T1656 Impersonation Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via Phishing for Information, Phishing, or Internal Spearphishing) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims."
    },
    {
        "uniqueId": "T1525",
        "target": "T1525 Implant Internal Image Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike Upload Malware, this technique focuses on adversaries implanting an image in a registry within a victim\u2019s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.",
        "description": "T1070 Indicator Removal Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform."
    },
    {
        "uniqueId": "001",
        "target": "001 Clear Windows Event Logs Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.",
        "description": ".002 Clear Linux or Mac System Logs Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the /var/log/ directory. Subfolders in this directory categorize logs by their related functions, such as:"
    },
    {
        "uniqueId": "003",
        "target": "003 Clear Command History In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.",
        "description": ".004 File Deletion Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."
    },
    {
        "uniqueId": "005",
        "target": "005 Network Share Connection Removal Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and SMB/Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the net use \\system\\share /delete command.",
        "description": ".006 Timestomp Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools."
    },
    {
        "uniqueId": "007",
        "target": "007 Clear Network Connection History and Configurations Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as Remote Services or External Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.",
        "description": ".008 Clear Mailbox Data Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests."
    },
    {
        "uniqueId": "009",
        "target": "009 Clear Persistence Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, Modify Registry, Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e. Create Account).",
        "description": "T1202 Indirect Command Execution Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking cmd. For example, Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a Command and Scripting Interpreter, Run window, or via scripts."
    },
    {
        "uniqueId": "T1105",
        "target": "T1105 Ingress Tool Transfer Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer).",
        "description": "T1490 Inhibit System Recovery Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options."
    },
    {
        "uniqueId": "T1056",
        "target": "T1056 Input Capture Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
        "description": ".001 Keylogging Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems."
    },
    {
        "uniqueId": "002",
        "target": "002 GUI Input Capture Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: Bypass User Account Control).",
        "description": ".003 Web Portal Capture Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service."
    },
    {
        "uniqueId": "004",
        "target": "004 Credential API Hooking Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:",
        "description": "T1559 Inter-Process Communication Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern."
    },
    {
        "uniqueId": "001",
        "target": "001 Component Object Model Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as Distributed Component Object Model (DCOM).",
        "description": ".002 Dynamic Data Exchange Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution."
    },
    {
        "uniqueId": "003",
        "target": "003 XPC Services Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service C API or the high level NSXPCConnection API in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.",
        "description": "T1534 Internal Spearphishing After they already have access to accounts or systems within the environment, adversaries may use internal spearphishing to gain access to additional information or compromise other users within the same organization. Internal spearphishing is multi-staged campaign where a legitimate account is initially compromised either by controlling the user's device or by compromising the account credentials of the user. Adversaries may then attempt to take advantage of the trusted internal account to increase the likelihood of tricking more victims into falling for phish attempts, often incorporating Impersonation."
    },
    {
        "uniqueId": "T1570",
        "target": "T1570 Lateral Tool Transfer Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e., Ingress Tool Transfer) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation.",
        "description": "T1654 Log Enumeration Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records (Account Discovery), security or vulnerable software (Software Discovery), or hosts within a compromised network (Remote System Discovery)."
    },
    {
        "uniqueId": "T1036",
        "target": "T1036 Masquerading Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.",
        "description": ".001 Invalid Code Signature Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files."
    },
    {
        "uniqueId": "002",
        "target": "002 Right-to-Left Override Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named March 25 \\u202Excod.scr will display as March 25 rcs.docx. A JavaScript file named photo_high_re\\u202Egnp.js will be displayed as photo_high_resj.png.",
        "description": ".003 Rename System Utilities Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename rundll32.exe). An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths."
    },
    {
        "uniqueId": "004",
        "target": "004 Masquerade Task or Service Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.",
        "description": ".005 Match Legitimate Name or Location Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous."
    },
    {
        "uniqueId": "006",
        "target": "006 Space after Filename Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.",
        "description": ".007 Double File Extension Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: File.txt.exe may render in some views as just File.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies."
    },
    {
        "uniqueId": "008",
        "target": "008 Masquerade File Type Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file, is 0xFF 0xD8 and the file extension is either .JPE, .JPEG or .JPG.",
        "description": ".009 Break Process Trees An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the \"parent-child\" relationship for detection, breaking this relationship could result in the adversary\u2019s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs."
    },
    {
        "uniqueId": "T1556",
        "target": "T1556 Modify Authentication Process Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.",
        "description": ".001 Domain Controller Authentication Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts."
    },
    {
        "uniqueId": "002",
        "target": "002 Password Filter DLL Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.",
        "description": ".003 Pluggable Authentication Modules Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in /etc/passwd and /etc/shadow."
    },
    {
        "uniqueId": "004",
        "target": "004 Network Device Authentication Adversaries may use Patch System Image to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.",
        "description": ".005 Reversible Encryption An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it."
    },
    {
        "uniqueId": "006",
        "target": "006 Multi-Factor Authentication Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.",
        "description": ".007 Hybrid Identity Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts."
    },
    {
        "uniqueId": "008",
        "target": "008 Network Provider DLL Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions. During the logon process, Winlogon (the interactive logon module) sends credentials to the local mpnotify.exe process via RPC. The mpnotify.exe process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.",
        "description": ".009 Conditional Access Policies Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource."
    },
    {
        "uniqueId": "T1578",
        "target": "T1578 Modify Cloud Compute Infrastructure An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.",
        "description": ".001 Create Snapshot An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in Revert Cloud Instance where an adversary may revert to a snapshot to evade detection and remove evidence of their presence."
    },
    {
        "uniqueId": "002",
        "target": "002 Create Cloud Instance An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may Create Snapshot of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect Data from Local System or for Remote Data Staging.",
        "description": ".003 Delete Cloud Instance An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable."
    },
    {
        "uniqueId": "004",
        "target": "004 Revert Cloud Instance An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.",
        "description": ".005 Modify Cloud Compute Configurations Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim\u2019s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim."
    },
    {
        "uniqueId": "T1112",
        "target": "T1112 Modify Registry Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.",
        "description": "T1601 Modify System Image Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves. On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file."
    },
    {
        "uniqueId": "001",
        "target": "001 Patch System Image Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses. Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file. Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.",
        "description": ".002 Downgrade System Image Adversaries may install an older version of the operating system of a network device to weaken security. Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features."
    },
    {
        "uniqueId": "T1111",
        "target": "T1111 Multi-Factor Authentication Interception Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms.",
        "description": "T1621 Multi-Factor Authentication Request Generation Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users."
    },
    {
        "uniqueId": "T1104",
        "target": "T1104 Multi-Stage Channels Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.",
        "description": "T1106 Native API Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations."
    },
    {
        "uniqueId": "T1599",
        "target": "T1599 Network Boundary Bridging Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.",
        "description": ".001 Network Address Translation Traversal Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks."
    },
    {
        "uniqueId": "T1498",
        "target": "T1498 Network Denial of Service Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.",
        "description": ".001 Direct Network Flood Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well."
    },
    {
        "uniqueId": "002",
        "target": "002 Reflection Amplification Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.",
        "description": "T1046 Network Service Discovery Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system."
    },
    {
        "uniqueId": "T1135",
        "target": "T1135 Network Share Discovery Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network.",
        "description": "T1040 Network Sniffing Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
    },
    {
        "uniqueId": "T1095",
        "target": "T1095 Non-Application Layer Protocol Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).",
        "description": "T1571 Non-Standard Port Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data."
    },
    {
        "uniqueId": "T1027",
        "target": "T1027 Obfuscated Files or Information Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.",
        "description": ".001 Binary Padding Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations."
    },
    {
        "uniqueId": "002",
        "target": "002 Software Packing Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.",
        "description": ".003 Steganography Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files."
    },
    {
        "uniqueId": "004",
        "target": "004 Compile After Delivery Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.",
        "description": ".005 Indicator Removal from Tools Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems."
    },
    {
        "uniqueId": "006",
        "target": "006 HTML Smuggling Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.",
        "description": ".007 Dynamic API Resolution Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various Native API functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts."
    },
    {
        "uniqueId": "008",
        "target": "008 Stripped Payloads Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system\u2019s linker when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.",
        "description": ".009 Embedded Payloads Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets."
    },
    {
        "uniqueId": "010",
        "target": "010 Command Obfuscation Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., Phishing and Drive-by Compromise) or interactively via Command and Scripting Interpreter.",
        "description": ".011 Fileless Storage Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository."
    },
    {
        "uniqueId": "012",
        "target": "012 LNK Icon Smuggling Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the IconEnvironmentDataBlock) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory.",
        "description": ".013 Encrypted/Encoded File Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as Software Packing, Steganography, and Embedded Payloads, share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., Deobfuscate/Decode Files or Information) at the time of execution/use."
    },
    {
        "uniqueId": "T1588",
        "target": "T1588 Obtain Capabilities Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.",
        "description": ".001 Malware Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors."
    },
    {
        "uniqueId": "002",
        "target": "002 Tool Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.",
        "description": ".003 Code Signing Certificates Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is."
    },
    {
        "uniqueId": "004",
        "target": "004 Digital Certificates Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.",
        "description": ".005 Exploits Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors."
    },
    {
        "uniqueId": "006",
        "target": "006 Vulnerabilities Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.",
        "description": ".007 Artificial Intelligence Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting Reconnaissance, creating basic scripts, assisting social engineering, and even developing payloads."
    },
    {
        "uniqueId": "T1137",
        "target": "T1137 Office Application Startup Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.",
        "description": ".001 Office Template Macros Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts."
    },
    {
        "uniqueId": "002",
        "target": "002 Office Test Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.",
        "description": ".003 Outlook Forms Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form."
    },
    {
        "uniqueId": "004",
        "target": "004 Outlook Home Page Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.",
        "description": ".005 Outlook Rules Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user."
    },
    {
        "uniqueId": "006",
        "target": "006 Add-ins Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins.",
        "description": "T1003 OS Credential Dumping Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures. Credentials can then be used to perform Lateral Movement and access restricted information."
    },
    {
        "uniqueId": "001",
        "target": "001 LSASS Memory Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.",
        "description": ".002 Security Account Manager Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access."
    },
    {
        "uniqueId": "003",
        "target": "003 NTDS Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller.",
        "description": ".004 LSA Secrets Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets. LSA secrets can also be dumped from memory."
    },
    {
        "uniqueId": "005",
        "target": "005 Cached Domain Credentials Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.",
        "description": ".006 DCSync Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync."
    },
    {
        "uniqueId": "007",
        "target": "007 Proc Filesystem Adversaries may gather credentials from the proc filesystem or /proc. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the /proc/<PID>/maps file shows how memory is mapped within the process\u2019s virtual address space. And /proc/<PID>/mem, exposed for debugging purposes, provides access to the process\u2019s virtual address space.",
        "description": ".008 /etc/passwd and /etc/shadow Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. Most modern Linux operating systems use a combination of /etc/passwd and /etc/shadow to store user account information including password hashes in /etc/shadow. By default, /etc/shadow is only readable by the root user."
    },
    {
        "uniqueId": "T1201",
        "target": "T1201 Password Policy Discovery Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through Brute Force. This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).",
        "description": "T1120 Peripheral Device Discovery Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions."
    },
    {
        "uniqueId": "T1069",
        "target": "T1069 Permission Groups Discovery Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.",
        "description": ".001 Local Groups Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group."
    },
    {
        "uniqueId": "002",
        "target": "002 Domain Groups Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.",
        "description": ".003 Cloud Groups Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group."
    },
    {
        "uniqueId": "T1566",
        "target": "T1566 Phishing Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.",
        "description": ".001 Spearphishing Attachment Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source."
    },
    {
        "uniqueId": "002",
        "target": "002 Spearphishing Link Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.",
        "description": ".003 Spearphishing via Service Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels."
    },
    {
        "uniqueId": "004",
        "target": "004 Spearphishing Voice Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.",
        "description": "T1598 Phishing for Information Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code."
    },
    {
        "uniqueId": "001",
        "target": "001 Spearphishing Service Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.",
        "description": ".002 Spearphishing Attachment Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages."
    },
    {
        "uniqueId": "003",
        "target": "003 Spearphishing Link Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.",
        "description": ".004 Spearphishing Voice Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient."
    },
    {
        "uniqueId": "T1647",
        "target": "T1647 Plist File Modification Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the info.plist file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.",
        "description": "T1653 Power Settings Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity."
    },
    {
        "uniqueId": "T1542",
        "target": "T1542 Pre-OS Boot Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.",
        "description": ".001 System Firmware Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer."
    },
    {
        "uniqueId": "002",
        "target": "002 Component Firmware Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components/devices that may not have the same capability or level of integrity checking.",
        "description": ".003 Bootkit Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly."
    },
    {
        "uniqueId": "004",
        "target": "004 ROMMONkit Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect.",
        "description": ".005 TFTP Boot Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images."
    },
    {
        "uniqueId": "T1057",
        "target": "T1057 Process Discovery Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
        "description": "T1055 Process Injection Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process."
    },
    {
        "uniqueId": "001",
        "target": "001 Dynamic-link Library Injection Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".002 Portable Executable Injection Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "003",
        "target": "003 Thread Execution Hijacking Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".004 Asynchronous Procedure Call Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "005",
        "target": "005 Thread Local Storage Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".008 Ptrace System Calls Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "009",
        "target": "009 Proc Memory Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".011 Extra Window Memory Injection Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "012",
        "target": "012 Process Hollowing Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".013 Process Doppelg\u00e4nging Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "014",
        "target": "014 VDSO Hijacking Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".015 ListPlanting Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process."
    },
    {
        "uniqueId": "T1572",
        "target": "T1572 Protocol Tunneling Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet.",
        "description": "T1090 Proxy Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic."
    },
    {
        "uniqueId": "001",
        "target": "001 Internal Proxy Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.",
        "description": ".002 External Proxy Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion."
    },
    {
        "uniqueId": "003",
        "target": "003 Multi-hop Proxy Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.",
        "description": ".004 Domain Fronting Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored)."
    },
    {
        "uniqueId": "T1012",
        "target": "T1012 Query Registry Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.",
        "description": "T1620 Reflective Code Loading Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., Shared Modules)."
    },
    {
        "uniqueId": "T1219",
        "target": "T1219 Remote Access Software An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as VNC, Team Viewer, AnyDesk, ScreenConnect, LogMein, AmmyyAdmin, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.",
        "description": "T1563 Remote Service Session Hijacking Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service."
    },
    {
        "uniqueId": "001",
        "target": "001 SSH Hijacking Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.",
        "description": ".002 RDP Hijacking Adversaries may hijack a legitimate user\u2019s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS)."
    },
    {
        "uniqueId": "T1021",
        "target": "T1021 Remote Services Adversaries may use Valid Accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.",
        "description": ".001 Remote Desktop Protocol Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user."
    },
    {
        "uniqueId": "002",
        "target": "002 SMB/Windows Admin Shares Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.",
        "description": ".003 Distributed Component Object Model Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user."
    },
    {
        "uniqueId": "004",
        "target": "004 SSH Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.",
        "description": ".005 VNC Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). VNC is a platform-independent desktop sharing system that uses the RFB (\"remote framebuffer\") protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network."
    },
    {
        "uniqueId": "006",
        "target": "006 Windows Remote Management Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.",
        "description": ".007 Cloud Services Adversaries may log into accessible cloud services within a compromised environment using Valid Accounts that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user."
    },
    {
        "uniqueId": "008",
        "target": "008 Direct Cloud VM Connections Adversaries may leverage Valid Accounts to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the Cloud API, such as Azure Serial Console, AWS EC2 Instance Connect, and AWS System Manager..",
        "description": "T1018 Remote System Discovery Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net."
    },
    {
        "uniqueId": "T1091",
        "target": "T1091 Replication Through Removable Media Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.",
        "description": "T1496 Resource Hijacking Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability."
    },
    {
        "uniqueId": "T1207",
        "target": "T1207 Rogue Domain Controller Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.",
        "description": "T1014 Rootkit Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information."
    },
    {
        "uniqueId": "T1053",
        "target": "T1053 Scheduled Task/Job Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.",
        "description": ".002 At Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of Scheduled Task's schtasks in Windows environments, using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group."
    },
    {
        "uniqueId": "003",
        "target": "003 Cron Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code. The cron utility is a time-based job scheduler for Unix-like operating systems. The crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths.",
        "description": ".005 Scheduled Task Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task."
    },
    {
        "uniqueId": "006",
        "target": "006 Systemd Timers Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension .timer that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to Cron in Linux environments. Systemd timers may be activated remotely via the systemctl command line utility, which operates over SSH.",
        "description": ".007 Container Orchestration Job Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster."
    },
    {
        "uniqueId": "T1029",
        "target": "T1029 Scheduled Transfer Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.",
        "description": "T1113 Screen Capture Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture."
    },
    {
        "uniqueId": "T1597",
        "target": "T1597 Search Closed Sources Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.",
        "description": ".001 Threat Intel Vendors Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures."
    },
    {
        "uniqueId": "002",
        "target": "002 Purchase Technical Data Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.",
        "description": "T1596 Search Open Technical Databases Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans."
    },
    {
        "uniqueId": "001",
        "target": "001 DNS/Passive DNS Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts.",
        "description": ".002 WHOIS Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers."
    },
    {
        "uniqueId": "003",
        "target": "003 Digital Certificates Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.",
        "description": ".004 CDNs Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor\u2019s geographical region."
    },
    {
        "uniqueId": "005",
        "target": "005 Scan Databases Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.",
        "description": "T1593 Search Open Websites/Domains Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts."
    },
    {
        "uniqueId": "001",
        "target": "001 Social Media Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.",
        "description": ".002 Search Engines Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes)."
    },
    {
        "uniqueId": "003",
        "target": "003 Code Repositories Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.",
        "description": "T1594 Search Victim-Owned Websites Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: Email Addresses). These sites may also have details highlighting business operations and relationships."
    },
    {
        "uniqueId": "T1505",
        "target": "T1505 Server Software Component Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.",
        "description": ".001 SQL Stored Procedures Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted)."
    },
    {
        "uniqueId": "002",
        "target": "002 Transport Agent Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks.",
        "description": ".003 Web Shell Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server."
    },
    {
        "uniqueId": "004",
        "target": "004 IIS Components Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: Get{Extension/Filter}Version, Http{Extension/Filter}Proc, and (optionally) Terminate{Extension/Filter}. IIS modules may also be installed to extend IIS web servers.",
        "description": ".005 Terminal Services DLL Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP."
    },
    {
        "uniqueId": "T1648",
        "target": "T1648 Serverless Execution Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers.",
        "description": "T1489 Service Stop Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment."
    },
    {
        "uniqueId": "T1129",
        "target": "T1129 Shared Modules Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).",
        "description": "T1072 Software Deployment Tools Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager."
    },
    {
        "uniqueId": "T1518",
        "target": "T1518 Software Discovery Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
        "description": ".001 Security Software Discovery Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
    },
    {
        "uniqueId": "T1608",
        "target": "T1608 Stage Capabilities Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.",
        "description": ".001 Upload Malware Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server."
    },
    {
        "uniqueId": "002",
        "target": "002 Upload Tool Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.",
        "description": ".003 Install Digital Certificate Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it."
    },
    {
        "uniqueId": "004",
        "target": "004 Drive-by Target Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as Application Access Token. Prior to Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).",
        "description": ".005 Link Target Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link."
    },
    {
        "uniqueId": "006",
        "target": "006 SEO Poisoning Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site\u2019s ranking/score/reputation calculated by their web crawlers and algorithms.",
        "description": "T1528 Steal Application Access Token Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources."
    },
    {
        "uniqueId": "T1649",
        "target": "T1649 Steal or Forge Authentication Certificates Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.",
        "description": "T1558 Steal or Forge Kerberos Tickets Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket. Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \"realms\", there are three basic participants: client, service, and Key Distribution Center (KDC). Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting. Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access."
    },
    {
        "uniqueId": "001",
        "target": "001 Golden Ticket Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory.",
        "description": ".002 Silver Ticket Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets."
    },
    {
        "uniqueId": "003",
        "target": "003 Kerberoasting Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force.",
        "description": ".004 AS-REP Roasting Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by Password Cracking Kerberos messages."
    },
    {
        "uniqueId": "T1539",
        "target": "T1539 Steal Web Session Cookie An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.",
        "description": "T1553 Subvert Trust Controls Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site."
    },
    {
        "uniqueId": "001",
        "target": "001 Gatekeeper Bypass Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple\u2019s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.",
        "description": ".002 Code Signing Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. Unlike Invalid Code Signature, this activity will result in a valid signature."
    },
    {
        "uniqueId": "003",
        "target": "003 SIP and Trust Provider Hijacking Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function, which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.",
        "description": ".004 Install Root Certificate Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website."
    },
    {
        "uniqueId": "005",
        "target": "005 Mark-of-the-Web Bypass Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named Zone.Identifier with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.",
        "description": ".006 Code Signing Policy Modification Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system."
    },
    {
        "uniqueId": "T1195",
        "target": "T1195 Supply Chain Compromise Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.",
        "description": ".001 Compromise Software Dependencies and Development Tools Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency."
    },
    {
        "uniqueId": "002",
        "target": "002 Compromise Software Supply Chain Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.",
        "description": ".003 Compromise Hardware Supply Chain Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals."
    },
    {
        "uniqueId": "T1218",
        "target": "T1218 System Binary Proxy Execution Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system. Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.",
        "description": ".001 Compiled HTML File Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. CHM content is displayed using underlying components of the Internet Explorer browser loaded by the HTML Help executable program (hh.exe)."
    },
    {
        "uniqueId": "002",
        "target": "002 Control Panel Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.",
        "description": ".003 CMSTP Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections."
    },
    {
        "uniqueId": "004",
        "target": "004 InstallUtil Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: C:\\Windows\\Microsoft.NET\\Framework\\v\\InstallUtil.exe and C:\\Windows\\Microsoft.NET\\Framework64\\v\\InstallUtil.exe.",
        "description": ".005 Mshta Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code"
    },
    {
        "uniqueId": "007",
        "target": "007 Msiexec Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.",
        "description": ".008 Odbcconf Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft."
    },
    {
        "uniqueId": "009",
        "target": "009 Regsvcs/Regasm Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.",
        "description": ".010 Regsvr32 Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft."
    },
    {
        "uniqueId": "011",
        "target": "011 Rundll32 Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).",
        "description": ".012 Verclsid Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell."
    },
    {
        "uniqueId": "013",
        "target": "013 Mavinject Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).",
        "description": ".014 MMC Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration."
    },
    {
        "uniqueId": "015",
        "target": "015 Electron Applications Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams. Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS. The Chromium engine is used to display web content and Node.js runs the backend code.",
        "description": "T1082 System Information Discovery An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
    },
    {
        "uniqueId": "T1614",
        "target": "T1614 System Location Discovery Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from System Location Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
        "description": ".001 System Language Discovery Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities."
    },
    {
        "uniqueId": "T1016",
        "target": "T1016 System Network Configuration Discovery Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.",
        "description": ".001 Internet Connection Discovery Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, tracert, and GET requests to websites."
    },
    {
        "uniqueId": "002",
        "target": "002 Wi-Fi Discovery Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of Account Discovery, Remote System Discovery, and other discovery or Credential Access activity to support both ongoing and future campaigns.",
        "description": "T1049 System Network Connections Discovery Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network."
    },
    {
        "uniqueId": "T1033",
        "target": "T1033 System Owner/User Discovery Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
        "description": "T1216 System Script Proxy Execution Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems."
    },
    {
        "uniqueId": "001",
        "target": "001 PubPrn Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the Windows Command Shell via Cscript.exe. For example, the following code publishes a printer within the specified domain: cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com.",
        "description": ".002 SyncAppvPublishingServer Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious PowerShell commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V). For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally."
    },
    {
        "uniqueId": "T1007",
        "target": "T1007 System Service Discovery Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as sc query, tasklist /svc, systemctl --type=service, and net start.",
        "description": "T1569 System Services Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence (Create or Modify System Process), but adversaries can also abuse services for one-time or temporary execution."
    },
    {
        "uniqueId": "001",
        "target": "001 Launchctl Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.",
        "description": ".002 Service Execution Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."
    },
    {
        "uniqueId": "T1529",
        "target": "T1529 System Shutdown/Reboot Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via Network Device CLI (e.g. reload).",
        "description": "T1124 System Time Discovery An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or systemsetup on macOS. These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain."
    },
    {
        "uniqueId": "T1080",
        "target": "T1080 Taint Shared Content Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.",
        "description": "T1221 Template Injection Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft\u2019s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered."
    },
    {
        "uniqueId": "T1205",
        "target": "T1205 Traffic Signaling Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.",
        "description": ".001 Port Knocking Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software."
    },
    {
        "uniqueId": "002",
        "target": "002 Socket Filters Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the libpcap library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.",
        "description": "T1537 Transfer Data to Cloud Account Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service."
    },
    {
        "uniqueId": "T1127",
        "target": "T1127 Trusted Developer Utilities Proxy Execution Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.",
        "description": ".001 MSBuild Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations."
    },
    {
        "uniqueId": "T1199",
        "target": "T1199 Trusted Relationship Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.",
        "description": "T1552 Unsecured Credentials Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys)."
    },
    {
        "uniqueId": "001",
        "target": "001 Credentials In Files Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.",
        "description": ".002 Credentials in Registry Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons."
    },
    {
        "uniqueId": "003",
        "target": "003 Bash History Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s .bash_history file. For each user, this file resides at the same location: ~/.bash_history. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.",
        "description": ".004 Private Keys Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc."
    },
    {
        "uniqueId": "005",
        "target": "005 Cloud Instance Metadata API Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.",
        "description": ".006 Group Policy Preferences Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts."
    },
    {
        "uniqueId": "007",
        "target": "007 Container API Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.",
        "description": ".008 Chat Messages Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels."
    },
    {
        "uniqueId": "T1535",
        "target": "T1535 Unused/Unsupported Cloud Regions Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.",
        "description": "T1550 Use Alternate Authentication Material Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    },
    {
        "uniqueId": "001",
        "target": "001 Application Access Token Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.",
        "description": ".002 Pass the Hash Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash."
    },
    {
        "uniqueId": "003",
        "target": "003 Pass the Ticket Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.",
        "description": ".004 Web Session Cookie Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated."
    },
    {
        "uniqueId": "T1204",
        "target": "T1204 User Execution An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of Phishing.",
        "description": ".001 Malicious Link An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File."
    },
    {
        "uniqueId": "002",
        "target": "002 Malicious File An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.",
        "description": ".003 Malicious Image Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container."
    },
    {
        "uniqueId": "T1078",
        "target": "T1078 Valid Accounts Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.",
        "description": ".001 Default Accounts Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes."
    },
    {
        "uniqueId": "002",
        "target": "002 Domain Accounts Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.",
        "description": ".003 Local Accounts Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
    },
    {
        "uniqueId": "004",
        "target": "004 Cloud Accounts Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory.",
        "description": "T1125 Video Capture An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files."
    },
    {
        "uniqueId": "T1497",
        "target": "T1497 Virtualization/Sandbox Evasion Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.",
        "description": ".001 System Checks Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
    },
    {
        "uniqueId": "002",
        "target": "002 User Activity Based Checks Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.",
        "description": ".003 Time Based Evasion Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time."
    },
    {
        "uniqueId": "T1600",
        "target": "T1600 Weaken Encryption Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications.",
        "description": ".001 Reduce Key Space Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications."
    },
    {
        "uniqueId": "002",
        "target": "002 Disable Crypto Hardware Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.",
        "description": "T1102 Web Service Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection."
    },
    {
        "uniqueId": "001",
        "target": "001 Dead Drop Resolver Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.",
        "description": ".002 Bidirectional Communication Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet."
    },
    {
        "uniqueId": "003",
        "target": "003 One-Way Communication Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.",
        "description": "T1047 Windows Management Instrumentation Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems. WMI is an administration feature that provides a uniform environment to access Windows system components."
    },
    {
        "uniqueId": "T1220",
        "target": "T1220 XSL Script Processing Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1567",
        "target": "T1567 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "C2",
        "target": "C2 Channel",
        "description": "Exfiltration Over Other Network Medium"
    },
    {
        "uniqueId": "T1567",
        "target": "T1567 Sub-techniques:  T1567.001, T1567.002, T1567.003, T1567.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "09",
        "target": "09 March 2020",
        "description": "Last Modified: 05 September 2023"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed has exfiltrated files using web services.[1]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 can exfiltrate data over Google Drive.[2]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 used Cloudflare services for data exfiltration.[3]"
    },
    {
        "uniqueId": "S0547",
        "target": "S0547 DropBook",
        "description": "DropBook has used legitimate web services to exfiltrate data.[4]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has used the Telegram API sendMessage to relay data on compromised devices.[5]"
    },
    {
        "uniqueId": "S0508",
        "target": "S0508 ngrok",
        "description": "ngrok has been used by threat actors to configure servers for data exfiltration.[6]"
    },
    {
        "uniqueId": "M1057",
        "target": "M1057 Data Loss Prevention",
        "description": "Data loss prevention can be detect and block sensitive data being uploaded to web services via web browsers."
    },
    {
        "uniqueId": "M1021",
        "target": "M1021 Restrict Web-Based Content",
        "description": "Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks or other features that could be abused to exfiltrate data."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections to web and cloud services associated with abnormal or non-browser processes."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Ilascu, I. (2020, December 14). Hacking group\u2019s new malware abuses Google and Facebook services. Retrieved December 28, 2020."
    },
    {
        "uniqueId": "T1213",
        "target": "T1213 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1213",
        "target": "T1213 Sub-techniques:  T1213.001, T1213.002, T1213.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 01 March 2024"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has collected files from various information repositories.[1]"
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6",
        "description": "FIN6 has collected schemas and user accounts from systems running SQL Server.[2]"
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten",
        "description": "Fox Kitten has accessed victim security and IT environments and Microsoft Teams to mine valuable information.[3]"
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$",
        "description": "LAPSUS$ has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials.[4]"
    },
    {
        "uniqueId": "S0598",
        "target": "S0598 P.A.S. Webshell",
        "description": "P.A.S. Webshell has the ability to list and extract data from SQL databases.[5]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team exfiltrates data of interest from enterprise databases using Adminer.[6]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations.[7]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla has used a custom .NET tool to collect documents from an organization's internal central database.[8]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Consider periodic review of accounts and privileges for critical and sensitive repositories."
    },
    {
        "uniqueId": "M1032",
        "target": "M1032 Multi-factor Authentication",
        "description": "Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization."
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Develop and publish policies that define acceptable information to be stored in repositories."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. [9] Sharepoint audit logging can also be configured to report when a user shares a resource. [10]The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. [11] Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities."
    },
    {
        "uniqueId": "FIN6",
        "target": "FIN6 Cybercrime Group Expands Threat to eCommerce Merchants. Retrieved September 16, 2019.",
        "description": "CISA. (2020, September 15). Iran-Based Threat Actor Exploits VPN Vulnerabilities. Retrieved December 21, 2020."
    },
    {
        "uniqueId": "M365",
        "target": "M365 Defender. (2022, March 24). DEV-0537 Criminal Actor Targeting Organizations for Data Exfiltration and Destruction. Retrieved May 17, 2022.",
        "description": "ANSSI. (2021, January 27). SANDWORM INTRUSION SET CAMPAIGN TARGETING CENTREON SYSTEMS. Retrieved March 30, 2021."
    },
    {
        "uniqueId": "T1558",
        "target": "T1558 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1558",
        "target": "T1558 Sub-techniques:  T1558.001, T1558.002, T1558.003, T1558.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "11",
        "target": "11 February 2020",
        "description": "Last Modified: 01 March 2024"
    },
    {
        "uniqueId": "M1015",
        "target": "M1015 Active Directory Configuration",
        "description": "For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.[9]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses."
    },
    {
        "uniqueId": "M1041",
        "target": "M1041 Encrypt Sensitive Information",
        "description": "Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.[10]"
    },
    {
        "uniqueId": "M1027",
        "target": "M1027 Password Policies",
        "description": "Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.[10] Also consider using Group Managed Service Accounts or another third party product such as password vaulting.[10]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts."
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Credential Request",
        "description": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.[11][12][13]Monitor the lifetime of TGT tickets for values that differ from the default domain duration.[14] Monitor for indications of Pass the Ticket being used to move laterally."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for unexpected processes interacting with lsass.exe.[15] Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing secrets.ldb and .secrets.mkey located in /var/lib/sss/secrets/."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Metadata",
        "description": "Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).[16] [10]"
    },
    {
        "uniqueId": "180",
        "target": "180 days. Retrieved November 5, 2020.",
        "description": "Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast \u2013 Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018."
    },
    {
        "uniqueId": "T1654",
        "target": "T1654 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1655",
        "target": "T1655 Sub-techniques:  T1655.001",
        "description": "Tactic Type: Post-Adversary Device Access"
    },
    {
        "uniqueId": "31",
        "target": "31 Version: 1.0",
        "description": "Created: 12 July 2023"
    },
    {
        "uniqueId": "08",
        "target": "08 September 2023",
        "description": "Version Permalink"
    },
    {
        "uniqueId": "M1011",
        "target": "M1011 User Guidance",
        "description": "Users should be encouraged to only install apps from authorized app stores, which are less likely to contain malicious repackaged apps."
    },
    {
        "uniqueId": "DS0041",
        "target": "DS0041 Application Vetting API Calls",
        "description": "Application vetting services may potentially determine if an application contains suspicious code and/or metadata."
    },
    {
        "uniqueId": "DS0042",
        "target": "DS0042 User Interface System Notifications",
        "description": "Unexpected behavior from an application could be an indicator of masquerading."
    },
    {
        "uniqueId": "T1588",
        "target": "T1588 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1588",
        "target": "T1588 Sub-techniques:  T1588.001, T1588.002, T1588.003, T1588.004, T1588.005, T1588.006, T1588.007",
        "description": "\u24d8"
    },
    {
        "uniqueId": "01",
        "target": "01 October 2020",
        "description": "Last Modified: 18 October 2021"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    },
    {
        "uniqueId": "DS0037",
        "target": "DS0037 Certificate Certificate Registration",
        "description": "Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[4] Some server-side components of adversary tools may have default values set for SSL/TLS certificates.[5] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    },
    {
        "uniqueId": "DS0035",
        "target": "DS0035 Internet Scan Response Content",
        "description": "Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal capabilities that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    },
    {
        "uniqueId": "DS0004",
        "target": "DS0004 Malware Repository Malware Content",
        "description": "Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.[6] Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in Cobalt Strike payloads.[7]"
    },
    {
        "uniqueId": "T1095",
        "target": "T1095 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "C2",
        "target": "C2 server or among infected hosts within a network. The list of possible protocols is extensive.[1] Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).",
        "description": "ICMP communication between hosts is one example.[2] Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.[3] However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications."
    },
    {
        "uniqueId": "T1095",
        "target": "T1095 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 29 September 2023"
    },
    {
        "uniqueId": "C0034",
        "target": "C0034 2022 Ukraine Electric Power Attack",
        "description": "During the 2022 Ukraine Electric Power Attack, Sandworm Team proxied C2 communications within a TLS-based tunnel.[4]"
    },
    {
        "uniqueId": "S0504",
        "target": "S0504 Anchor",
        "description": "Anchor has used ICMP in C2 communications.[5]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "An APT3 downloader establishes SOCKS5 connections for its initial C2.[6]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has used TCP in C2 communications.[7]"
    },
    {
        "uniqueId": "S1029",
        "target": "S1029 AuTo Stealer",
        "description": "AuTo Stealer can use TCP to communicate with command and control servers.[8]"
    },
    {
        "uniqueId": "G0135",
        "target": "G0135 BackdoorDiplomacy",
        "description": "BackdoorDiplomacy has used EarthWorm for network tunneling with a SOCKS5 server and port transfer functionalities.[9]"
    },
    {
        "uniqueId": "S0234",
        "target": "S0234 Bandook",
        "description": "Bandook has a command built in to use a raw TCP socket.[10]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal has used raw sockets for network communication.[11]"
    },
    {
        "uniqueId": "G1002",
        "target": "G1002 BITTER",
        "description": "BITTER has used TCP for C2 communications.[12]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 has the ability to use TCP for external C2.[13]"
    },
    {
        "uniqueId": "S0043",
        "target": "S0043 BUBBLEWRAP",
        "description": "BUBBLEWRAP can communicate using SOCKS.[14]"
    },
    {
        "uniqueId": "C0021",
        "target": "C0021 C0021",
        "description": "During C0021, the threat actors used TCP for some C2 communications.[15]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon uses TCP and UDP for C2.[16]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling has the ability to use TCP and UDP for communication.[17]"
    },
    {
        "uniqueId": "S1105",
        "target": "S1105 COATHANGER",
        "description": "COATHANGER uses ICMP for transmitting configuration information to and from its command and control server.[18]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can be configured to use TCP, ICMP, and UDP for C2 communications.[19][20]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson uses a custom TCP protocol for C2.[21][22]"
    },
    {
        "uniqueId": "S0498",
        "target": "S0498 Cryptoistic",
        "description": "Cryptoistic can use TCP in communications with C2.[23]"
    },
    {
        "uniqueId": "C0029",
        "target": "C0029 Cutting Edge",
        "description": "During Cutting Edge, threat actors used the Unix socket and a reverse TCP shell for C2 communications.[24]"
    },
    {
        "uniqueId": "S0021",
        "target": "S0021 Derusbi",
        "description": "Derusbi binds to a raw socket on a random source port between 31800 and 31900 for C2.[25]"
    },
    {
        "uniqueId": "S0502",
        "target": "S0502 Drovorub",
        "description": "Drovorub can use TCP to communicate between its agent and client modules.[26]"
    },
    {
        "uniqueId": "S0076",
        "target": "S0076 FakeM",
        "description": "Some variants of FakeM use SSL to communicate with C2 servers.[27]"
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6",
        "description": "FIN6 has used Metasploit Bind and Reverse TCP stagers.[28]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can communicate with C2 over TCP and UDP.[29]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium has the ability to use TCP and UDP in C2 communications.[30]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT has used an encrypted protocol within TCP segments to communicate with the C2.[31]"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM has used TCP for C2.[32]"
    },
    {
        "uniqueId": "S0394",
        "target": "S0394 HiddenWasp",
        "description": "HiddenWasp communicates with a simple network protocol over TCP.[33]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole has used TCP to download additional modules.[34]"
    },
    {
        "uniqueId": "S1051",
        "target": "S1051 KEYPLUG",
        "description": "KEYPLUG can use TCP and KCP (KERN Communications Protocol) over UDP for C2 communication.[35]"
    },
    {
        "uniqueId": "S1121",
        "target": "S1121 LITTLELAMB.WOOLTEA",
        "description": "LITTLELAMB.WOOLTEA can function as a stand-alone backdoor communicating over the /tmp/clientsDownload.sock socket.[24]"
    },
    {
        "uniqueId": "S0582",
        "target": "S0582 LookBack",
        "description": "LookBack uses a custom binary protocol over sockets for C2 communications.[36]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa has used a custom JSON-based protocol for its C&C communications.[37]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can use raw TCP for C2.[38]"
    },
    {
        "uniqueId": "G1013",
        "target": "G1013 Metador",
        "description": "Metador has used TCP for C2.[38]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can establish an indirect and raw TCP socket-based connection to the C2 server.[38][39]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo has used raw TCP for C2.[40]"
    },
    {
        "uniqueId": "S0084",
        "target": "S0084 Mis-Type",
        "description": "Mis-Type network traffic can communicate over a raw socket.[41]"
    },
    {
        "uniqueId": "S0083",
        "target": "S0083 Misdat",
        "description": "Misdat network traffic communicates over a raw socket.[41]"
    },
    {
        "uniqueId": "S0149",
        "target": "S0149 MoonWind",
        "description": "MoonWind completes network communication via raw sockets.[42]"
    },
    {
        "uniqueId": "S0699",
        "target": "S0699 Mythic",
        "description": "Mythic supports WebSocket and TCP-based C2 profiles.[43]"
    },
    {
        "uniqueId": "S0630",
        "target": "S0630 Nebulae",
        "description": "Nebulae can use TCP in C2 communications.[44]"
    },
    {
        "uniqueId": "S0034",
        "target": "S0034 NETEAGLE",
        "description": "If NETEAGLE does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number, NETEAGLE will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.[45]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can use TCP in C2 communications.[46][47]"
    },
    {
        "uniqueId": "S1100",
        "target": "S1100 Ninja",
        "description": "Ninja can forward TCP packets between the C2 and a remote host.[48][49]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors used a custom protocol for command and control.[50]"
    },
    {
        "uniqueId": "S0352",
        "target": "S0352 OSX_OCEANLOTUS.D",
        "description": "OSX_OCEANLOTUS.D has used a custom binary protocol over port 443 for C2 traffic.[51]"
    },
    {
        "uniqueId": "S0556",
        "target": "S0556 Pay2Key",
        "description": "Pay2Key has sent its public key to the C2 server over TCP.[52]"
    },
    {
        "uniqueId": "S0587",
        "target": "S0587 Penquin",
        "description": "The Penquin C2 mechanism is based on TCP and UDP packets.[53][54]"
    },
    {
        "uniqueId": "S0158",
        "target": "S0158 PHOREAL",
        "description": "PHOREAL communicates via ICMP for C2.[55]"
    },
    {
        "uniqueId": "S1031",
        "target": "S1031 PingPull",
        "description": "PingPull variants have the ability to communicate with C2 servers using ICMP or TCP.[56]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "The PipeMon communication module can use a custom protocol based on TLS over TCP.[57]"
    },
    {
        "uniqueId": "G0068",
        "target": "G0068 PLATINUM",
        "description": "PLATINUM has used the Intel\u00ae Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.[58]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX can be configured to use raw TCP or UDP for command and control.[59]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot has the ability use TCP to send or receive C2 packets.[60]"
    },
    {
        "uniqueId": "S0262",
        "target": "S0262 QuasarRAT",
        "description": "QuasarRAT can use TCP for C2 communication.[61]"
    },
    {
        "uniqueId": "S1084",
        "target": "S1084 QUIETEXIT",
        "description": "QUIETEXIT can establish a TCP connection as part of its initial connection to the C2.[62]"
    },
    {
        "uniqueId": "S0629",
        "target": "S0629 RainyDay",
        "description": "RainyDay can use TCP in C2 communications.[44]"
    },
    {
        "uniqueId": "S0055",
        "target": "S0055 RARSTONE",
        "description": "RARSTONE uses SSL to encrypt its communication with its C2 server.[63]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession has the ability to use TCP and UDP in C2 communications.[17][64]"
    },
    {
        "uniqueId": "S0172",
        "target": "S0172 Reaver",
        "description": "Some Reaver variants use raw TCP for C2.[65]"
    },
    {
        "uniqueId": "S0019",
        "target": "S0019 Regin",
        "description": "The Regin malware platform can use ICMP to communicate between infected computers.[66]"
    },
    {
        "uniqueId": "S0125",
        "target": "S0125 Remsec",
        "description": "Remsec is capable of using ICMP, TCP, and UDP for C2.[67][68]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "RotaJakiro uses a custom binary protocol using a type, length, value format over TCP.[69]"
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal establishes a TCP socket for C2 communication using the API WSASocketW.[70]"
    },
    {
        "uniqueId": "S1099",
        "target": "S1099 Samurai",
        "description": "Samurai can use a proxy module to forward TCP packets to external hosts.[48]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic can communicate with actor-controlled C2 servers by using a custom little-endian binary protocol.[71]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot has the ability to communicate with C2 with TCP over port 443.[72]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has used UDP for C2 communications.[73]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT has the ability to use TCP sockets to send data and ICMP to ping the C2 server.[74][75]"
    },
    {
        "uniqueId": "S1049",
        "target": "S1049 SUGARUSH",
        "description": "SUGARUSH has used TCP for C2.[76]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor can use TCP for C2 communications.[77]"
    },
    {
        "uniqueId": "G1022",
        "target": "G1022 ToddyCat",
        "description": "ToddyCat has used a passive backdoor that receives commands with UDP packets.[49]"
    },
    {
        "uniqueId": "S0436",
        "target": "S0436 TSCookie",
        "description": "TSCookie can use ICMP to receive information on the destination server.[78]"
    },
    {
        "uniqueId": "S0221",
        "target": "S0221 Umbreon",
        "description": "Umbreon provides access to the system via SSH or any other protocol that uses PAM to authenticate.[79]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can communicate through custom methodologies for UDP, ICMP, and TCP that use distinct sessions to ride over the legitimate protocols.[80]"
    },
    {
        "uniqueId": "S0670",
        "target": "S0670 WarzoneRAT",
        "description": "WarzoneRAT can communicate with its C2 server via TCP over port 5200.[81]"
    },
    {
        "uniqueId": "S0515",
        "target": "S0515 WellMail",
        "description": "WellMail can use TCP for C2 communications.[82]"
    },
    {
        "uniqueId": "S0155",
        "target": "S0155 WINDSHIELD",
        "description": "WINDSHIELD C2 traffic can communicate via TCP raw sockets.[55]"
    },
    {
        "uniqueId": "S0430",
        "target": "S0430 Winnti for Linux",
        "description": "Winnti for Linux has used ICMP, custom TCP, and UDP in outbound communications.[83]"
    },
    {
        "uniqueId": "S0141",
        "target": "S0141 Winnti for Windows",
        "description": "Winnti for Windows can communicate using custom TCP.[84]"
    },
    {
        "uniqueId": "S1114",
        "target": "S1114 ZIPLINE",
        "description": "ZIPLINE can communicate with C2 using a custom binary protocol.[85]"
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Filter network traffic to prevent use of protocols across the network boundary that are unnecessary."
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level."
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems. Also ensure hosts are only provisioned to communicate over authorized interfaces."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Check Point. (2020, November 26). Bandook: Signed & Delivered. Retrieved May 31, 2021.",
        "description": "Mercer, W., et al. (2020, March 5). Bisonal: 10 years of play. Retrieved January 26, 2022."
    },
    {
        "uniqueId": "APT29",
        "target": "APT29 Phishing Campaign. Retrieved November 27, 2018.",
        "description": "ESET. (2017, March 30). Carbon Paper: Peering into Turla\u2019s second stage backdoor. Retrieved November 7, 2018."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Raggi, M. Schwarz, D.. (2019, August 1). LookBack Malware Targets the United States Utilities Sector with Phishing Attacks Impersonating Engineering Licensing Boards. Retrieved February 25, 2021."
    },
    {
        "uniqueId": "APT30",
        "target": "APT30 AND THE MECHANICS OF A LONG-RUNNING CYBER ESPIONAGE OPERATION. Retrieved May 1, 2015.",
        "description": "Lambert, T. (2020, January 29). Intro to Netwire. Retrieved January 7, 2021."
    },
    {
        "uniqueId": "APT32",
        "target": "APT32 and the Threat to Global Corporations. Retrieved June 18, 2017.",
        "description": "Unit 42. (2022, June 13). GALLIUM Expands Targeting Across Telecommunications, Government and Finance Sectors With New PingPull Tool. Retrieved August 7, 2022."
    },
    {
        "uniqueId": "3390",
        "target": "3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",
        "description": "Kuzmenko, A. et al. (2021, September 2). QakBot technical analysis. Retrieved September 27, 2021."
    },
    {
        "uniqueId": "APT27",
        "target": "APT27 Turns to Ransomware. Retrieved November 12, 2021.",
        "description": "Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Schwarz, D. et al. (2019, October 16). TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "Mandiant Israel Research Team. (2022, August 17). Suspected Iranian Actor Targeting Israeli Shipping, Healthcare, Government and Energy Sectors. Retrieved September 21, 2022."
    },
    {
        "uniqueId": "v2",
        "target": "v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021.",
        "description": "Tomonaga, S.. (2019, September 18). Malware Used by BlackTech after Network Intrusion. Retrieved May 6, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMAIL. Retrieved September 29, 2020.",
        "description": "Chronicle Blog. (2019, May 15). Winnti: More than just Windows and Gates. Retrieved April 29, 2020."
    },
    {
        "uniqueId": "TA0006",
        "target": "TA0006 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "Home"
    },
    {
        "uniqueId": "TA0006",
        "target": "TA0006 Created: 17 October 2018",
        "description": "Last Modified: 19 July 2019"
    },
    {
        "uniqueId": "17",
        "target": "17 ID Name Description",
        "description": "T1557 Adversary-in-the-Middle Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing, Transmitted Data Manipulation, or replay attacks (Exploitation for Credential Access). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions."
    },
    {
        "uniqueId": "001",
        "target": "001 LLMNR/NBT-NS Poisoning and SMB Relay By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.",
        "description": ".002 ARP Cache Poisoning Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation."
    },
    {
        "uniqueId": "003",
        "target": "003 DHCP Spoofing Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.",
        "description": "T1110 Brute Force Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes."
    },
    {
        "uniqueId": "001",
        "target": "001 Password Guessing Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.",
        "description": ".002 Password Cracking Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping can be used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Further, adversaries may leverage Data from Configuration Repository in order to obtain hashed credentials for network devices."
    },
    {
        "uniqueId": "003",
        "target": "003 Password Spraying Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.",
        "description": ".004 Credential Stuffing Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts."
    },
    {
        "uniqueId": "T1555",
        "target": "T1555 Credentials from Password Stores Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
        "description": ".001 Keychain Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service."
    },
    {
        "uniqueId": "002",
        "target": "002 Securityd Memory An adversary with root access may gather credentials by reading securityd\u2019s memory. securityd is a service/daemon responsible for implementing security protocols such as encryption and authorization. A privileged adversary may be able to scan through securityd's memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.",
        "description": ".003 Credentials from Web Browsers Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers."
    },
    {
        "uniqueId": "004",
        "target": "004 Windows Credential Manager Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).",
        "description": ".005 Password Managers Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk."
    },
    {
        "uniqueId": "006",
        "target": "006 Cloud Secrets Management Stores Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.",
        "description": "T1212 Exploitation for Credential Access Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. "
    },
    {
        "uniqueId": "T1187",
        "target": "T1187 Forced Authentication Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.",
        "description": "T1606 Forge Web Credentials Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access."
    },
    {
        "uniqueId": "001",
        "target": "001 Web Cookies Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.",
        "description": ".002 SAML Tokens An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in the NotOnOrAfter value of the conditions ... element in a token. This value can be changed using the AccessTokenLifetime in a LifetimeTokenPolicy. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism."
    },
    {
        "uniqueId": "T1056",
        "target": "T1056 Input Capture Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).",
        "description": ".001 Keylogging Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems."
    },
    {
        "uniqueId": "002",
        "target": "002 GUI Input Capture Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: Bypass User Account Control).",
        "description": ".003 Web Portal Capture Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service."
    },
    {
        "uniqueId": "004",
        "target": "004 Credential API Hooking Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:",
        "description": "T1556 Modify Authentication Process Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts."
    },
    {
        "uniqueId": "001",
        "target": "001 Domain Controller Authentication Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.",
        "description": ".002 Password Filter DLL Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated."
    },
    {
        "uniqueId": "003",
        "target": "003 Pluggable Authentication Modules Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in /etc/passwd and /etc/shadow.",
        "description": ".004 Network Device Authentication Adversaries may use Patch System Image to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices."
    },
    {
        "uniqueId": "005",
        "target": "005 Reversible Encryption An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.",
        "description": ".006 Multi-Factor Authentication Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts."
    },
    {
        "uniqueId": "007",
        "target": "007 Hybrid Identity Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.",
        "description": ".008 Network Provider DLL Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions. During the logon process, Winlogon (the interactive logon module) sends credentials to the local mpnotify.exe process via RPC. The mpnotify.exe process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening."
    },
    {
        "uniqueId": "009",
        "target": "009 Conditional Access Policies Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.",
        "description": "T1111 Multi-Factor Authentication Interception Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms."
    },
    {
        "uniqueId": "T1621",
        "target": "T1621 Multi-Factor Authentication Request Generation Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.",
        "description": "T1040 Network Sniffing Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
    },
    {
        "uniqueId": "T1003",
        "target": "T1003 OS Credential Dumping Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures. Credentials can then be used to perform Lateral Movement and access restricted information.",
        "description": ".001 LSASS Memory Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material."
    },
    {
        "uniqueId": "002",
        "target": "002 Security Account Manager Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access.",
        "description": ".003 NTDS Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller."
    },
    {
        "uniqueId": "004",
        "target": "004 LSA Secrets Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets. LSA secrets can also be dumped from memory.",
        "description": ".005 Cached Domain Credentials Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable."
    },
    {
        "uniqueId": "006",
        "target": "006 DCSync Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.",
        "description": ".007 Proc Filesystem Adversaries may gather credentials from the proc filesystem or /proc. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the /proc/<PID>/maps file shows how memory is mapped within the process\u2019s virtual address space. And /proc/<PID>/mem, exposed for debugging purposes, provides access to the process\u2019s virtual address space."
    },
    {
        "uniqueId": "008",
        "target": "008 /etc/passwd and /etc/shadow Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. Most modern Linux operating systems use a combination of /etc/passwd and /etc/shadow to store user account information including password hashes in /etc/shadow. By default, /etc/shadow is only readable by the root user.",
        "description": "T1528 Steal Application Access Token Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources."
    },
    {
        "uniqueId": "T1649",
        "target": "T1649 Steal or Forge Authentication Certificates Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.",
        "description": "T1558 Steal or Forge Kerberos Tickets Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket. Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \"realms\", there are three basic participants: client, service, and Key Distribution Center (KDC). Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting. Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access."
    },
    {
        "uniqueId": "001",
        "target": "001 Golden Ticket Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory.",
        "description": ".002 Silver Ticket Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets."
    },
    {
        "uniqueId": "003",
        "target": "003 Kerberoasting Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force.",
        "description": ".004 AS-REP Roasting Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by Password Cracking Kerberos messages."
    },
    {
        "uniqueId": "T1539",
        "target": "T1539 Steal Web Session Cookie An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.",
        "description": "T1552 Unsecured Credentials Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys)."
    },
    {
        "uniqueId": "001",
        "target": "001 Credentials In Files Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.",
        "description": ".002 Credentials in Registry Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons."
    },
    {
        "uniqueId": "003",
        "target": "003 Bash History Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s .bash_history file. For each user, this file resides at the same location: ~/.bash_history. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.",
        "description": ".004 Private Keys Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc."
    },
    {
        "uniqueId": "005",
        "target": "005 Cloud Instance Metadata API Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.",
        "description": ".006 Group Policy Preferences Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts."
    },
    {
        "uniqueId": "007",
        "target": "007 Container API Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.",
        "description": ".008 Chat Messages Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "RESOURCES"
    },
    {
        "uniqueId": "404",
        "target": "404 errors when links are clicked.",
        "description": "See an example"
    },
    {
        "uniqueId": "365",
        "target": "365 Defender",
        "description": "Blake Strom, Microsoft Threat Intelligence"
    },
    {
        "uniqueId": "themalwareman1",
        "target": "themalwareman1 David Hughes, BT Security",
        "description": "David Lu, Tripwire"
    },
    {
        "uniqueId": "elisalem9",
        "target": "elisalem9 Elia Florio, Microsoft",
        "description": "Eliav Livneh"
    },
    {
        "uniqueId": "jbradley89",
        "target": "jbradley89 Jason Sevilla",
        "description": "Jay Chen, Palo Alto Networks"
    },
    {
        "uniqueId": "krish203",
        "target": "krish203 Kyaw Pyiyt Htet, @KyawPyiytHtet",
        "description": "Kyoung-ju Kwak (S2W)"
    },
    {
        "uniqueId": "Lab52",
        "target": "Lab52 by S2 Grupo",
        "description": "Lacework Labs"
    },
    {
        "uniqueId": "mgreen27",
        "target": "mgreen27 Matt Kelly, @breakersall",
        "description": "Matt Mullins"
    },
    {
        "uniqueId": "loki248",
        "target": "loki248 Noam Lifshitz, Sygnia",
        "description": "NST Assure Research Team, NetSentries Technologies"
    },
    {
        "uniqueId": "pjcampbe11",
        "target": "pjcampbe11 Patrick Sungbahadoor",
        "description": "Paul Speulstra, AECOM Global Security Operations Center"
    },
    {
        "uniqueId": "365",
        "target": "365 Defender",
        "description": "Pawel Partyka, Microsoft Threat Intelligence"
    },
    {
        "uniqueId": "robwinchester3",
        "target": "robwinchester3 Robert Falcone",
        "description": "Robert Simmons, @MalwareUtkonos"
    },
    {
        "uniqueId": "shotgunner101",
        "target": "shotgunner101 Runa Sandvik",
        "description": "Ryan Becwar"
    },
    {
        "uniqueId": "Defender365",
        "target": "Defender365 SarathKumar Rajendran, Trimble Inc",
        "description": "SCILabs"
    },
    {
        "uniqueId": "Rapid7",
        "target": "Rapid7 Teodor Cimpoesu",
        "description": "Thanabodi Phrakhun, @naikordian"
    },
    {
        "uniqueId": "T1134",
        "target": "T1134 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1134",
        "target": "T1134 Sub-techniques:  T1134.001, T1134.002, T1134.003, T1134.004, T1134.005",
        "description": "\u24d8"
    },
    {
        "uniqueId": "14",
        "target": "14 December 2017",
        "description": "Last Modified: 30 March 2023"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can gain system level privilege by passing SeDebugPrivilege to the AdjustTokenPrivilege API.[2]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat has the ability modify access tokens.[3][4]"
    },
    {
        "uniqueId": "G0108",
        "target": "G0108 Blue Mockingbird",
        "description": "Blue Mockingbird has used JuicyPotato to abuse the SeImpersonate token privilege to escalate from web application pool accounts to NT Authority\\SYSTEM.[5]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for local NT AUTHORITY\\SYSTEM privilege escalation.[6]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba has used SeDebugPrivilege and AdjustTokenPrivileges to elevate privileges.[7]"
    },
    {
        "uniqueId": "S0038",
        "target": "S0038 Duqu",
        "description": "Duqu examines running system processes for tokens that have specific system privileges. If it finds one, it will copy the token and store it for later use. Eventually it will start new processes with the stored token attached. It can also steal tokens to acquire administrative privileges.[8]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can use PowerSploit's Invoke-TokenManipulation to manipulate access tokens.[9]"
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6",
        "description": "FIN6 has used has used Metasploit\u2019s named-pipe impersonation technique to escalate privileges.[10]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can use token manipulation to bypass UAC on Windows7 systems.[11]"
    },
    {
        "uniqueId": "S0697",
        "target": "S0697 HermeticWiper",
        "description": "HermeticWiper can use AdjustTokenPrivileges to grant itself privileges for debugging with SeDebugPrivilege, creating backups with SeBackupPrivilege, loading drivers with SeLoadDriverPrivilege, and shutting down a local system with SeShutdownPrivilege.[12][13]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can adjust token privileges.[14]"
    },
    {
        "uniqueId": "S0607",
        "target": "S0607 KillDisk",
        "description": "KillDisk has attempted to get the access token of a process by calling OpenProcessToken. If KillDisk gets the access token, then it attempt to modify the token privileges with AdjustTokenPrivileges.[15]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can use AdjustTokenPrivileges() to elevate privileges.[16]"
    },
    {
        "uniqueId": "S0576",
        "target": "S0576 MegaCortex",
        "description": "MegaCortex can enable SeDebugPrivilege and adjust token privileges.[17]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 can use Invoke-TokenManipulation for manipulating tokens.[18]"
    },
    {
        "uniqueId": "S0194",
        "target": "S0194 PowerSploit",
        "description": "PowerSploit's Invoke-TokenManipulation Exfiltration module can be used to manipulate tokens.[19][20]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk has attempted to adjust its token privileges to have the SeDebugPrivilege.[21]"
    },
    {
        "uniqueId": "S0633",
        "target": "S0633 Sliver",
        "description": "Sliver has the ability to manipulate user tokens on targeted Windows systems.[22][23]"
    },
    {
        "uniqueId": "S0058",
        "target": "S0058 SslMM",
        "description": "SslMM contains a feature to manipulate process privileges and tokens.[24]"
    },
    {
        "uniqueId": "S0562",
        "target": "S0562 SUNSPOT",
        "description": "SUNSPOT modified its security token to grants itself debugging privileges by adding SeDebugPrivilege.[25]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object. [26] Also define who can create a process level token to only the local and network service through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token.[27]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require."
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Object Modification",
        "description": "Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.[29]"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., LogonUser [30], DuplicateTokenEx[31], and ImpersonateLoggedOnUser[32]). Please see the referenced Windows API pages for more information."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Metadata",
        "description": "Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Roccio, T., et al. (2021, April). Technical Analysis of Cuba Ransomware. Retrieved June 18, 2021."
    },
    {
        "uniqueId": "FIN6",
        "target": "FIN6 Intrusion, an Actor Recently Tied to Ryuk and LockerGoga Ransomware. Retrieved April 17, 2019.",
        "description": "Dupuy, T. and Faou, M. (2021, June). Gelsemium. Retrieved November 30, 2021."
    },
    {
        "uniqueId": "T1136",
        "target": "T1136 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1136",
        "target": "T1136 Sub-techniques:  T1136.001, T1136.002, T1136.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "14",
        "target": "14 December 2017",
        "description": "Last Modified: 31 January 2024"
    },
    {
        "uniqueId": "C0025",
        "target": "C0025 2016 Ukraine Electric Power Attack",
        "description": "During the 2016 Ukraine Electric Power Attack, Sandworm Team added a login to a SQL Server with sp_addlinkedsrvlogin.[2]"
    },
    {
        "uniqueId": "G0119",
        "target": "G0119 Indrik Spider",
        "description": "Indrik Spider used wmic.exe to add a new user to the system.[1]"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider",
        "description": "Scattered Spider creates new user identities within the compromised organization.[3]"
    },
    {
        "uniqueId": "M1032",
        "target": "M1032 Multi-factor Authentication",
        "description": "Use multi-factor authentication for user and privileged accounts."
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts."
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Protect domain controllers by ensuring proper security configuration for critical servers."
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Limit the number of accounts with permissions to create other accounts. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor newly executed processes associated with account creation, such as net.exe"
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Creation",
        "description": "Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller)."
    },
    {
        "uniqueId": "T1112",
        "target": "T1112 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "Win32",
        "target": "Win32 API. [2] Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. [3] [4]",
        "description": "The Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. [5] Often Valid Accounts are required, along with access to the remote system's SMB/Windows Admin Shares for RPC communication."
    },
    {
        "uniqueId": "T1112",
        "target": "T1112 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 14 August 2023"
    },
    {
        "uniqueId": "C0028",
        "target": "C0028 2015 Ukraine Electric Power Attack",
        "description": "During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry Internet settings to lower internet security before launching rundll32.exe, which in-turn launches the malware and communicates with C2 servers over the Internet. [6]."
    },
    {
        "uniqueId": "S0677",
        "target": "S0677 AADInternals",
        "description": "AADInternals can modify registry keys as part of setting a new pass-through authentication agent.[7]"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "ADVSTORESHELL is capable of setting and deleting Registry values.[8]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can achieve persistence by modifying Registry key entries.[9]"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey has overwritten registry keys for persistence.[10]"
    },
    {
        "uniqueId": "G0073",
        "target": "G0073 APT19",
        "description": "APT19 uses a Port 22 malware variant to modify several Registry keys.[11]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32's backdoor has modified the Windows Registry to store the backdoor's configuration. [12]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 uses a tool called CLEANTOAD that has the capability to modify Registry keys.[13]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 used a malware variant called GOODLUCK to modify the registry in order to steal credentials.[14][15]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor's dispatcher can modify the Run registry key.[16]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon modifies several registry keys for persistence and UAC bypass.[17]"
    },
    {
        "uniqueId": "S0031",
        "target": "S0031 BACKSPACE",
        "description": "BACKSPACE is capable of deleting Registry keys, sub-keys, and values on a victim system.[18]"
    },
    {
        "uniqueId": "S0245",
        "target": "S0245 BADCALL",
        "description": "BADCALL modifies the firewall Registry key SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfileGloballyOpenPorts\\List.[19]"
    },
    {
        "uniqueId": "S0239",
        "target": "S0239 Bankshot",
        "description": "Bankshot writes data into the Registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Pniumj.[20]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal has deleted Registry keys to clean up its prior activity.[21]"
    },
    {
        "uniqueId": "S0570",
        "target": "S0570 BitPaymer",
        "description": "BitPaymer can set values in the Registry to help in execution.[22]"
    },
    {
        "uniqueId": "S1070",
        "target": "S1070 Black Basta",
        "description": "Black Basta can modify the Registry to enable itself to run in safe mode and to modify the icons and file extensions for encrypted files.[23][24][25][26][27][28]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat has the ability to add the following registry key on compromised networks to maintain persistence: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services \\LanmanServer\\Paramenters[29]"
    },
    {
        "uniqueId": "G0108",
        "target": "G0108 Blue Mockingbird",
        "description": "Blue Mockingbird has used Windows Registry modifications to specify a DLL payload.[30]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT sets HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load to point to its executable.[31]"
    },
    {
        "uniqueId": "S0261",
        "target": "S0261 Catchamas",
        "description": "Catchamas creates three Registry keys to establish persistence by adding a Windows Service.[32]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell has a command to modify a Registry key.[33]"
    },
    {
        "uniqueId": "S0631",
        "target": "S0631 Chaes",
        "description": "Chaes can modify Registry values to stored information and establish persistence.[34]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower can remove persistence-related artifacts from the Registry.[35]"
    },
    {
        "uniqueId": "S0023",
        "target": "S0023 CHOPSTICK",
        "description": "CHOPSTICK may modify Registry keys to store RC4 encrypted configuration information.[36]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling can set and delete Registry keys.[37]"
    },
    {
        "uniqueId": "S0611",
        "target": "S0611 Clop",
        "description": "Clop can make modifications to Registry keys.[38]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can modify Registry values within HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\\\Excel\\Security\\AccessVBOM\\ to enable the execution of additional code.[39]"
    },
    {
        "uniqueId": "S0126",
        "target": "S0126 ComRAT",
        "description": "ComRAT has modified Registry values to store encrypted orchestrator code and payloads.[40][41]"
    },
    {
        "uniqueId": "S0608",
        "target": "S0608 Conficker",
        "description": "Conficker adds keys to the Registry at HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services and various other Registry locations.[42][43]"
    },
    {
        "uniqueId": "S0488",
        "target": "S0488 CrackMapExec",
        "description": "CrackMapExec can create a registry key using wdigest.[44]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson can set a Registry key to determine how long it has been installed and possibly to indicate the version number.[45]"
    },
    {
        "uniqueId": "S0527",
        "target": "S0527 CSPY Downloader",
        "description": "CSPY Downloader can write to the Registry under the %windir% variable to execute tasks.[46]"
    },
    {
        "uniqueId": "S0334",
        "target": "S0334 DarkComet",
        "description": "DarkComet adds a Registry value for its installation routine to the Registry Key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Enable LUA=\"0\" and HKEY_CURRENT_USER\\Software\\DC3_FEXEC.[47][48]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla has modified registry keys for persistence.[49]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can modify Registry values to store configuration strings, keylogger, and output of components.[50]"
    },
    {
        "uniqueId": "S1033",
        "target": "S1033 DCSrv",
        "description": "DCSrv has created Registry keys for persistence.[51]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has modified the Registry to perform multiple techniques through the use of Reg.[52]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca modified the registry using the command reg add \"HKEY_CURRENT_USER\\Environment\" /v UserInitMprLogonScript /t REG_SZ /d \"[file path]\" for persistence.[53]"
    },
    {
        "uniqueId": "G1003",
        "target": "G1003 Ember Bear",
        "description": "Ember Bear has used an open source batch script to modify Windows Defender registry keys.[54]"
    },
    {
        "uniqueId": "S0568",
        "target": "S0568 EVILNUM",
        "description": "EVILNUM can make modifications to the Regsitry for persistence.[55]"
    },
    {
        "uniqueId": "S0343",
        "target": "S0343 Exaramel for Windows",
        "description": "Exaramel for Windows adds the configuration to the Registry in XML format.[56]"
    },
    {
        "uniqueId": "S0569",
        "target": "S0569 Explosive",
        "description": "Explosive has a function to write itself to Registry values.[57]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT deletes the Registry key HKCU\\Software\\Classes\\Applications\\rundll32.exe\\shell\\open.[58]"
    },
    {
        "uniqueId": "S0679",
        "target": "S0679 Ferocious",
        "description": "Ferocious has the ability to add a Class ID in the current user Registry hive to enable persistence mechanisms.[59]"
    },
    {
        "uniqueId": "G0061",
        "target": "G0061 FIN8",
        "description": "FIN8 has deleted Registry keys during post compromise cleanup activities.[60]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has removed security settings for VBA macro execution by changing registry values HKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\VBAWarnings and HKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\AccessVBOM.[61][62]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can modify the Registry to store its components.[63]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT has altered the InstallTime subkey.[64]"
    },
    {
        "uniqueId": "G0078",
        "target": "G0078 Gorgon Group",
        "description": "Gorgon Group malware can deactivate security mechanisms in Microsoft Office by editing several keys and values under HKCU\\Software\\Microsoft\\Office\\.[65]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can modify the Registry to store its configuration at HKCU\\Software\\ under frequently changing names including %USERNAME% and ToolTech-RM.[66]"
    },
    {
        "uniqueId": "S0342",
        "target": "S0342 GreyEnergy",
        "description": "GreyEnergy modifies conditions in the Registry and adds keys.[67]"
    },
    {
        "uniqueId": "S0697",
        "target": "S0697 HermeticWiper",
        "description": "HermeticWiper has the ability to modify Registry keys to disable crash dumps, colors for compressed files, and pop-up information about folders and desktop items.[68][69][70]"
    },
    {
        "uniqueId": "S0376",
        "target": "S0376 HOPLIGHT",
        "description": "HOPLIGHT has modified Managed Object Format (MOF) files within the Registry to run specific commands and create persistence on the system.[71]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a Registry subkey to register its created service, and can also uninstall itself later by deleting this value. Hydraq's backdoor also enables remote attackers to modify and delete subkeys.[72][73]"
    },
    {
        "uniqueId": "S0537",
        "target": "S0537 HyperStack",
        "description": "HyperStack can add the name of its communication pipe to HKLM\\SYSTEM\\CurrentControlSet\\Services\\lanmanserver\\parameters\\NullSessionPipes.[74]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole has a command to create, set, copy, or delete a specified Registry key or value.[75][76]"
    },
    {
        "uniqueId": "S0271",
        "target": "S0271 KEYMARBLE",
        "description": "KEYMARBLE has a command to create Registry entries for storing data under HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\WABE\\DataPath.[77]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has modified Registry settings for default file associations to enable all macros and for persistence.[78][79][80][81]"
    },
    {
        "uniqueId": "S0669",
        "target": "S0669 KOCTOPUS",
        "description": "KOCTOPUS has added and deleted keys from the Registry.[82]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI has modified registry keys of ComSysApp, Svchost, and xmlProv on the machine to gain persistence.[83][84]"
    },
    {
        "uniqueId": "S0397",
        "target": "S0397 LoJax",
        "description": "LoJax has modified the Registry key \u2018HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute\u2019 from \u2018autocheck autochk \u2019 to \u2018autocheck autoche \u2019.[85]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot has modified the Registry as part of its UAC bypass process.[86]"
    },
    {
        "uniqueId": "G1014",
        "target": "G1014 LuminousMoth",
        "description": "LuminousMoth has used malware that adds Registry keys for persistence.[87][88]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can manipulate the system registry on a compromised host.[89]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has modified Registry settings for security tools.[90]"
    },
    {
        "uniqueId": "S0576",
        "target": "S0576 MegaCortex",
        "description": "MegaCortex has added entries to the Registry for ransom contact information.[91]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can write the process ID of a target process into the HKEY_LOCAL_MACHINE\\SOFTWARE\\DDE\\tpid Registry value as part of its reflective loading activity.[89]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo has written process names to the Registry, disabled IE browser features, deleted Registry keys, and changed the ExtendedUIHoverTime key.[92][93][94][95]"
    },
    {
        "uniqueId": "S1047",
        "target": "S1047 Mori",
        "description": "Mori can write data to HKLM\\Software\\NFC\\IPA and HKLM\\Software\\NFC\\ and delete Registry values.[96][97]"
    },
    {
        "uniqueId": "S0256",
        "target": "S0256 Mosquito",
        "description": "Mosquito can modify Registry keys under HKCU\\Software\\Microsoft[dllname] to store configuration values. Mosquito also modifies Registry keys under HKCR\\CLSID...\\InprocServer32 with a path to the launcher.[98]"
    },
    {
        "uniqueId": "S0205",
        "target": "S0205 Naid",
        "description": "Naid creates Registry entries that store information about a created service and point to a malicious DLL dropped to disk.[99]"
    },
    {
        "uniqueId": "S0336",
        "target": "S0336 NanoCore",
        "description": "NanoCore has the capability to edit the Registry.[100][101]"
    },
    {
        "uniqueId": "S0691",
        "target": "S0691 Neoichor",
        "description": "Neoichor has the ability to configure browser settings by modifying Registry entries under HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer.[102]"
    },
    {
        "uniqueId": "S0210",
        "target": "S0210 Nerex",
        "description": "Nerex creates a Registry subkey that registers a new service.[103]"
    },
    {
        "uniqueId": "S0457",
        "target": "S0457 Netwalker",
        "description": "Netwalker can add the following registry entry: HKEY_CURRENT_USER\\SOFTWARE{8 random characters}.[104]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can modify the Registry to store its configuration information.[105]"
    },
    {
        "uniqueId": "C0002",
        "target": "C0002 Night Dragon",
        "description": "During Night Dragon, threat actors used zwShell to establish full remote control of the connected machine and manipulate the Registry.[106]"
    },
    {
        "uniqueId": "S1090",
        "target": "S1090 NightClub",
        "description": "NightClub can modify the Registry to set the ServiceDLL for a service created by the malware for persistence.[107]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT can create, delete, or modify a specified Registry key or value.[108][109]"
    },
    {
        "uniqueId": "C0006",
        "target": "C0006 Operation Honeybee",
        "description": "During Operation Honeybee, the threat actors used batch files that modified registry keys.[110]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, the threat actors enabled Wdigest by changing the HKLM\\SYSTEM\\\\ControlSet001\\\\Control\\\\SecurityProviders\\\\WDigest registry value from 0 (disabled) to 1 (enabled).[111]"
    },
    {
        "uniqueId": "S0229",
        "target": "S0229 Orz",
        "description": "Orz can perform Registry operations.[112]"
    },
    {
        "uniqueId": "S0664",
        "target": "S0664 Pandora",
        "description": "Pandora can write an encrypted token to the Registry to enable processing of remote commands.[113]"
    },
    {
        "uniqueId": "G0040",
        "target": "G0040 Patchwork",
        "description": "A Patchwork payload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs.[114]"
    },
    {
        "uniqueId": "S1050",
        "target": "S1050 PcShare",
        "description": "PcShare can delete its persistence mechanisms from the registry.[115]"
    },
    {
        "uniqueId": "S0158",
        "target": "S0158 PHOREAL",
        "description": "PHOREAL is capable of manipulating the Registry.[116]"
    },
    {
        "uniqueId": "S0517",
        "target": "S0517 Pillowmint",
        "description": "Pillowmint has modified the Registry key HKLM\\SOFTWARE\\Microsoft\\DRM to store a malicious payload.[117]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon has modified the Registry to store its encrypted payload.[118]"
    },
    {
        "uniqueId": "S0254",
        "target": "S0254 PLAINTEE",
        "description": "PLAINTEE uses reg add to add a Registry Run key for persistence.[119]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX has a module to create, delete, or modify Registry keys.[120]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT has made registry modifications to alter its behavior upon execution.[121]"
    },
    {
        "uniqueId": "S0012",
        "target": "S0012 PoisonIvy",
        "description": "PoisonIvy creates a Registry subkey that registers a new system device.[122]"
    },
    {
        "uniqueId": "S0518",
        "target": "S0518 PolyglotDuke",
        "description": "PolyglotDuke can write encrypted JSON configuration files to the Registry.[123]"
    },
    {
        "uniqueId": "S0441",
        "target": "S0441 PowerShower",
        "description": "PowerShower has added a registry key so future powershell.exe instances are spawned off-screen by default, and has removed all registry entries that are left behind during the dropper process.[124]"
    },
    {
        "uniqueId": "S1058",
        "target": "S1058 Prestige",
        "description": "Prestige has the ability to register new registry keys for a new extension handler via HKCR\\.enc and HKCR\\enc\\shell\\open\\command.[125]"
    },
    {
        "uniqueId": "S0583",
        "target": "S0583 Pysa",
        "description": "Pysa has modified the registry key \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" and added the ransom note.[126]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can modify the Registry to store its configuration information in a randomly named subkey under HKCU\\Software\\Microsoft.[127][128]"
    },
    {
        "uniqueId": "S0269",
        "target": "S0269 QUADAGENT",
        "description": "QUADAGENT modifies an HKCU Registry key to store a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications.[129]"
    },
    {
        "uniqueId": "S0262",
        "target": "S0262 QuasarRAT",
        "description": "QuasarRAT has a command to edit the Registry on the victim\u2019s machine.[130][131]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession can write its configuration file to the Registry.[37][132]"
    },
    {
        "uniqueId": "S0075",
        "target": "S0075 Reg",
        "description": "Reg may be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.[1]"
    },
    {
        "uniqueId": "S0511",
        "target": "S0511 RegDuke",
        "description": "RegDuke can create seemingly legitimate Registry key to store its encryption key.[123]"
    },
    {
        "uniqueId": "S0019",
        "target": "S0019 Regin",
        "description": "Regin appears to have functionality to modify remote Registry information.[133]"
    },
    {
        "uniqueId": "S0332",
        "target": "S0332 Remcos",
        "description": "Remcos has full control of the Registry, including the ability to modify it.[134]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can modify the Registry to save encryption parameters and system information.[135][136][137][138][139]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can modify the HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\ registry key so it can bypass the VB object model (VBOM) on a compromised host.[140]"
    },
    {
        "uniqueId": "S0090",
        "target": "S0090 Rover",
        "description": "Rover has functionality to remove Registry Run key persistence as a cleanup procedure.[141]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can delete all Registry entries created during its execution.[142]"
    },
    {
        "uniqueId": "S1099",
        "target": "S1099 Samurai",
        "description": "The Samurai loader component can create multiple Registry keys to force the svchost.exe process to load the final backdoor.[143]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad can modify the Registry to store and maintain a configuration block and virtual file system.[144][53]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Once Shamoon has access to a network share, it enables the RemoteRegistry service on the target system. It will then connect to the system with RegConnectRegistryW and modify the Registry to disable UAC remote restrictions by setting SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy to 1.[145][146][147]"
    },
    {
        "uniqueId": "S0444",
        "target": "S0444 ShimRat",
        "description": "ShimRat has registered two registry keys for shim databases.[148]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot has modified the Registry to install a second-stage script in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibot.[149]"
    },
    {
        "uniqueId": "G0091",
        "target": "G0091 Silence",
        "description": "Silence can create, delete, or modify a specified Registry key or value.[150]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can modify registry keys, including to enable or disable Remote Desktop Protocol (RDP).[151]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA can add, modify, and/or delete registry keys. It has changed the proxy configuration of a victim system by modifying the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap registry.[152]"
    },
    {
        "uniqueId": "S0649",
        "target": "S0649 SMOKEDHAM",
        "description": "SMOKEDHAM has modified registry keys for persistence, to enable credential caching for credential access, and to facilitate lateral movement via RDP.[153]"
    },
    {
        "uniqueId": "S0157",
        "target": "S0157 SOUNDBITE",
        "description": "SOUNDBITE is capable of modifying the Registry.[116]"
    },
    {
        "uniqueId": "S0142",
        "target": "S0142 StreamEx",
        "description": "StreamEx has the ability to modify the Registry.[154]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet can create registry keys to load driver files.[155]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST had commands that allow an attacker to write or delete registry keys, and was observed stopping services by setting their HKLM\\SYSTEM\\CurrentControlSet\\services\\[service_name]\\Start registry entries to value 4.[156][157] It also deleted previously-created Image File Execution Options (IFEO) Debugger registry values and registry keys related to HTTP proxy to clean up traces of its activity.[158]"
    },
    {
        "uniqueId": "S0242",
        "target": "S0242 SynAck",
        "description": "SynAck can manipulate Registry keys.[159]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can write its configuration file to Software\\Classes\\scConfig in either HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER.[113]"
    },
    {
        "uniqueId": "G0092",
        "target": "G0092 TA505",
        "description": "TA505 has used malware to disable Windows Defender through modification of the Registry.[160]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor has the ability to modify the Registry on compromised hosts using RegDeleteValueA and RegCreateKeyExA.[161]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal can set the KeepPrintedJobs attribute for configured printers in SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Print\\Printers to enable document stealing.[162]"
    },
    {
        "uniqueId": "S1011",
        "target": "S1011 Tarrask",
        "description": "Tarrask is able to delete the Security Descriptor (SD) registry subkey in order to \"hide\" scheduled tasks.[163]"
    },
    {
        "uniqueId": "S0560",
        "target": "S0560 TEARDROP",
        "description": "TEARDROP modified the Registry to create a Windows service for itself on a compromised host.[164]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "A Threat Group-3390 tool has created new Registry keys under HKEY_CURRENT_USER\\Software\\Classes\\ and HKLM\\SYSTEM\\CurrentControlSet\\services.[165][113]"
    },
    {
        "uniqueId": "S0665",
        "target": "S0665 ThreatNeedle",
        "description": "ThreatNeedle can modify the Registry to save its configuration data as the following RC4-encrypted Registry key: HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon.[166]"
    },
    {
        "uniqueId": "S0668",
        "target": "S0668 TinyTurla",
        "description": "TinyTurla can set its configuration parameters in the Registry.[167]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot can modify registry entries.[168]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla has modify Registry values to store payloads.[169][170]"
    },
    {
        "uniqueId": "S0263",
        "target": "S0263 TYPEFRAME",
        "description": "TYPEFRAME can install encrypted configuration data under the Registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dll and HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs.[171]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can store configuration information in the Registry including the initialization vector and AES key needed to find and decrypt other Uroburos components.[172]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has used Registry modifications as part of its installation routine.[173][174]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has the ability to modify the Registry key HKCU\\Software\\ApplicationContainer\\Appsw64 to store information regarding the C2 server and downloads.[175][176][177]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer modifies the Registry to store an encoded configuration file in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security.[178][179]"
    },
    {
        "uniqueId": "S0670",
        "target": "S0670 WarzoneRAT",
        "description": "WarzoneRAT can create HKCU\\Software\\Classes\\Folder\\shell\\open\\command as a new registry key during privilege escalation.[180][181]"
    },
    {
        "uniqueId": "S0612",
        "target": "S0612 WastedLocker",
        "description": "WastedLocker can modify registry values within the Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap registry key.[182]"
    },
    {
        "uniqueId": "S0579",
        "target": "S0579 Waterbear",
        "description": "Waterbear has deleted certain values from the Registry to load a malicious DLL.[183]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has modified the Registry key HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory. Wizard Spider has also modified the WDigest registry key to allow plaintext credentials to be cached in memory.[184][185]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda modifies several Registry keys under HKCU\\Software\\Microsoft\\Internet Explorer\\ PhishingFilter\\ to disable phishing filters.[186]"
    },
    {
        "uniqueId": "S0350",
        "target": "S0350 zwShell",
        "description": "zwShell can modify the Registry.[106]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell can create Registry entries to enable services to run.[187]"
    },
    {
        "uniqueId": "M1024",
        "target": "M1024 Restrict Registry Permissions",
        "description": "Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Flow",
        "description": "Remote access to the registry can be achieved via"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls associated with concealing Registry keys, such as Reghide. [2] Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns [4] and RegDelNull [188]. Other API calls relevant to Registry Modification include RegOpenKeyExA, RegCreateKeyExA, RegDeleteKeyExA, RegDeleteValueExA, RegEnumKeyExA, RegEnumValueExA, among others."
    },
    {
        "uniqueId": "4688",
        "target": "4688 - a new process has been created).",
        "description": "Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notify"
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Creation",
        "description": "Monitor for newly constructed registry keys or values to aid in persistence and execution. Detection of creation of registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\SafeDllSearchMode. The key SafeDllSearchMode, if set to 0, will block the Windows mechanism for the search DLL order and adversaries may execute their own malicious dll."
    },
    {
        "uniqueId": "4688",
        "target": "4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.",
        "description": "Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notify"
    },
    {
        "uniqueId": "22",
        "target": "22 Dr. Nestori Syynimaa. (2018, October 25). AADInternals. Retrieved February 18, 2022.",
        "description": "Bitdefender. (2015, December). APT28 Under the Scope. Retrieved February 23, 2017."
    },
    {
        "uniqueId": "C0d0so0",
        "target": "C0d0so0 Group. Retrieved August 2, 2018.",
        "description": "Dumont, R. (2019, March 20). Fake or Fake: Keeping up with OceanLotus decoys. Retrieved April 1, 2019."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021.",
        "description": "Hromcova, Z. (2019, October). AT COMMANDS, TOR-BASED COMMUNICATIONS: MEET ATTOR, A FANTASY CREATURE AND ALSO A SPY PLATFORM. Retrieved May 6, 2020."
    },
    {
        "uniqueId": "APT30",
        "target": "APT30 AND THE MECHANICS OF A LONG-RUNNING CYBER ESPIONAGE OPERATION. Retrieved May 1, 2015.",
        "description": "US-CERT. (2018, February 06). Malware Analysis Report (MAR) - 10135536-G. Retrieved June 7, 2018."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "Frankoff, S., Hartley, B. (2018, November 14). Big Game Hunting: The Evolution of INDRIK SPIDER From Dridex Wire Fraud to BitPaymer Targeted Ransomware. Retrieved January 6, 2021."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "FireEye. (2015). APT28: A WINDOW INTO RUSSIA\u2019S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015."
    },
    {
        "uniqueId": "17",
        "target": "17 \u2013 North Korean Trojan: KEYMARBLE. Retrieved August 16, 2018.",
        "description": "CISA, FBI, CNMF. (2020, October 27). https://us-cert.cisa.gov/ncas/alerts/aa20-301a. Retrieved November 4, 2020."
    },
    {
        "uniqueId": "2020",
        "target": "2020 Global Threat Report. Retrieved December 11, 2020.",
        "description": "An, J and Malhotra, A. (2021, November 10). North Korean attackers use malicious blogs to deliver malware to high-profile South Korean targets. Retrieved December 29, 2021."
    },
    {
        "uniqueId": "2019",
        "target": "2019 Campaign. Retrieved April 28, 2020.",
        "description": "Threat Intelligence Team. (2021, August 23). New variant of Konni malware used in campaign targetting Russia. Retrieved January 5, 2022."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "Del Fierro, C. Kessem, L.. (2020, January 8). From Mega to Giga: Cross-Version Comparison of Top MegaCortex Modifications. Retrieved February 15, 2021."
    },
    {
        "uniqueId": "APT32",
        "target": "APT32 and the Threat to Global Corporations. Retrieved June 18, 2017.",
        "description": "Trustwave SpiderLabs. (2020, June 22). Pillowmint: FIN7\u2019s Monkey Thief . Retrieved July 27, 2020."
    },
    {
        "uniqueId": "19",
        "target": "19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020.",
        "description": "Hayashi, K. (2005, August 18). Backdoor.Darkmoon. Retrieved February 23, 2018."
    },
    {
        "uniqueId": "APT27",
        "target": "APT27 Turns to Ransomware. Retrieved November 12, 2021.",
        "description": "Kaspersky Lab's Global Research and Analysis Team. (2014, November 24). THE REGIN PLATFORM NATION-STATE OWNAGE OF GSM NETWORKS. Retrieved December 1, 2014."
    },
    {
        "uniqueId": "471",
        "target": "471 Malware Intelligence team. (2020, March 31). REvil Ransomware-as-a-Service \u2013 An analysis of a ransomware affiliate operation. Retrieved August 4, 2020.",
        "description": "Counter Threat Unit Research Team. (2019, September 24). REvil/Sodinokibi Ransomware. Retrieved August 4, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "FireEye. (2021, June 16). Smoking Out a DARKSIDE Affiliate\u2019s Supply Chain Software Compromise. Retrieved September 22, 2021."
    },
    {
        "uniqueId": "22",
        "target": "22 FireEye. (2020, December 13). Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor. Retrieved January 4, 2021.",
        "description": "MSTIC. (2020, December 18). Analyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers . Retrieved January 5, 2021."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021.",
        "description": "Ivanov, A. et al. (2018, May 7). SynAck targeted ransomware uses the Doppelg\u00e4nging technique. Retrieved May 22, 2018."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022.",
        "description": "CISA, FBI, DOD. (2021, August). MAR-10292089-1.v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021."
    },
    {
        "uniqueId": "12",
        "target": "12 \u2013 North Korean Trojan: TYPEFRAME. Retrieved July 13, 2018.",
        "description": "FBI et al. (2023, May 9). Hunting Russian Intelligence \u201cSnake\u201d Malware. Retrieved June 8, 2023."
    },
    {
        "uniqueId": "T1110",
        "target": "T1110 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1110",
        "target": "T1110 Sub-techniques:  T1110.001, T1110.002, T1110.003, T1110.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 29 January 2024"
    },
    {
        "uniqueId": "C0025",
        "target": "C0025 2016 Ukraine Electric Power Attack",
        "description": "During the 2016 Ukraine Electric Power Attack, Sandworm Team used a script to attempt RPC authentication against a number of hosts.[2]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 can perform brute force attacks to obtain credentials.[3][1][4]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 has used brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable.[5]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 has used Ncrack to reveal credentials.[6]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell has a module to perform brute force attacks on a system.[7]"
    },
    {
        "uniqueId": "S0220",
        "target": "S0220 Chaos",
        "description": "Chaos conducts brute force attacks against SSH services to gain initial access.[8]"
    },
    {
        "uniqueId": "S0488",
        "target": "S0488 CrackMapExec",
        "description": "CrackMapExec can brute force supplied user credentials across a network range.[9]"
    },
    {
        "uniqueId": "G0105",
        "target": "G0105 DarkVishnya",
        "description": "DarkVishnya used brute-force attack to obtain login data.[10]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has attempted to brute force credentials to gain access.[11]"
    },
    {
        "uniqueId": "G0053",
        "target": "G0053 FIN5",
        "description": "FIN5 has has used the tool GET2 Penetrator to look for remote login and hard-coded credentials.[12][13]"
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten",
        "description": "Fox Kitten has brute forced RDP credentials.[14]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has used brute force attacks to compromise valid credentials.[15]"
    },
    {
        "uniqueId": "S0599",
        "target": "S0599 Kinsing",
        "description": "Kinsing has attempted to brute force hosts over SSH.[16]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used brute force techniques to obtain credentials.[17]"
    },
    {
        "uniqueId": "C0022",
        "target": "C0022 Operation Dream Job",
        "description": "During Operation Dream Job, Lazarus Group performed brute force attacks against administrator accounts.[18]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 has modules for brute forcing local administrator and AD user accounts.[19]"
    },
    {
        "uniqueId": "S0583",
        "target": "S0583 Pysa",
        "description": "Pysa has used brute force attempts against a central management console, as well as some Active Directory accounts.[20]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can conduct brute force attacks to capture credentials.[21][22][23]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla may attempt to connect to systems within a victim's network using net use commands and a predefined list or collection of passwords.[24]"
    },
    {
        "uniqueId": "M1036",
        "target": "M1036 Account Use Policies",
        "description": "Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.[25]"
    },
    {
        "uniqueId": "M1032",
        "target": "M1032 Multi-factor Authentication",
        "description": "Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services."
    },
    {
        "uniqueId": "M1027",
        "target": "M1027 Password Policies",
        "description": "Refer to NIST guidelines when creating password policies.[26]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Authentication",
        "description": "Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network."
    },
    {
        "uniqueId": "2019",
        "target": "2019 A Year of Scanning and Credential Phishing on High-Profile Targets. Retrieved December 29, 2020.",
        "description": "Burt, T. (2020, September 10). New cyberattacks targeting U.S. elections. Retrieved March 24, 2021."
    },
    {
        "uniqueId": "27",
        "target": "27 LYCEUM Takes Center Stage in Middle East Campaign Retrieved. 2019/11/19",
        "description": "Singer, G. (2020, April 3). Threat Alert: Kinsing Malware Attacks Targeting Container Environments. Retrieved April 1, 2021."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 - New Targeted Attack in the Middle East. Retrieved December 20, 2017.",
        "description": "Breitenbacher, D and Osis, K. (2020, June 17). OPERATION IN(TER)CEPTION: Targeted Attacks Against European Aerospace and Military Companies. Retrieved December 20, 2021."
    },
    {
        "uniqueId": "T1566",
        "target": "T1566 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1566",
        "target": "T1566 Sub-techniques:  T1566.001, T1566.002, T1566.003, T1566.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "02",
        "target": "02 March 2020",
        "description": "Last Modified: 01 March 2024"
    },
    {
        "uniqueId": "G0001",
        "target": "G0001 Axiom",
        "description": "Axiom has used spear phishing to initially compromise victims.[8][9]"
    },
    {
        "uniqueId": "G0115",
        "target": "G0115 GOLD SOUTHFIELD",
        "description": "GOLD SOUTHFIELD has conducted malicious spam (malspam) campaigns to gain access to victim's machines.[10]"
    },
    {
        "uniqueId": "S0009",
        "target": "S0009 Hikit",
        "description": "Hikit has been spread through spear phishing.[9]"
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal has been spread through the use of phishing campaigns including \"call back phishing\" where victims are lured into calling a number provided through email.[11][12][13]"
    },
    {
        "uniqueId": "M1049",
        "target": "M1049 Antivirus/Antimalware",
        "description": "Anti-virus can automatically quarantine suspicious files."
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses."
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion prevention systems and systems designed to scan and remove malicious email attachments or links can be used to block activity."
    },
    {
        "uniqueId": "M1021",
        "target": "M1021 Restrict Web-Based Content",
        "description": "Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk."
    },
    {
        "uniqueId": "M1054",
        "target": "M1054 Software Configuration",
        "description": "Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.[14][15]"
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Users can be trained to identify social engineering techniques and phishing emails."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[14][15] URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for newly constructed files from a phishing messages to gain access to victim systems."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[14][15]"
    },
    {
        "uniqueId": "T1620",
        "target": "T1620 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1620",
        "target": "T1620 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "05",
        "target": "05 October 2021",
        "description": "Last Modified: 09 February 2024"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can copy a large byte array of 64-bit shellcode into process memory and execute it with a call to CreateThread.[9]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 has used reflective loading to execute malicious DLLs.[10]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike's execute-assembly command can run a .NET executable within the memory of a sacrificial process by loading the CLR.[11]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba loaded the payload into memory using PowerShell.[12]"
    },
    {
        "uniqueId": "S0695",
        "target": "S0695 Donut",
        "description": "Donut can generate code modules that enable in-memory execution of VBScript, JScript, EXE, DLL, and dotNET payloads.[13]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has reflectively loaded payloads into memory.[14]"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb's loader has reflectively loaded .NET-based assembly/payloads into memory.[15]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can use custom shellcode to map embedded DLLs into memory.[16]"
    },
    {
        "uniqueId": "S1022",
        "target": "S1022 IceApple",
        "description": "IceApple can use reflective code loading to load .NET assemblies into MSExchangeOWAAppPool on targeted Exchange servers.[17]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has changed memory protection permissions then overwritten in memory DLL function code with shellcode, which was later executed via KernelCallbackTable hijacking. Lazarus Group has also used shellcode within macros to decrypt and manually map DLLs into memory at runtime.[18][19]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot has reflectively loaded the decoded DLL into memory.[20]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain has reflectively loaded a DLL to read, decrypt, and load an orchestrator file.[21]"
    },
    {
        "uniqueId": "S0194",
        "target": "S0194 PowerSploit",
        "description": "PowerSploit reflectively loads a Windows PE file into a process.[22][23]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has a plugin system that can load specially made DLLs into memory and execute their functions.[24][25]"
    },
    {
        "uniqueId": "S0595",
        "target": "S0595 ThiefQuest",
        "description": "ThiefQuest uses various API functions such as NSCreateObjectFileImageFromMemory to load and link in-memory payloads.[26]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos has the ability to load new modules directly into memory using its Load Modules Mem command.[27]"
    },
    {
        "uniqueId": "S0689",
        "target": "S0689 WhisperGate",
        "description": "WhisperGate's downloader can reverse its third stage file bytes and reflectively load the file as a .NET assembly.[28]"
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe)"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as Assembly.Load() and Native API functions such as CreateThread(), memfd_create(), execve(), and/or execveat().[4][8]"
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.[29][1]"
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Symantec Threat Hunter Team. (2023, July 18). FIN8 Uses Revamped Sardonic Backdoor to Deliver Noberus Ransomware. Retrieved August 9, 2023."
    },
    {
        "uniqueId": "T1185",
        "target": "T1185 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1185",
        "target": "T1185 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "16",
        "target": "16 January 2018",
        "description": "Last Modified: 25 February 2022"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla has the ability to use form-grabbing to extract data from web data forms.[5]"
    },
    {
        "uniqueId": "S0484",
        "target": "S0484 Carberp",
        "description": "Carberp has captured credentials when a user performs login through a SSL session.[6][7]"
    },
    {
        "uniqueId": "S0631",
        "target": "S0631 Chaes",
        "description": "Chaes has used the Puppeteer module to hook and monitor the Chrome web browser to collect user information from infected hosts.[8]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can perform browser pivoting and inject into a user's browser to inherit cookies, authenticated HTTP sessions, and client SSL certificates.[4][9]"
    },
    {
        "uniqueId": "S0384",
        "target": "S0384 Dridex",
        "description": "Dridex can perform browser attacks via web injects to steal information such as credentials, certificates, and cookies.[10]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.[11][12][13]"
    },
    {
        "uniqueId": "S0483",
        "target": "S0483 IcedID",
        "description": "IcedID has used web injection attacks to redirect victims to spoofed sites designed to harvest banking and other credentials. IcedID can use a self signed TLS certificate in connection with the spoofed site and simultaneously maintains a live connection with the legitimate site to display the correct URL and certificates in the browser.[14][15]"
    },
    {
        "uniqueId": "S0530",
        "target": "S0530 Melcoz",
        "description": "Melcoz can monitor the victim's browser for online banking sessions and display an overlay window to manipulate the session in the background.[11]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can use advanced web injects to steal web banking credentials.[16][17]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot uses web injects and browser redirection to trick the user into providing their login credentials on a fake or modified web page.[18][19][20][21]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has injected HTML codes into banking sites to steal sensitive online banking information (ex: usernames and passwords).[22]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and Bypass User Account Control opportunities can limit the exposure to this technique."
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Close all browser sessions regularly and when they are no longer needed."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Access",
        "description": "This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for Process Injection against browser applications."
    },
    {
        "uniqueId": "19",
        "target": "19 and FMLA Campaigns used to install new IcedID banking malware. Retrieved July 14, 2020.",
        "description": "Cyberint. (2021, May 25). Qakbot Banking Trojan. Retrieved September 27, 2021."
    },
    {
        "uniqueId": "T1586",
        "target": "T1586 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1586",
        "target": "T1586 Sub-techniques:  T1586.001, T1586.002, T1586.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "01",
        "target": "01 October 2020",
        "description": "Last Modified: 11 April 2023"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    },
    {
        "uniqueId": "DS0021",
        "target": "DS0021 Persona Social Media",
        "description": "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing)."
    },
    {
        "uniqueId": "0537",
        "target": "0537 criminal actor targeting organizations for data exfiltration and destruction. Retrieved March 23, 2022.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "DATA SOURCES"
    },
    {
        "uniqueId": "41",
        "target": "41 ID Name Domain",
        "description": "Description"
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Enterprise",
        "description": "A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)"
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0041",
        "target": "DS0041 Application Vetting Mobile",
        "description": "Application vetting report generated by an external cloud service."
    },
    {
        "uniqueId": "DS0039",
        "target": "DS0039 Asset ICS",
        "description": "Data sources with information about the set of devices found within the network, along with their current software and configurations"
    },
    {
        "uniqueId": "DS0037",
        "target": "DS0037 Certificate Enterprise",
        "description": "A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications"
    },
    {
        "uniqueId": "DS0025",
        "target": "DS0025 Cloud Service Enterprise",
        "description": "Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs"
    },
    {
        "uniqueId": "DS0010",
        "target": "DS0010 Cloud Storage Enterprise",
        "description": "Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Enterprise",
        "description": "Mobile"
    },
    {
        "uniqueId": "DS0032",
        "target": "DS0032 Container Enterprise",
        "description": "A standard unit of virtualized software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another"
    },
    {
        "uniqueId": "DS0038",
        "target": "DS0038 Domain Name Enterprise",
        "description": "Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)"
    },
    {
        "uniqueId": "DS0016",
        "target": "DS0016 Drive Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0027",
        "target": "DS0027 Driver Enterprise",
        "description": "A computer program that operates or controls a particular type of device that is attached to a computer. Provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details about the hardware being used"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0018",
        "target": "DS0018 Firewall Enterprise",
        "description": "A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules"
    },
    {
        "uniqueId": "DS0001",
        "target": "DS0001 Firmware Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0036",
        "target": "DS0036 Group Enterprise",
        "description": "A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights"
    },
    {
        "uniqueId": "DS0007",
        "target": "DS0007 Image Enterprise",
        "description": "A single file used to deploy a virtual machine/bootable disk into an on-premise or third-party cloud environment"
    },
    {
        "uniqueId": "DS0030",
        "target": "DS0030 Instance Enterprise",
        "description": "A virtual server environment which runs workloads, hosted on-premise or by third-party cloud providers"
    },
    {
        "uniqueId": "DS0035",
        "target": "DS0035 Internet Scan Enterprise",
        "description": "Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet"
    },
    {
        "uniqueId": "DS0008",
        "target": "DS0008 Kernel Enterprise",
        "description": "A computer program, at the core of a computer OS, that resides in memory and facilitates interactions between hardware and software components"
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0004",
        "target": "DS0004 Malware Repository Enterprise",
        "description": "Information obtained (via shared or submitted samples) regarding malicious software (droppers, backdoors, etc.) used by adversaries"
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0023",
        "target": "DS0023 Named Pipe Enterprise",
        "description": "Mechanisms that allow inter-process communication locally or over the network. A named pipe is usually found as a file and processes attach to it"
    },
    {
        "uniqueId": "DS0033",
        "target": "DS0033 Network Share Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Enterprise",
        "description": "Mobile"
    },
    {
        "uniqueId": "DS0040",
        "target": "DS0040 Operational Databases ICS",
        "description": "Operational databases contain information about the status of the operational process and associated devices, including any measurements, events, history, or alarms that have occurred"
    },
    {
        "uniqueId": "DS0021",
        "target": "DS0021 Persona Enterprise",
        "description": "A malicious online profile representing a user commonly used by adversaries to social engineer or otherwise target victims"
    },
    {
        "uniqueId": "DS0014",
        "target": "DS0014 Pod Enterprise",
        "description": "A single unit of shared resources within a cluster, comprised of one or more containers"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Enterprise",
        "description": "Mobile"
    },
    {
        "uniqueId": "DS0003",
        "target": "DS0003 Scheduled Job Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0013",
        "target": "DS0013 Sensor Health Enterprise",
        "description": "Mobile"
    },
    {
        "uniqueId": "DS0019",
        "target": "DS0019 Service Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0020",
        "target": "DS0020 Snapshot Enterprise",
        "description": "A point-in-time copy of cloud volumes (files, settings, etc.) that can be created and/or deployed in cloud environments"
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0042",
        "target": "DS0042 User Interface Mobile",
        "description": "Visual activity on the device that could alert the user to potentially malicious behavior."
    },
    {
        "uniqueId": "DS0034",
        "target": "DS0034 Volume Enterprise",
        "description": "Block object storage hosted on-premise or by third-party providers, typically made available to resources as virtualized hard drives"
    },
    {
        "uniqueId": "DS0006",
        "target": "DS0006 Web Credential Enterprise",
        "description": "Credential material, such as session cookies or tokens, used to authenticate to web applications and services"
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Enterprise",
        "description": "ICS"
    },
    {
        "uniqueId": "DS0005",
        "target": "DS0005 WMI Enterprise",
        "description": "The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers"
    },
    {
        "uniqueId": "T1137",
        "target": "T1137 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1137",
        "target": "T1137 Sub-techniques:  T1137.001, T1137.002, T1137.003, T1137.004, T1137.005, T1137.006",
        "description": "\u24d8"
    },
    {
        "uniqueId": "14",
        "target": "14 December 2017",
        "description": "Last Modified: 15 October 2021"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 have replaced Microsoft Outlook's VbaProject.OTM file to install a backdoor macro for persistence.[3][4]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has inserted malicious macros into existing documents, providing persistence when they are reopened. Gamaredon Group has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the /altvba option, once the Application.Startup event is received.[5]"
    },
    {
        "uniqueId": "M1040",
        "target": "M1040 Behavior Prevention on Endpoint",
        "description": "On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. [6]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing."
    },
    {
        "uniqueId": "M1054",
        "target": "M1054 Software Configuration",
        "description": "For the Office Test method, create the Registry key used to execute it and set the permissions to \"Read Control\" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. [8]"
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine.[9] Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.[10]"
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[11]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[12] SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[11]"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups."
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Creation",
        "description": "Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.[13][14]"
    },
    {
        "uniqueId": "T1205",
        "target": "T1205 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1205",
        "target": "T1205 Sub-techniques:  T1205.001, T1205.002",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 19 October 2022"
    },
    {
        "uniqueId": "S1118",
        "target": "S1118 BUSHWALK",
        "description": "BUSHWALK can modify the DSUserAgentCap.pm Perl module on Ivanti Connect Secure VPNs and either activate or deactivate depending on the value of the user agent in incoming HTTP requests.[7]"
    },
    {
        "uniqueId": "S0220",
        "target": "S0220 Chaos",
        "description": "Chaos provides a reverse shell is triggered upon receipt of a packet with a special string, sent to any port.[8]"
    },
    {
        "uniqueId": "C0029",
        "target": "C0029 Cutting Edge",
        "description": "During Cutting Edge, threat actors sent a magic 48-byte sequence to enable the PITSOCK backdoor to communicate via the /tmp/clientsDownload.sock socket.[7]"
    },
    {
        "uniqueId": "S0641",
        "target": "S0641 Kobalos",
        "description": "Kobalos is triggered by an incoming TCP connection to a legitimate service from a specific source port.[9][10]"
    },
    {
        "uniqueId": "S0664",
        "target": "S0664 Pandora",
        "description": "Pandora can identify if incoming HTTP traffic contains a token and if so it will intercept the traffic and process the received command.[11]"
    },
    {
        "uniqueId": "S0587",
        "target": "S0587 Penquin",
        "description": "Penquin will connect to C2 only after sniffing a \"magic packet\" value in TCP or UDP packets matching specific conditions.[12][13]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk has used Wake-on-Lan to power on turned off systems for lateral movement.[5]"
    },
    {
        "uniqueId": "S0519",
        "target": "S0519 SYNful Knock",
        "description": "SYNful Knock can be sent instructions via special packets to change its functionality. Code for new functionality can be included in these messages.[3]"
    },
    {
        "uniqueId": "S0221",
        "target": "S0221 Umbreon",
        "description": "Umbreon provides additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet.[14]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can intercept the first client to server packet in the 3-way TCP handshake to determine if the packet contains the correct unique value for a specific Uroburos implant. If the value does not match, the packet and the rest of the TCP session are passed to the legitimate listening application.[15]"
    },
    {
        "uniqueId": "S0430",
        "target": "S0430 Winnti for Linux",
        "description": "Winnti for Linux has used a passive listener, capable of identifying a specific magic value before executing tasking, as a secondary command and control (C2) mechanism.[16]"
    },
    {
        "uniqueId": "S1114",
        "target": "S1114 ZIPLINE",
        "description": "ZIPLINE can identify a specific string in intercepted network traffic, SSH-2.0-OpenSSH_0.3xx., to trigger its command functionality.[17]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Disable Wake-on-LAN if it is not needed within an environment."
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.[19]"
    },
    {
        "uniqueId": "T1222",
        "target": "T1222 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1222",
        "target": "T1222 Sub-techniques:  T1222.001, T1222.002",
        "description": "\u24d8"
    },
    {
        "uniqueId": "17",
        "target": "17 October 2018",
        "description": "Last Modified: 19 October 2022"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Applying more restrictive permissions to files and directories could prevent adversaries from modifying their access control lists. Additionally, ensure that user settings regarding local and remote symbolic links are properly set or disabled where unneeded.[8]"
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Object Modification",
        "description": "Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Metadata",
        "description": "Monitor and investigate attempts to modify ACLs and file/directory ownership."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]"
    },
    {
        "uniqueId": "T1559",
        "target": "T1559 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1559",
        "target": "T1559 Sub-techniques:  T1559.001, T1559.002, T1559.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "12",
        "target": "12 February 2020",
        "description": "Last Modified: 11 March 2022"
    },
    {
        "uniqueId": "S0687",
        "target": "S0687 Cyclops Blink",
        "description": "Cyclops Blink has the ability to create a pipe to enable inter-process communication.[3]"
    },
    {
        "uniqueId": "S0537",
        "target": "S0537 HyperStack",
        "description": "HyperStack can connect to the IPC$ share on remote machines.[4]"
    },
    {
        "uniqueId": "S1100",
        "target": "S1100 Ninja",
        "description": "Ninja can use pipes to redirect the standard input and the standard output.[5]"
    },
    {
        "uniqueId": "S1123",
        "target": "S1123 PITSTOP",
        "description": "PITSTOP can listen over the Unix domain socket located at /data/runtime/cockpit/wd.fd.[6]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "When executing with non-root permissions, RotaJakiro uses the the shmget API to create shared memory between other known RotaJakiro processes. This allows processes to communicate with each other and share their PID.[7]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos has the ability to move data between its kernel and user mode components, generally using named pipes.[8]"
    },
    {
        "uniqueId": "M1013",
        "target": "M1013 Application Developer Guidance",
        "description": "Enable the Hardened Runtime capability when developing applications. Do not include the com.apple.security.get-task-allow entitlement with the value set to any variation of true."
    },
    {
        "uniqueId": "M1048",
        "target": "M1048 Application Isolation and Sandboxing",
        "description": "Ensure all COM alerts and Protected View are enabled.[9]"
    },
    {
        "uniqueId": "M1040",
        "target": "M1040 Behavior Prevention on Endpoint",
        "description": "On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs.[10][11]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution. [12][13][14] Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.[15]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Classes\\\\AppID\\\\{AppID_GUID} associated with the process-wide security of individual COM applications.[16]"
    },
    {
        "uniqueId": "M1054",
        "target": "M1054 Software Configuration",
        "description": "Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.[11][14]"
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Access",
        "description": "Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.[19]"
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "4053440",
        "target": "4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.",
        "description": "Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017."
    },
    {
        "uniqueId": "ADV170021",
        "target": "ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.",
        "description": "Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017."
    },
    {
        "uniqueId": "2003",
        "target": "2003 Service Pack 1. Retrieved November 22, 2017.",
        "description": "VerSprite. (2018, January 24). Exploiting VyprVPN for MacOS. Retrieved April 20, 2022."
    },
    {
        "uniqueId": "T1537",
        "target": "T1537 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1537",
        "target": "T1537 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "30",
        "target": "30 August 2019",
        "description": "Last Modified: 11 April 2024"
    },
    {
        "uniqueId": "M1057",
        "target": "M1057 Data Loss Prevention",
        "description": "Data loss prevention can prevent and block sensitive data from being shared with individuals outside an organization.[4] [5]"
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Implement network-based filtering restrictions to prohibit data transfers to untrusted VPCs."
    },
    {
        "uniqueId": "M1054",
        "target": "M1054 Software Configuration",
        "description": "Configure appropriate data sharing restrictions in cloud services. For example, external sharing in Microsoft SharePoint and Google Drive can be turned off altogether, blocked for certain domains, or restricted to certain users.[6] [7]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Limit user account and IAM policies to the least privileges required."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor logs for SaaS applications to detect instances of data being shared inappropriately. For example, in Microsoft 365, file sharing events will appear in Audit logs under the event names SharingInvitationCreated, AnonymousLinkCreated, SecureLinkCreated, or AddedToSecureLink, with TargetUserOrGroupType being Guest.[8] In Google Workspace, externally shared files will have a Visibility property of Shared externally in the Drive audit logs.[9]"
    },
    {
        "uniqueId": "DS0010",
        "target": "DS0010 Cloud Storage Cloud Storage Creation",
        "description": "Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous internal traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration."
    },
    {
        "uniqueId": "DS0020",
        "target": "DS0020 Snapshot Snapshot Creation",
        "description": "Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts."
    },
    {
        "uniqueId": "T1119",
        "target": "T1119 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1119",
        "target": "T1119 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 02 January 2024"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed has automatically collected data from USB drives, keystrokes, and screen images before exfiltration.[2]"
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1",
        "description": "APT1 used a batch script to perform a series of discovery techniques and saves it to a text file.[3]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[4]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor has automatically collected data about the compromised system.[5]"
    },
    {
        "uniqueId": "S0128",
        "target": "S0128 BADNEWS",
        "description": "BADNEWS monitors USB devices and copies files with certain extensions to a predefined directory.[6]"
    },
    {
        "uniqueId": "S0239",
        "target": "S0239 Bankshot",
        "description": "Bankshot recursively generates a list of files within a directory and sends them back to the control server.[7]"
    },
    {
        "uniqueId": "S1043",
        "target": "S1043 ccf32",
        "description": "ccf32 can be used to automatically collect files from a compromised host.[8]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used custom DLLs for continuous retrieval of data from memory.[9]"
    },
    {
        "uniqueId": "S0244",
        "target": "S0244 Comnie",
        "description": "Comnie executes a batch script to store discovery information in %TEMP%\\info.dat and then uploads the temporarily file to the remote C2 server.[10]"
    },
    {
        "uniqueId": "G0142",
        "target": "G0142 Confucius",
        "description": "Confucius has used a file stealer to steal documents and images with the following extensions: txt, pdf, png, jpg, doc, xls, xlm, odp, ods, odt, rtf, ppt, xlsx, xlsm, docx, pptx, and jpeg.[11]"
    },
    {
        "uniqueId": "S0538",
        "target": "S0538 Crutch",
        "description": "Crutch can automatically monitor removable drives in a loop and copy interesting files.[12]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate searches for stored credentials associated with cryptocurrency wallets and notifies the command and control server when identified.[13]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can automatically gather the username, domain name, machine name, and other information from a compromised system.[14]"
    },
    {
        "uniqueId": "G0053",
        "target": "G0053 FIN5",
        "description": "FIN5 scans processes on all victim systems in the environment and uses automated scripts to pull back the results.[15]"
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6",
        "description": "FIN6 has used a script to iterate through a list of compromised PoS systems, copy and remove data to a log file, and to bind to events from the submit payment button.[16][17]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors used Empire to automatically gather the username, domain name, machine name, and other system information.[14]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can monitor files for changes and automatically collect them.[8]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has deployed scripts on compromised systems that automatically scan for interesting documents.[18]"
    },
    {
        "uniqueId": "S0597",
        "target": "S0597 GoldFinder",
        "description": "GoldFinder logged and stored information related to the route or hops a packet took from a compromised machine to a hardcoded C2 server, including the target C2 URL, HTTP response/status code, HTTP response headers and values, and data received from the C2 node.[19]"
    },
    {
        "uniqueId": "S0170",
        "target": "S0170 Helminth",
        "description": "A Helminth VBScript receives a batch script to execute a set of commands in a command prompt.[20]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can sort and collect specific documents as well as generate a list of all files on a newly inserted drive and store them in an encrypted file.[21][22]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has performed frequent and scheduled data collection from victim networks.[23]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron can be configured to automatically collect files under a specified directory.[24]"
    },
    {
        "uniqueId": "S1101",
        "target": "S1101 LoFiSe",
        "description": "LoFiSe can collect all the files from the working directory every three hours and place them into a password-protected archive for further exfiltration.[25]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has used the Csvde tool to collect Active Directory files and data.[26]"
    },
    {
        "uniqueId": "S0443",
        "target": "S0443 MESSAGETAP",
        "description": "MESSAGETAP checks two files, keyword_parm.txt and parm.txt, for instructions on how to target and save data parsed and extracted from SMS message data from the network traffic. If an SMS message contained either a phone number, IMSI number, or keyword that matched the predefined list, it is saved to a CSV file for later theft by the threat actor.[27]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo has automatically collected mouse clicks, continuous screenshots on the machine, and set timers to collect the contents of the clipboard and website browsing.[28]"
    },
    {
        "uniqueId": "S0339",
        "target": "S0339 Micropsia",
        "description": "Micropsia executes an RAR tool to recursively archive files based on a predefined list of file extensions (.xls, .xlsx, .csv, .odt, .doc, .docx, .ppt, .pptx, .pdf, .mdb, .accdb, .accde, *.txt).[29]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda used custom batch scripts to collect files automatically from a targeted system.[30]"
    },
    {
        "uniqueId": "S0699",
        "target": "S0699 Mythic",
        "description": "Mythic supports scripting of file downloads from agents.[31]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can automatically archive collected data.[32]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used automated collection.[33]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors used a script to collect information about the infected system.[34]"
    },
    {
        "uniqueId": "S1017",
        "target": "S1017 OutSteel",
        "description": "OutSteel can automatically scan for and collect files with specific extensions.[35]"
    },
    {
        "uniqueId": "S1109",
        "target": "S1109 PACEMAKER",
        "description": "PACEMAKER can enter a loop to read /proc/ entries every 2 seconds in order to read a target application's memory.[36]"
    },
    {
        "uniqueId": "S1091",
        "target": "S1091 Pacu",
        "description": "Pacu can automatically collect data, such as CloudFormation templates, EC2 user data, AWS Inspector reports, and IAM credential reports.[37]"
    },
    {
        "uniqueId": "G0040",
        "target": "G0040 Patchwork",
        "description": "Patchwork developed a file stealer to search C:\\ and collect files with certain extensions. Patchwork also executed a script to enumerate all drives, store them as a list, and upload generated files to the C2 server.[6]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT used file system monitoring to track modification and enable automatic exfiltration.[38]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 contains a module for recursively parsing through files and directories to gather valid credit card numbers.[39]"
    },
    {
        "uniqueId": "S0238",
        "target": "S0238 Proxysvc",
        "description": "Proxysvc automatically collects data about the victim and sends it to the control server.[40]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can conduct an initial scan for Microsoft Word documents on the local system, removable media, and connected network drives, before tagging and collecting them. It can continue tagging documents to collect with follow up scans.[41]"
    },
    {
        "uniqueId": "S0684",
        "target": "S0684 ROADTools",
        "description": "ROADTools automatically gathers data from Azure AD environments using the Azure Graph API.[42]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "Depending on the Linux distribution, RotaJakiro executes a set of commands to collect device information and sends the collected information to the C2 server.[43]"
    },
    {
        "uniqueId": "S0090",
        "target": "S0090 Rover",
        "description": "Rover automatically collects files from the local system and removable drives based on a predefined list of file extensions on a regular timeframe.[44]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM monitors browsing activity and automatically captures screenshots if a victim browses to a URL matching one of a list of strings.[45][46]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter gathered information automatically, without instruction from a C2, related to the user and host machine that is compiled into a report and sent to the operators.[47]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has used tools to automatically collect system and network configuration information.[48]"
    },
    {
        "uniqueId": "S0491",
        "target": "S0491 StrongPity",
        "description": "StrongPity has a file searcher component that can automatically collect and archive files based on a predefined list of file extensions.[49]"
    },
    {
        "uniqueId": "S0098",
        "target": "S0098 T9000",
        "description": "T9000 searches removable storage devices for files with a pre-defined list of file extensions (e.g. * .doc, .ppt, .xls, .docx, .pptx, *.xlsx). Any matching files are encrypted and written to a local user directory.[50]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to index and compress files into a send queue for exfiltration.[51]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories.[52]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper has collected information automatically using the adversary's USBferry attack.[53]"
    },
    {
        "uniqueId": "S0136",
        "target": "S0136 USBStealer",
        "description": "For all non-removable drives on a victim, USBStealer executes automated collection of certain files for later exfiltration.[54]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak can download a module to search for and build a report of harvested credential data.[55]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN saves each collected file with the automatically generated format {0:dd-MM-yyyy}.txt .[56]"
    },
    {
        "uniqueId": "S0466",
        "target": "S0466 WindTail",
        "description": "WindTail can identify and add files that possess specific file extensions to an array for archiving.[57]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy scans the system and automatically collects files with the following extensions: .doc, .docx, ,.xls, .xlsx, .pdf, .pptx, .rar, .zip, .jpg, .jpeg, .bmp, .tiff, .kum, .tlg, .sbx, .cr, .hse, .hsf, and .lhz.[58][59]"
    },
    {
        "uniqueId": "M1041",
        "target": "M1041 Encrypt Sensitive Information",
        "description": "Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through Brute Force techniques."
    },
    {
        "uniqueId": "M1029",
        "target": "M1029 Remote Data Storage",
        "description": "Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that could be taken to collect internal data."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for unexpected files (e.g., .pdf, .docx, .jpg, etc.) viewed for collecting internal data."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "UNC3944",
        "target": "UNC3944 Leverages SMS Phishing Campaigns for SIM Swapping, Ransomware, Extortion, and Notoriety. Retrieved January 2, 2024.",
        "description": "KISA. (n.d.). Phishing Target Reconnaissance and Attack Resource Analysis Operation Muzabi. Retrieved March 7, 2022."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved September 13, 2018."
    },
    {
        "uniqueId": "42",
        "target": "42 Playbook Viewer. Retrieved February 6, 2023.",
        "description": "Dantzig, M. v., Schamper, E. (2019, December 19). Operation Wocao: Shining a light on one of China\u2019s hidden hacking groups. Retrieved October 8, 2020."
    },
    {
        "uniqueId": "19",
        "target": "19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020.",
        "description": "Nettitude. (2018, July 23). Python Server for PoshC2. Retrieved April 23, 2019."
    },
    {
        "uniqueId": "T1113",
        "target": "T1113 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1113",
        "target": "T1113 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 30 March 2023"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can capture screenshots of the victim\u2019s desktop.[3][4][5][6][7]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can take screenshots on a compromised host by calling a series of APIs.[8][9]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has used tools to take screenshots from victims.[10][11][12][13]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 has used a screen capture utility to take screenshots on a compromised host.[14][15]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to capture screenshots on compromised hosts.[16]"
    },
    {
        "uniqueId": "S1087",
        "target": "S1087 AsyncRAT",
        "description": "AsyncRAT has the ability to view the screen on compromised hosts.[17]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor's has a plugin that captures screenshots of the target applications.[18]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can capture screenshots of the victim\u2019s machines.[19]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can take screenshots and send them to an actor-controlled C2 server.[20]"
    },
    {
        "uniqueId": "S0128",
        "target": "S0128 BADNEWS",
        "description": "BADNEWS has a command to take a screenshot and send it to the C2 server.[21][22]"
    },
    {
        "uniqueId": "S0337",
        "target": "S0337 BadPatch",
        "description": "BadPatch captures screenshots in .jpg format and then exfiltrates them.[23]"
    },
    {
        "uniqueId": "S0234",
        "target": "S0234 Bandook",
        "description": "Bandook is capable of taking an image of and uploading the current desktop.[24][25]"
    },
    {
        "uniqueId": "S0017",
        "target": "S0017 BISCUIT",
        "description": "BISCUIT has a command to periodically take screenshots of the system.[26]"
    },
    {
        "uniqueId": "S0089",
        "target": "S0089 BlackEnergy",
        "description": "BlackEnergy is capable of taking screenshots.[27]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT has captured a screenshot of the display every 30 seconds for the first 5 minutes after initiating a C2 loop, and then once every five minutes thereafter.[28]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has used a tool to capture screenshots.[29][30]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 can take screenshots on compromised hosts.[31]"
    },
    {
        "uniqueId": "S0454",
        "target": "S0454 Cadelspy",
        "description": "Cadelspy has the ability to capture screenshots and webcam photos.[32]"
    },
    {
        "uniqueId": "S0351",
        "target": "S0351 Cannon",
        "description": "Cannon can take a screenshot of the desktop.[33]"
    },
    {
        "uniqueId": "S0030",
        "target": "S0030 Carbanak",
        "description": "Carbanak performs desktop video recording and captures screenshots of the desktop and sends it to the C2 server.[34]"
    },
    {
        "uniqueId": "S0484",
        "target": "S0484 Carberp",
        "description": "Carberp can capture display screenshots with the screens_dll.dll plugin.[35]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT can capture screenshots.[36]"
    },
    {
        "uniqueId": "S0261",
        "target": "S0261 Catchamas",
        "description": "Catchamas captures screenshots based on specific keywords in the window\u2019s title.[37]"
    },
    {
        "uniqueId": "S0631",
        "target": "S0631 Chaes",
        "description": "Chaes can capture screenshots of the infected machine.[38]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower has the ability to capture screenshots.[39]"
    },
    {
        "uniqueId": "S0023",
        "target": "S0023 CHOPSTICK",
        "description": "CHOPSTICK has the capability to capture screenshots.[12]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme has the ability to capture screenshots.[40]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling has the ability to capture screenshots.[41]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike's Beacon payload is capable of capturing screenshots.[42][43][44]"
    },
    {
        "uniqueId": "S0338",
        "target": "S0338 Cobian RAT",
        "description": "Cobian RAT has a feature to perform screen capture.[45]"
    },
    {
        "uniqueId": "S0591",
        "target": "S0591 ConnectWise",
        "description": "ConnectWise can take screenshots on remote hosts.[46]"
    },
    {
        "uniqueId": "S0050",
        "target": "S0050 CosmicDuke",
        "description": "CosmicDuke takes periodic screenshots and exfiltrates them.[47]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson contains a command to perform screen captures.[48][49][50]"
    },
    {
        "uniqueId": "S0235",
        "target": "S0235 CrossRAT",
        "description": "CrossRAT is capable of taking screen captures.[24]"
    },
    {
        "uniqueId": "G0070",
        "target": "G0070 Dark Caracal",
        "description": "Dark Caracal took screenshots using their Windows malware.[24]"
    },
    {
        "uniqueId": "S0187",
        "target": "S0187 Daserf",
        "description": "Daserf can take screenshots.[51][29]"
    },
    {
        "uniqueId": "S0021",
        "target": "S0021 Derusbi",
        "description": "Derusbi is capable of performing screen captures.[52]"
    },
    {
        "uniqueId": "S0213",
        "target": "S0213 DOGCALL",
        "description": "DOGCALL is capable of capturing screenshots of the victim's machine.[53][54]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).[55][56][57]"
    },
    {
        "uniqueId": "S0062",
        "target": "S0062 DustySky",
        "description": "DustySky captures PNG screenshots of the main screen.[58]"
    },
    {
        "uniqueId": "S0593",
        "target": "S0593 ECCENTRICBANDWAGON",
        "description": "ECCENTRICBANDWAGON can capture screenshots and store them locally.[59]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire is capable of capturing screenshots on Windows and macOS systems.[60]"
    },
    {
        "uniqueId": "S0152",
        "target": "S0152 EvilGrab",
        "description": "EvilGrab has the capability to capture screenshots.[61]"
    },
    {
        "uniqueId": "G0046",
        "target": "G0046 FIN7",
        "description": "FIN7 captured screenshots and desktop video recordings.[62]"
    },
    {
        "uniqueId": "S0182",
        "target": "S0182 FinFisher",
        "description": "FinFisher takes a screenshot of the screen and displays it on top of all other windows for few seconds in an apparent attempt to hide some messages showed by the system during the setup process.[63][64]"
    },
    {
        "uniqueId": "S0143",
        "target": "S0143 Flame",
        "description": "Flame can take regular screenshots when certain applications are open that are sent to the command and control server.[65]"
    },
    {
        "uniqueId": "S0381",
        "target": "S0381 FlawedAmmyy",
        "description": "FlawedAmmyy can capture screenshots.[66]"
    },
    {
        "uniqueId": "S0277",
        "target": "S0277 FruitFly",
        "description": "FruitFly takes screenshots of the user's desktop.[67]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "The FunnyDream ScreenCap component can take screenshots on a compromised host.[68]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group's malware can take screenshots of the compromised computer every minute.[69]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT can capture the victim\u2019s screen remotely.[70]"
    },
    {
        "uniqueId": "G0115",
        "target": "G0115 GOLD SOUTHFIELD",
        "description": "GOLD SOUTHFIELD has used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines.[71]"
    },
    {
        "uniqueId": "S0417",
        "target": "S0417 GRIFFON",
        "description": "GRIFFON has used a screenshot module that can be used to take a screenshot of the remote system.[72]"
    },
    {
        "uniqueId": "G0043",
        "target": "G0043 Group5",
        "description": "Malware used by Group5 is capable of watching the victim's screen.[73]"
    },
    {
        "uniqueId": "S0151",
        "target": "S0151 HALFBAKED",
        "description": "HALFBAKED can obtain screenshots from the victim.[74]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to do real time screen viewing on an infected host.[75]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq includes a component based on the code of VNC that can stream a live feed of the desktop of an infected host.[76]"
    },
    {
        "uniqueId": "S0398",
        "target": "S0398 HyperBro",
        "description": "HyperBro has the ability to take screenshots.[77]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can capture screenshots of not only the entire screen, but of each separate window open, in case they are overlapping.[78][79]"
    },
    {
        "uniqueId": "S0163",
        "target": "S0163 Janicab",
        "description": "Janicab captured screenshots and sent them out to a C2 server.[80][81]"
    },
    {
        "uniqueId": "S0044",
        "target": "S0044 JHUHUGIT",
        "description": "A JHUHUGIT variant takes screenshots by simulating the user pressing the \"Take Screenshot\" key (VK_SCREENSHOT), accessing the screenshot saved in the clipboard, and converting it to a JPG image.[82][83]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT has the capability to take screenshots of the victim\u2019s machine.[84][85]"
    },
    {
        "uniqueId": "S0088",
        "target": "S0088 Kasidet",
        "description": "Kasidet has the ability to initiate keylogging and screen captures.[86]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar captures screenshots of the victim\u2019s screen.[87]"
    },
    {
        "uniqueId": "S0387",
        "target": "S0387 KeyBoy",
        "description": "KeyBoy has a command to perform screen grabbing.[88]"
    },
    {
        "uniqueId": "S0271",
        "target": "S0271 KEYMARBLE",
        "description": "KEYMARBLE can capture screenshots of the victim\u2019s machine.[89]"
    },
    {
        "uniqueId": "S0437",
        "target": "S0437 Kivars",
        "description": "Kivars has the ability to capture screenshots on the infected host.[90]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI can take screenshots of the victim\u2019s machine.[91]"
    },
    {
        "uniqueId": "S0680",
        "target": "S0680 LitePower",
        "description": "LitePower can take system screenshots and save them to %AppData%.[92]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar can take JPEG screenshots of an infected system.[93][94]"
    },
    {
        "uniqueId": "S0582",
        "target": "S0582 LookBack",
        "description": "LookBack can take desktop screenshots.[95]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete captures screenshots.[96][97][98][99]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa has used Apple\u2019s Core Graphic APIs, such as CGWindowListCreateImageFromArray, to capture the user's screen and open windows.[100][101]"
    },
    {
        "uniqueId": "S0282",
        "target": "S0282 MacSpy",
        "description": "MacSpy can capture screenshots of the desktop over multiple monitors.[67]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can take a screenshot of the target machine and save it to a file.[102]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound malware can take a screenshot and upload the file to its C2 server.[103]"
    },
    {
        "uniqueId": "S0652",
        "target": "S0652 MarkiRAT",
        "description": "MarkiRAT can capture screenshots that are initially saved as \u2018scr.jpg\u2019.[104]"
    },
    {
        "uniqueId": "S0167",
        "target": "S0167 Matryoshka",
        "description": "Matryoshka is capable of performing screen captures.[105][106]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can take and save screenshots.[102][107]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo can collect screenshots of the victim\u2019s machine.[108][109]"
    },
    {
        "uniqueId": "S0339",
        "target": "S0339 Micropsia",
        "description": "Micropsia takes screenshots every 90 seconds by calling the Gdi32.BitBlt API.[110]"
    },
    {
        "uniqueId": "S1122",
        "target": "S1122 Mispadu",
        "description": "Mispadu has the ability to capture screenshots on compromised hosts.[111][112][113][114]"
    },
    {
        "uniqueId": "G1019",
        "target": "G1019 MoustachedBouncer",
        "description": "MoustachedBouncer has used plugins to take screenshots on targeted systems.[115]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used malware that can capture screenshots of the victim\u2019s machine.[116]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can capture the victim's screen.[117][118][119][120]"
    },
    {
        "uniqueId": "S1090",
        "target": "S1090 NightClub",
        "description": "NightClub can load a module to call CreateCompatibleDC and GdipSaveImageToStream for screen capture.[115]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT can capture screenshots of the victim\u2019s machines.[121]"
    },
    {
        "uniqueId": "S1107",
        "target": "S1107 NKAbuse",
        "description": "NKAbuse can take screenshots of the victim machine.[122]"
    },
    {
        "uniqueId": "S0644",
        "target": "S0644 ObliqueRAT",
        "description": "ObliqueRAT can capture a screenshot of the current screen.[123]"
    },
    {
        "uniqueId": "S0340",
        "target": "S0340 Octopus",
        "description": "Octopus can capture screenshots of the victims\u2019 machine.[124][125][126]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has a tool called CANDYKING to capture a screenshot of user's desktop.[127]"
    },
    {
        "uniqueId": "S1050",
        "target": "S1050 PcShare",
        "description": "PcShare can take screen shots of a compromised machine.[68]"
    },
    {
        "uniqueId": "S0643",
        "target": "S0643 Peppy",
        "description": "Peppy can take screenshots on targeted systems.[48]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX allows the operator to capture screenshots.[128]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT has the ability to take screen captures.[129][130]"
    },
    {
        "uniqueId": "S0216",
        "target": "S0216 POORAIM",
        "description": "POORAIM can perform screen capturing.[53]"
    },
    {
        "uniqueId": "S0194",
        "target": "S0194 PowerSploit",
        "description": "PowerSploit's Get-TimedScreenshot Exfiltration module can take screenshots at regular intervals.[131][132]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS can retrieve screenshots from compromised hosts.[133][134]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER can capture a screenshot from a victim.[135]"
    },
    {
        "uniqueId": "S0113",
        "target": "S0113 Prikormka",
        "description": "Prikormka contains a module that captures screenshots of the victim's desktop.[136]"
    },
    {
        "uniqueId": "S0279",
        "target": "S0279 Proton",
        "description": "Proton captures the content of the desktop with the screencapture binary.[67]"
    },
    {
        "uniqueId": "S0147",
        "target": "S0147 Pteranodon",
        "description": "Pteranodon can capture screenshots at a configurable interval.[137][138]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy can drop a mouse-logger that will take small screenshots around at each click and then send back to the server.[139]"
    },
    {
        "uniqueId": "S0686",
        "target": "S0686 QuietSieve",
        "description": "QuietSieve has taken screenshots every five minutes and saved them to the user's local Application Data folder under Temp\\SymbolSourceSymbols\\icons or Temp\\ModeAuto\\icons.[140]"
    },
    {
        "uniqueId": "S0629",
        "target": "S0629 RainyDay",
        "description": "RainyDay has the ability to capture screenshots.[141]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can take screenshots every 30 seconds as well as when an external removable storage device is connected.[142]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession can capture screenshots from a compromised host.[143]"
    },
    {
        "uniqueId": "S0495",
        "target": "S0495 RDAT",
        "description": "RDAT can take a screenshot on the infected system.[144]"
    },
    {
        "uniqueId": "S0153",
        "target": "S0153 RedLeaves",
        "description": "RedLeaves can capture screenshots.[145][146]"
    },
    {
        "uniqueId": "S0332",
        "target": "S0332 Remcos",
        "description": "Remcos takes automated screenshots of the infected machine.[147]"
    },
    {
        "uniqueId": "S0375",
        "target": "S0375 Remexi",
        "description": "Remexi takes screenshots of windows of interest.[148]"
    },
    {
        "uniqueId": "S0592",
        "target": "S0592 RemoteUtilities",
        "description": "RemoteUtilities can take screenshots on a compromised host.[149]"
    },
    {
        "uniqueId": "S0379",
        "target": "S0379 Revenge RAT",
        "description": "Revenge RAT has a plugin for screen capture.[150]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin has a command named $screenshot that may be responsible for taking screenshots of the victim machine.[151]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can capture screenshots of the infected system using the gdi32 library.[152][153][154][155][156]"
    },
    {
        "uniqueId": "S0090",
        "target": "S0090 Rover",
        "description": "Rover takes screenshots of the compromised system's desktop and saves them to C:\\system\\screenshot.bmp for exfiltration every 60 minutes.[157]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can capture screenshots.[158][159]"
    },
    {
        "uniqueId": "S0546",
        "target": "S0546 SharpStage",
        "description": "SharpStage has the ability to capture the victim's screen.[160][161]"
    },
    {
        "uniqueId": "S0217",
        "target": "S0217 SHUTTERSPEED",
        "description": "SHUTTERSPEED can capture screenshots.[53]"
    },
    {
        "uniqueId": "G0091",
        "target": "G0091 Silence",
        "description": "Silence can capture victim screen activity.[162][163]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can take a screenshot of the current desktop.[164]"
    },
    {
        "uniqueId": "S0633",
        "target": "S0633 Sliver",
        "description": "Sliver can take screenshots of the victim\u2019s active display.[165]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA has taken a screenshot of a victim's desktop, named it \"Filter3.jpg\", and stored it in the local directory.[166]"
    },
    {
        "uniqueId": "S0649",
        "target": "S0649 SMOKEDHAM",
        "description": "SMOKEDHAM can capture screenshots of the victim\u2019s desktop.[167][168]"
    },
    {
        "uniqueId": "S0273",
        "target": "S0273 Socksbot",
        "description": "Socksbot can take screenshots.[169]"
    },
    {
        "uniqueId": "S0380",
        "target": "S0380 StoneDrill",
        "description": "StoneDrill can take screenshots.[170]"
    },
    {
        "uniqueId": "S1034",
        "target": "S1034 StrifeWater",
        "description": "StrifeWater has the ability to take screen captures.[171]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can take a screenshot from an infected host.[172]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate has the ability to capture screenshots.[173]"
    },
    {
        "uniqueId": "S0098",
        "target": "S0098 T9000",
        "description": "T9000 can take screenshots of the desktop and target application windows, saving them to user directories as one byte XOR encrypted .dat files.[174]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to take screenshots on an infected host including capturing content from windows of instant messaging applications.[175]"
    },
    {
        "uniqueId": "S0004",
        "target": "S0004 TinyZBot",
        "description": "TinyZBot contains screen capture functionality.[176]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can take a desktop screenshot and save the file into \\ProgramData\\Mail\\MailAg\\shot.png.[177][178]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian has the ability to take screenshots.[179]"
    },
    {
        "uniqueId": "S0199",
        "target": "S0199 TURNEDUP",
        "description": "TURNEDUP is capable of taking screenshots.[180]"
    },
    {
        "uniqueId": "S0275",
        "target": "S0275 UPPERCUT",
        "description": "UPPERCUT can capture desktop screenshots in the PNG format and send them to the C2 server.[181]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has used hooked APIs to take screenshots.[182][183]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has the ability to take screenshots on a compromised host.[184]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN can perform screen captures of the victim\u2019s machine.[185]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT has the ability to take a screenshot of the infected host desktop using Windows GDI+.[186]"
    },
    {
        "uniqueId": "S0161",
        "target": "S0161 XAgentOSX",
        "description": "XAgentOSX contains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList, CGDisplayCreateImage, and NSImage:initWithCGImage methods.[11]"
    },
    {
        "uniqueId": "S0658",
        "target": "S0658 XCSSET",
        "description": "XCSSET saves a screen capture of the victim's system with a numbered filename and .jpg extension. Screen captures are taken at specified intervals based on the system. [187]"
    },
    {
        "uniqueId": "S0248",
        "target": "S0248 yty",
        "description": "yty collects screenshots of the victim machine.[188]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "A variant of Zebrocy captures screenshots of the victim\u2019s machine in JPEG and BMP format.[33][189][190][191][192][193]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda can take screenshots of the victim\u2019s machine.[194]"
    },
    {
        "uniqueId": "S0086",
        "target": "S0086 ZLib",
        "description": "ZLib has the ability to obtain screenshots of the compromised system.[195]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell can capture screenshots.[196]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as CopyFromScreen, xwd, or screencapture.[1][2]. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "Settle, A., et al. (2016, August 8). MONSOON - Analysis Of An APT Campaign. Retrieved September 22, 2016."
    },
    {
        "uniqueId": "BE2",
        "target": "BE2 custom plugins, router abuse, and target profiles. Retrieved March 24, 2016.",
        "description": "Cash, D., Grunzweig, J., Meltzer, M., Adair, S., Lancaster, T. (2021, August 17). North Korean APT InkySquid Infects Victims Using Browser Exploits. Retrieved September 30, 2021."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Dupuy, T. and Faou, M. (2021, June). Gelsemium. Retrieved November 30, 2021."
    },
    {
        "uniqueId": "APT37",
        "target": "APT37 (Reaper): The Overlooked North Korean Actor. Retrieved March 1, 2018.",
        "description": "Grunzweig, J. (2018, October 01). NOKKI Almost Ties the Knot with DOGCALL: Reaper Group Uses New Malware to Deploy RAT. Retrieved November 5, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 - North Korean Remote Access Tool: ECCENTRICBANDWAGON. Retrieved March 18, 2021.",
        "description": "Schroeder, W., Warner, J., Nelson, M. (n.d.). Github PowerShellEmpire. Retrieved April 28, 2016."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 ATTACKED AND STOLE DATA. Retrieved August 24, 2018.",
        "description": "FinFisher. (n.d.). Retrieved December 20, 2017."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022.",
        "description": "Patrick Wardle. (n.d.). Mac Malware of 2017. Retrieved September 21, 2018."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.",
        "description": "Knight, S.. (2020, April 16). VMware Carbon Black TAU Threat Analysis: The Evolution of Lazarus. Retrieved May 1, 2020."
    },
    {
        "uniqueId": "42",
        "target": "42 Playbook Viewer. Retrieved December 20, 2017.",
        "description": "Mercer, W., et al. (2017, October 22). \"Cyber Conflict\" Decoy Document Used in Real Cyber Conflict. Retrieved November 2, 2018."
    },
    {
        "uniqueId": "17",
        "target": "17 \u2013 North Korean Trojan: KEYMARBLE. Retrieved August 16, 2018.",
        "description": "Bermejo, L., et al. (2017, June 22). Following the Trail of BlackTech\u2019s Cyber Espionage Campaigns. Retrieved May 5, 2020."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Backdoor Masquerades as Ethical Hacking Tool. Retrieved February 2, 2022.",
        "description": "BI.ZONE Cyber Threats Research Team. (2021, May 13). From pentest to APT attack: cybercriminal group FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022."
    },
    {
        "uniqueId": "43",
        "target": "43 steals Venezuelan military secrets to provide intelligence support for the reactionaries \u2014 HpReact campaign. Retrieved November 20, 2020.",
        "description": "M.L\u00e9veill\u00e9, M., Cherepanov, A.. (2022, January 25). Watering hole deploys new macOS malware, DazzleSpy, in Asia. Retrieved May 6, 2022."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 - New Targeted Attack in the Middle East. Retrieved December 20, 2017.",
        "description": "Computer Incident Response Center Luxembourg. (2013, March 29). Analysis of a PlugX variant. Retrieved November 5, 2018."
    },
    {
        "uniqueId": "19",
        "target": "19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020.",
        "description": "Dragos. (n.d.). ICS Cybersecurity Year in Review 2020. Retrieved February 25, 2021."
    },
    {
        "uniqueId": "V3",
        "target": "V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.",
        "description": "Sardiwal, M, et al. (2017, December 7). New Targeted Attack in the Middle East by APT34, a Suspected Iranian Threat Group, Using CVE-2017-11882 Exploit. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "APT27",
        "target": "APT27 Turns to Ransomware. Retrieved November 12, 2021.",
        "description": "Falcone, R. (2020, July 22). OilRig Targets Middle Eastern Telecommunications Organization and Adds Novel C2 Channel with Steganography to Its Inventory. Retrieved July 28, 2020."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 (MenuPass Group): New Tools, Global Campaign Latest Manifestation of Longstanding Threat. Retrieved June 29, 2017.",
        "description": "Accenture Security. (2018, April 23). Hogfish Redleaves Campaign. Retrieved July 2, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "FireEye. (2021, May 11). Shining a Light on DARKSIDE Ransomware Operations. Retrieved September 22, 2021."
    },
    {
        "uniqueId": "2021",
        "target": "2021 O'Leary, J., et al. (2017, September 20). Insights into Iranian Cyber Espionage: APT33 Targets Aerospace and Energy Sectors and has Ties to Destructive Malware. Retrieved February 15, 2018.",
        "description": "Matsuda, A., Muhammad I. (2018, September 13). APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018."
    },
    {
        "uniqueId": "TA0040",
        "target": "TA0040 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TACTICS"
    },
    {
        "uniqueId": "TA0040",
        "target": "TA0040 Created: 14 March 2019",
        "description": "Last Modified: 25 July 2019"
    },
    {
        "uniqueId": "14",
        "target": "14 ID Name Description",
        "description": "T1531 Account Access Removal Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a System Shutdown/Reboot to set malicious changes into place."
    },
    {
        "uniqueId": "T1485",
        "target": "T1485 Data Destruction Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such as del and rm often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from Disk Content Wipe and Disk Structure Wipe because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.",
        "description": "T1486 Data Encrypted for Impact Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted."
    },
    {
        "uniqueId": "T1565",
        "target": "T1565 Data Manipulation Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.",
        "description": ".001 Stored Data Manipulation Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
    },
    {
        "uniqueId": "002",
        "target": "002 Transmitted Data Manipulation Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.",
        "description": ".003 Runtime Data Manipulation Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
    },
    {
        "uniqueId": "T1491",
        "target": "T1491 Defacement Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for Defacement include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages.",
        "description": ".001 Internal Defacement An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of Internal Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished."
    },
    {
        "uniqueId": "002",
        "target": "002 External Defacement An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. External Defacement may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. External Defacement may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise.",
        "description": "T1561 Disk Wipe Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted."
    },
    {
        "uniqueId": "001",
        "target": "001 Disk Content Wipe Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.",
        "description": ".002 Disk Structure Wipe Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources."
    },
    {
        "uniqueId": "T1499",
        "target": "T1499 Endpoint Denial of Service Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.",
        "description": ".001 OS Exhaustion Flood Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes."
    },
    {
        "uniqueId": "002",
        "target": "002 Service Exhaustion Flood Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.",
        "description": ".003 Application Exhaustion Flood Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself."
    },
    {
        "uniqueId": "004",
        "target": "004 Application or System Exploitation Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.",
        "description": "T1657 Financial Theft Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware, business email compromise (BEC) and fraud, \"pig butchering,\" bank hacking, and exploiting cryptocurrency networks."
    },
    {
        "uniqueId": "T1495",
        "target": "T1495 Firmware Corruption Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.",
        "description": "T1490 Inhibit System Recovery Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options."
    },
    {
        "uniqueId": "T1498",
        "target": "T1498 Network Denial of Service Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.",
        "description": ".001 Direct Network Flood Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well."
    },
    {
        "uniqueId": "002",
        "target": "002 Reflection Amplification Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.",
        "description": "T1496 Resource Hijacking Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability."
    },
    {
        "uniqueId": "T1489",
        "target": "T1489 Service Stop Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.",
        "description": "T1529 System Shutdown/Reboot Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via Network Device CLI (e.g. reload)."
    },
    {
        "uniqueId": "T1590",
        "target": "T1590 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1590",
        "target": "T1590 Sub-techniques:  T1590.001, T1590.002, T1590.003, T1590.004, T1590.005, T1590.006",
        "description": "\u24d8"
    },
    {
        "uniqueId": "02",
        "target": "02 October 2020",
        "description": "Last Modified: 15 April 2021"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM gathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment.[4]"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    },
    {
        "uniqueId": "T1020",
        "target": "T1020 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "C2",
        "target": "C2 Channel and Exfiltration Over Alternative Protocol.",
        "description": "ID: T1020"
    },
    {
        "uniqueId": "001",
        "target": "001 \u24d8",
        "description": "Tactic: Exfiltration"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 24 January 2024"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor has a file uploader plugin that automatically exfiltrates the collected data and log files to the C2 server.[2]"
    },
    {
        "uniqueId": "S0050",
        "target": "S0050 CosmicDuke",
        "description": "CosmicDuke exfiltrates collected files automatically over FTP to remote servers.[3]"
    },
    {
        "uniqueId": "S0538",
        "target": "S0538 Crutch",
        "description": "Crutch has automatically exfiltrated stolen files to Dropbox.[4]"
    },
    {
        "uniqueId": "S0600",
        "target": "S0600 Doki",
        "description": "Doki has used a script that gathers information from a hardcoded list of IP addresses and uploads to an Ngrok URL.[5]"
    },
    {
        "uniqueId": "S0377",
        "target": "S0377 Ebury",
        "description": "Ebury can automatically exfiltrate gathered SSH credentials.[6]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire has the ability to automatically send collected data back to the threat actors' C2.[7]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors collected information via Empire, which was automatically sent back to the adversary's C2.[7]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has used modules that automatically upload gathered documents to the C2 server.[1]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has performed frequent and scheduled data exfiltration from compromised networks.[8]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron can be configured to automatically exfiltrate files under a specified directory.[9]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete\u2019s collected files are exfiltrated automatically to remote servers.[10]"
    },
    {
        "uniqueId": "S1017",
        "target": "S1017 OutSteel",
        "description": "OutSteel can automatically upload collected files to its C2 server.[11]"
    },
    {
        "uniqueId": "S0643",
        "target": "S0643 Peppy",
        "description": "Peppy has the ability to automatically exfiltrate files and keylogs.[12]"
    },
    {
        "uniqueId": "S0090",
        "target": "S0090 Rover",
        "description": "Rover automatically searches for files on local drives based on a predefined list of file extensions and sends them to the command and control server every 60 minutes. Rover also automatically sends keylogger files and screenshots to the C2 server on a regular timeframe.[13]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter sent collected system and network information compiled into a report to an adversary-controlled C2.[14]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has configured tools to automatically send collected files to attacker controlled servers.[15]"
    },
    {
        "uniqueId": "S0491",
        "target": "S0491 StrongPity",
        "description": "StrongPity can automatically exfiltrate collected documents to the C2 server.[16][17]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to manage an automated queue of egress files and commands sent to its C2.[18]"
    },
    {
        "uniqueId": "S0131",
        "target": "S0131 TINYTYPHON",
        "description": "When a document is found matching one of the extensions in the configuration, TINYTYPHON uploads it to the C2 server.[19]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage.[20]"
    },
    {
        "uniqueId": "S0136",
        "target": "S0136 USBStealer",
        "description": "USBStealer automatically exfiltrates collected files via removable media when an infected device connects to an air-gapped victim machine after initially being connected to an internet-enabled victim machine. [21]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "StrongPity3",
        "target": "StrongPity3 APT. Retrieved July 20, 2020.",
        "description": "Tudorica, R. et al. (2020, June 30). StrongPity APT - Revealing Trojanized Tools, Working Hours and Infrastructure. Retrieved July 20, 2020."
    },
    {
        "uniqueId": "T1200",
        "target": "T1200 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1200",
        "target": "T1200 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 30 March 2023"
    },
    {
        "uniqueId": "G0105",
        "target": "G0105 DarkVishnya",
        "description": "DarkVishnya used Bash Bunny, Raspberry Pi, netbooks or inexpensive laptops to connect to the company\u2019s local network.[5]"
    },
    {
        "uniqueId": "M1035",
        "target": "M1035 Limit Access to Resource Over Network",
        "description": "Establish network access control policies, such as using device certificates and the 802.1x standard. [6] Restrict use of DHCP to registered devices to prevent unregistered devices from communicating with trusted systems."
    },
    {
        "uniqueId": "M1034",
        "target": "M1034 Limit Hardware Installation",
        "description": "Block unknown devices and accessories by endpoint security configuration and monitoring agent."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network."
    },
    {
        "uniqueId": "DS0016",
        "target": "DS0016 Drive Drive Creation",
        "description": "Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Flow",
        "description": "Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware."
    },
    {
        "uniqueId": "T1505",
        "target": "T1505 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1505",
        "target": "T1505 Sub-techniques:  T1505.001, T1505.002, T1505.003, T1505.004, T1505.005",
        "description": "\u24d8"
    },
    {
        "uniqueId": "28",
        "target": "28 June 2019",
        "description": "Last Modified: 19 October 2022"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made."
    },
    {
        "uniqueId": "M1045",
        "target": "M1045 Code Signing",
        "description": "Ensure all application component binaries are signed by the correct application developers."
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Consider disabling software components from servers when possible to prevent abuse by adversaries.[2]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems."
    },
    {
        "uniqueId": "M1024",
        "target": "M1024 Restrict Registry Permissions",
        "description": "Consider using Group Policy to configure and block modifications to service and other critical server parameters in the Registry.[3]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.[4]"
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. [5]"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). [5]"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files."
    },
    {
        "uniqueId": "T1012",
        "target": "T1012 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1012",
        "target": "T1012 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 03 April 2023"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "ADVSTORESHELL can enumerate registry keys.[2][3]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32's backdoor can query the Windows Registry to gather system information. [4]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 has used various strains of malware to query the Registry.[5]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 queried registry values to determine items such as configured RDP ports and network configurations.[6]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor has opened the registry and performed query searches.[7]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can check for installed software on the system under the Registry key Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall.[8]"
    },
    {
        "uniqueId": "S0414",
        "target": "S0414 BabyShark",
        "description": "BabyShark has executed the reg query command for HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default.[9]"
    },
    {
        "uniqueId": "S0031",
        "target": "S0031 BACKSPACE",
        "description": "BACKSPACE is capable of enumerating and making modifications to an infected system's Registry.[10]"
    },
    {
        "uniqueId": "S0239",
        "target": "S0239 Bankshot",
        "description": "Bankshot searches for certain Registry keys to be configured before executing the payload.[11]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can query Windows\\CurrentVersion\\Uninstall for installed applications.[12][13]"
    },
    {
        "uniqueId": "S0574",
        "target": "S0574 BendyBear",
        "description": "BendyBear can query the host's Registry key at HKEY_CURRENT_USER\\Console\\QuickEdit to retrieve data.[14]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal has used the RegQueryValueExA function to retrieve proxy information in the Registry.[15]"
    },
    {
        "uniqueId": "S0570",
        "target": "S0570 BitPaymer",
        "description": "BitPaymer can use the RegEnumKeyW to iterate through Registry keys.[16]"
    },
    {
        "uniqueId": "S0252",
        "target": "S0252 Brave Prince",
        "description": "Brave Prince gathers information about the Registry.[17]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can check the Registry for specific keys.[18]"
    },
    {
        "uniqueId": "S0030",
        "target": "S0030 Carbanak",
        "description": "Carbanak checks the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings for proxy configurations information.[19]"
    },
    {
        "uniqueId": "S0484",
        "target": "S0484 Carberp",
        "description": "Carberp has searched the Image File Execution Options registry key for \"Debugger\" within every subkey.[20]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon enumerates values in the Registry.[21]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT contains watchdog functionality that periodically ensures HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load is set to point to its executable.[22]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower has the ability to enumerate Uninstall registry values.[23]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has queried Registry keys using reg query \\\\HKU\\\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers and reg query \\\\HKU\\\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.[24]"
    },
    {
        "uniqueId": "S0023",
        "target": "S0023 CHOPSTICK",
        "description": "CHOPSTICK provides access to the Windows Registry, which can be used to gather information.[25]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling has the ability to enumerate Registry keys, including KEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt\\strDataDir to search for a bitcoin wallet.[26][27]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can query HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\\\Excel\\Security\\AccessVBOM\\ to determine if the security setting for restricting default programmatic access is enabled.[28][29]"
    },
    {
        "uniqueId": "S0126",
        "target": "S0126 ComRAT",
        "description": "ComRAT can check the default browser by querying HKCR\\http\\shell\\open\\command.[30]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson can check the Registry for the presence of HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\last_edate to determine how long it has been installed on a host.[31]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can query the Registry to determine if it has already been installed on the system.[32]"
    },
    {
        "uniqueId": "S0354",
        "target": "S0354 Denis",
        "description": "Denis queries the Registry for keys and values.[33]"
    },
    {
        "uniqueId": "S0021",
        "target": "S0021 Derusbi",
        "description": "Derusbi is capable of enumerating Registry keys and values.[34]"
    },
    {
        "uniqueId": "S0186",
        "target": "S0186 DownPaper",
        "description": "DownPaper searches and reads the value of the Windows Update Registry Run key.[35]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has queried the Registry to identify victim information.[36]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack can collect the RegisteredOwner, RegisteredOrganization, and InstallDate registry values.[37]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic uses the rem reg query command to obtain values from Registry keys.[38]"
    },
    {
        "uniqueId": "S0512",
        "target": "S0512 FatDuke",
        "description": "FatDuke can get user agent strings for the default browser from HKCU\\Software\\Classes\\http\\shell\\open\\command.[39]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT queries the Registry for specific keys for potential privilege escalation and proxy information. FELIXROOT has also used WMI to query the Windows Registry.[40][41]"
    },
    {
        "uniqueId": "S0182",
        "target": "S0182 FinFisher",
        "description": "FinFisher queries Registry values as part of its anti-sandbox checks.[42][43]"
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten",
        "description": "Fox Kitten has accessed Registry hives ntuser.dat and UserClass.dat.[44]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can check Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings to extract the ProxyServer string.[45]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can open random files and Registry keys to obscure malware behavior from sandbox analysis.[46]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT has checked for the existence of a Service key to determine if it has already been installed on the system.[47]"
    },
    {
        "uniqueId": "S0249",
        "target": "S0249 Gold Dragon",
        "description": "Gold Dragon enumerates registry keys with the command regkeyenum and obtains information for the Registry key HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.[17]"
    },
    {
        "uniqueId": "S0376",
        "target": "S0376 HOPLIGHT",
        "description": "A variant of HOPLIGHT hooks lsass.exe, and lsass.exe then checks the Registry for the data value 'rdpproto' under the key SYSTEM\\CurrentControlSet\\Control\\Lsa Name.[48]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can retrieve system information, such as CPU speed, from Registry keys.[49][50]"
    },
    {
        "uniqueId": "S0604",
        "target": "S0604 Industroyer",
        "description": "Industroyer has a data wiper component that enumerates keys in the Registry HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services.[51]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can enumerate Registry values, keys, and data.[52]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "JPIN can enumerate Registry keys.[53]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has obtained specific Registry keys and values on a compromised host.[54]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. Another Lazarus Group malware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt.[55][56][57]"
    },
    {
        "uniqueId": "S0513",
        "target": "S0513 LiteDuke",
        "description": "LiteDuke can query the Registry to check for the presence of HKCU\\Software\\KasperskyLab.[39]"
    },
    {
        "uniqueId": "S0680",
        "target": "S0680 LitePower",
        "description": "LitePower can query the Registry for keys added to execute COM hijacking.[58]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can check for existing stratum cryptomining information in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr \u2013 %stratum info%.[59]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can enumerate Registry keys with all subkeys and values.[60]"
    },
    {
        "uniqueId": "S1015",
        "target": "S1015 Milan",
        "description": "Milan can query HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid to retrieve the machine GUID.[61]"
    },
    {
        "uniqueId": "S1047",
        "target": "S1047 Mori",
        "description": "Mori can read data from the Registry including from HKLM\\Software\\NFC\\IPA andHKLM\\Software\\NFC\\.[62]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT can read specific registry values.[63]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used reg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\" on a victim to query the Registry.[64]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, the threat actors executed /c cd /d c:\\windows\\temp\\ & reg query HKEY_CURRENT_USER\\Software\\<username>\\PuTTY\\Sessions\\ to detect recent PuTTY sessions, likely to further lateral movement.[65]"
    },
    {
        "uniqueId": "S0165",
        "target": "S0165 OSInfo",
        "description": "OSInfo queries the registry to look for information about Terminal Services.[66]"
    },
    {
        "uniqueId": "S1050",
        "target": "S1050 PcShare",
        "description": "PcShare can search the registry files of a compromised host.[45]"
    },
    {
        "uniqueId": "S0517",
        "target": "S0517 Pillowmint",
        "description": "Pillowmint has used shellcode which reads code stored in the registry keys \\REGISTRY\\SOFTWARE\\Microsoft\\DRM using the native Windows API as well as read HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces as part of its C2.[67]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX can enumerate and query for information contained within the Windows Registry.[68][69]"
    },
    {
        "uniqueId": "S0145",
        "target": "S0145 POWERSOURCE",
        "description": "POWERSOURCE queries Registry keys in preparation for setting Run keys to achieve persistence.[70]"
    },
    {
        "uniqueId": "S0194",
        "target": "S0194 PowerSploit",
        "description": "PowerSploit contains a collection of Privesc-PowerUp modules that can query Registry keys for potential opportunities.[71][72]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER may query the Registry by running reg query on a victim.[73]"
    },
    {
        "uniqueId": "S0238",
        "target": "S0238 Proxysvc",
        "description": "Proxysvc gathers product names from the Registry key: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion ProductName and the processor description from the Registry key HKLM\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0 ProcessorNameString.[74]"
    },
    {
        "uniqueId": "S0269",
        "target": "S0269 QUADAGENT",
        "description": "QUADAGENT checks if a value exists within a Registry key in the HKCU hive whose name is the same as the scheduled task it has created.[75]"
    },
    {
        "uniqueId": "S1076",
        "target": "S1076 QUIETCANARY",
        "description": "QUIETCANARY has the ability to retrieve information from the Registry.[76]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA uses the command reg query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\InternetSettings\".[77]"
    },
    {
        "uniqueId": "S0172",
        "target": "S0172 Reaver",
        "description": "Reaver queries the Registry to determine the correct Startup path to use for persistence.[78]"
    },
    {
        "uniqueId": "S0075",
        "target": "S0075 Reg",
        "description": "Reg may be used to gather details from the Windows Registry of a local or remote system at the command-line interface.[79]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can query the Registry to get random file extensions to append to encrypted files.[80]"
    },
    {
        "uniqueId": "S0448",
        "target": "S0448 Rising Sun",
        "description": "Rising Sun has identified the OS product name from a compromised host by searching the registry for SOFTWARE\\MICROSOFT\\Windows NT\\ CurrentVersion | ProductName.[81]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can access the HKLM\\System\\CurrentControlSet\\Services\\mssmbios\\Data\\SMBiosData Registry key to obtain the System manufacturer value to identify the machine type.[82]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot has used check_registry_keys as part of its environmental checks.[83]"
    },
    {
        "uniqueId": "S1099",
        "target": "S1099 Samurai",
        "description": "Samurai can query SOFTWARE\\Microsoft\\.NETFramework\\policy\\v2.0 for discovery.[84]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Shamoon queries several Registry keys to identify hard disk partitions to overwrite.[85]"
    },
    {
        "uniqueId": "S1019",
        "target": "S1019 Shark",
        "description": "Shark can query HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid to retrieve the machine GUID.[61]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot has queried the registry for proxy server information.[86]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can use the GetRegValue function to check Registry keys within HKCU\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated and HKLM\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated. It also contains additional modules that can check software AutoRun values and use the Win32 namespace to get values from HKCU, HKLM, HKCR, and HKCC hives.[87]"
    },
    {
        "uniqueId": "S0627",
        "target": "S0627 SodaMaster",
        "description": "SodaMaster has the ability to query the Registry to detect a key specific to VMware.[88]"
    },
    {
        "uniqueId": "G0038",
        "target": "G0038 Stealth Falcon",
        "description": "Stealth Falcon malware attempts to determine the installed version of .NET by querying the Registry.[89]"
    },
    {
        "uniqueId": "S0380",
        "target": "S0380 StoneDrill",
        "description": "StoneDrill has looked in the registry to find the default browser path.[90]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet searches the Registry for indicators of security programs.[91]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST collected the registry value HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid from compromised hosts.[92]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can search for the HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System Registry key to gather system information.[93]"
    },
    {
        "uniqueId": "S0242",
        "target": "S0242 SynAck",
        "description": "SynAck enumerates Registry keys associated with event logs.[94]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor can query the Registry on compromised hosts using RegQueryValueExA.[95]"
    },
    {
        "uniqueId": "S0560",
        "target": "S0560 TEARDROP",
        "description": "TEARDROP checked that HKU\\SOFTWARE\\Microsoft\\CTF existed before decoding its embedded payload.[92][96]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "A Threat Group-3390 tool can read and decrypt stored Registry values.[97]"
    },
    {
        "uniqueId": "S0668",
        "target": "S0668 TinyTurla",
        "description": "TinyTurla can query the Registry for its configuration information.[98]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command.[38] Turla has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes .[99]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can query the Registry, typically HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds, to find the key and path to decrypt and load its kernel driver and kernel driver loader.[100]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has used Reg to query the Registry for installed programs.[101][102]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak can use the Registry for code updates and to collect credentials.[103]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer checks the system for certain Registry keys.[104]"
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon",
        "description": "Volt Typhoon has queried the Registry on compromised systems, reg query hklm\\software\\, for information on installed software.[105]"
    },
    {
        "uniqueId": "S0612",
        "target": "S0612 WastedLocker",
        "description": "WastedLocker checks for specific registry keys related to the UCOMIEnumConnections and IActiveScriptParseProcedure32 interfaces.[106]"
    },
    {
        "uniqueId": "S0579",
        "target": "S0579 Waterbear",
        "description": "Waterbear can query the Registry key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSDTC\\MTxOCI\" to see if the value OracleOcilib exists.[107]"
    },
    {
        "uniqueId": "S0155",
        "target": "S0155 WINDSHIELD",
        "description": "WINDSHIELD can gather Registry values.[108]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT can search registry keys to identify antivirus programs on an compromised host.[109]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy executes the reg query command to obtain information in the Registry.[110]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda checks for the existence of a Registry key and if it contains certain values.[111]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has used a tool to query the Registry for proxy settings.[112]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell can query the netsvc group value data located in the svchost group Registry key.[113]"
    },
    {
        "uniqueId": "S1013",
        "target": "S1013 ZxxZ",
        "description": "ZxxZ can search the registry of a compromised host.[114]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls (such as RegOpenKeyExA) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. OS API calls associated with querying the Windows Registry are RegOpenKeyEx , RegOpenUserClassesRoot, RegQueryValueExA, and RegQueryValueExW. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing). Also monitor for RegOpenUserClassesRoot api to retrieve a handle to the HKEY_CLASSES_ROOT key for a specified user. The returned key has a view of the registry that merges the contents of the HKEY_LOCAL_MACHINE\\Software\\Classes key with the contents of the Software\\Classes keys in the user's registry hive."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Access",
        "description": "Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information."
    },
    {
        "uniqueId": "4656",
        "target": "4656 and 4663, a System Access Control List (SACL) that controls the use of specific access rights such as Enumerate sub-keys and Query key value is required for event generation. Depending on the Registry key you are monitoring, the implementation of a new System Access Control List (SACL) might be required. Depending of Registry key used for the creation of a System Access Control List (SACL), the generation of event ids 4656 and 4663 might be noisy.",
        "description": "Analytic 1 - Suspicious Registry"
    },
    {
        "uniqueId": "APT28",
        "target": "APT28 Under the Scope. Retrieved February 23, 2017.",
        "description": "Dumont, R. (2019, March 20). Fake or Fake: Keeping up with OceanLotus decoys. Retrieved April 1, 2019."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 World Tour 2021 on a tight schedule. Retrieved February 22, 2024.",
        "description": "Hromcova, Z. (2019, October). AT COMMANDS, TOR-BASED COMMUNICATIONS: MEET ATTOR, A FANTASY CREATURE AND ALSO A SPY PLATFORM. Retrieved May 6, 2020."
    },
    {
        "uniqueId": "APT30",
        "target": "APT30 AND THE MECHANICS OF A LONG-RUNNING CYBER ESPIONAGE OPERATION. Retrieved May 1, 2015.",
        "description": "US-CERT. (2017, December 13). Malware Analysis Report (MAR) - 10135536-B. Retrieved July 17, 2018."
    },
    {
        "uniqueId": "Team9",
        "target": "Team9 malware family. Retrieved December 1, 2020.",
        "description": "Harbison, M. (2021, February 9). BendyBear: Novel Chinese Shellcode Linked With Cyber Espionage Group BlackTech. Retrieved February 16, 2021."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "Frankoff, S., Hartley, B. (2018, November 14). Big Game Hunting: The Evolution of INDRIK SPIDER From Dridex Wire Fraud to BitPaymer Targeted Ransomware. Retrieved January 6, 2021."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Jansen, W . (2021, January 12). Abusing cloud services to fly under the radar. Retrieved January 19, 2021."
    },
    {
        "uniqueId": "11882",
        "target": "11882 Exploit. Retrieved December 20, 2017.",
        "description": "Sherstobitoff, R., Malhotra, A. (2018, April 24). Analyzing Operation GhostSecret: Attack Seeks to Steal Data Worldwide. Retrieved May 16, 2018."
    },
    {
        "uniqueId": "22",
        "target": "22 FireEye. (2020, December 13). Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor. Retrieved January 4, 2021.",
        "description": "Schlapfer, Patrick. (2022, June 6). A New Loader Gets Ready. Retrieved December 13, 2022."
    },
    {
        "uniqueId": "v2",
        "target": "v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021.",
        "description": "MSTIC, CDOC, 365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021."
    },
    {
        "uniqueId": "APT32",
        "target": "APT32 and the Threat to Global Corporations. Retrieved June 18, 2017.",
        "description": "MalwareBytes Threat Intelligence Team. (2022, August 3). Woody RAT: A new feature-rich malware spotted in the wild. Retrieved December 6, 2022."
    },
    {
        "uniqueId": "31",
        "target": "31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021.",
        "description": "Allievi, A., et al. (2014, October 28). Threat Spotlight: Group 72, Opening the ZxShell. Retrieved September 24, 2019."
    },
    {
        "uniqueId": "T1049",
        "target": "T1049 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1049",
        "target": "T1049 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 06 September 2022"
    },
    {
        "uniqueId": "G0018",
        "target": "G0018 admin@338",
        "description": "admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to display network connections: netstat -ano >> %temp%\\download[5]"
    },
    {
        "uniqueId": "G0138",
        "target": "G0138 Andariel",
        "description": "Andariel has used the netstat -naop tcp command to display TCP connections on a victim's machine.[6]"
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1",
        "description": "APT1 used the net use command to get a listing on network connections.[7]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "APT3 has a tool that can enumerate current network connections.[8][9][10]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 used the netstat -anpo tcp command to display TCP connections on the victim's machine.[11]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system.[12]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 has enumerated IP addresses of network resources and used the netstat command as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions.[13][14]"
    },
    {
        "uniqueId": "G1023",
        "target": "G1023 APT5",
        "description": "APT5 has used the BLOODMINE utility to collect data on web requests from Pulse Secure Connect logs.[15]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to gather TCP and UDP table status listings.[16]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk can use \"WNetOpenEnumW\" and \"WNetEnumResourceW\" to enumerate files in network resources for encryption.[17]"
    },
    {
        "uniqueId": "G0135",
        "target": "G0135 BackdoorDiplomacy",
        "description": "BackdoorDiplomacy has used NetCat and PortQry to enumerate network connections and display the status of related TCP and UDP ports.[18]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can execute netstat.exe -f on a compromised machine.[19]"
    },
    {
        "uniqueId": "S0089",
        "target": "S0089 BlackEnergy",
        "description": "BlackEnergy has gathered information about local network connections using netstat.[20][21]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon uses the netstat -r and netstat -an commands.[22]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower can use netsh wlan show profiles to list specific Wi-Fi profile details.[23]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used netstat -ano | findstr EST to discover network connections.[24]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can produce a sessions report from compromised hosts.[25]"
    },
    {
        "uniqueId": "S0244",
        "target": "S0244 Comnie",
        "description": "Comnie executes the netstat -ano command.[26]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can enumerate routine network connections from a compromised host.[27]"
    },
    {
        "uniqueId": "S0488",
        "target": "S0488 CrackMapExec",
        "description": "CrackMapExec can discover active sessions for a targeted system.[28]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba can use the function GetIpNetTable to recover the last connections to the victim's machine.[29]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack can collect network and active connection information.[30]"
    },
    {
        "uniqueId": "S0038",
        "target": "S0038 Duqu",
        "description": "The discovery modules used with Duqu can collect information on network connections.[31]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca employed a PowerShell script called RDPConnectionParser to read and filter the Windows event log \"Microsoft-Windows-TerminalServices-RDPClient/Operational\"(Event ID 1024) to obtain network information from RDP connections. Earth Lusca has also used netstat from a compromised system to obtain network connection information.[32]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor can enumerate all connected drives.[33]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can enumerate the current network connections of a host.[34]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic uses the net use, net session, and netstat commands to gather information on network connections.[35][36]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has used netstat and other net commands for network reconnaissance efforts.[37]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has been used to execute netstat -ano on a compromised host.[38]"
    },
    {
        "uniqueId": "C0007",
        "target": "C0007 FunnyDream",
        "description": "During FunnyDream, the threat actors used netstat to discover network connections on remote systems.[39]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM used netstat -oan to obtain information about the victim network connections.[40]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT uses the netstat command to find open ports on the victim\u2019s machine.[41]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has used netstat to monitor connections to specific ports.[42]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can list network connections.[43]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang performs local network connection discovery using netstat.[44][45]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI has used net session on the victim's machine.[46]"
    },
    {
        "uniqueId": "S1075",
        "target": "S1075 KOPILUWAK",
        "description": "KOPILUWAK can use netstat, Arp, and Net to discover current TCP connections.[47]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs collects a list of active and listening connections by using the command netstat -nao as well as a list of available network mappings with net use.[48]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has used net use to identify and establish a network connection with a remote host.[49]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar has a plugin to retrieve information about all active network sessions on the infected server.[50]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can identify the IP and port numbers for all remote connections from the compromised host.[51]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete uses the netsh wlan show networks mode=bssid and netsh wlan show interfaces commands to list all nearby WiFi networks and connected interfaces.[52]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can use the GetExtendedTcpTable function to retrieve information about established TCP connections.[53]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has used quser.exe to identify existing RDP connections.[54]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has used the \"WNetOpenEnumW\", \"WNetEnumResourceW\", \"WNetCloseEnum\" and \"WNetAddConnection2W\" functions to enumerate the network resources on the infected machine.[55]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has used net use to conduct connectivity checks to machines.[56]"
    },
    {
        "uniqueId": "S0443",
        "target": "S0443 MESSAGETAP",
        "description": "After loading the keyword and phone data files, MESSAGETAP begins monitoring all network connections to and from the victim server. [57]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used a PowerShell backdoor to check for Skype connections on the target machine.[58]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has used netstat -ano to determine network connection information.[59]"
    },
    {
        "uniqueId": "S0102",
        "target": "S0102 nbtstat",
        "description": "nbtstat can be used to discover current NetBIOS sessions."
    },
    {
        "uniqueId": "S0039",
        "target": "S0039 Net",
        "description": "Commands such as net use and net session can be used in Net to gather information about network connections from a particular host.[60]"
    },
    {
        "uniqueId": "S0104",
        "target": "S0104 netstat",
        "description": "netstat can be used to enumerate local network connections, including active TCP connections and other network statistics.[61]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can capture session logon details from a compromised host.[62]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used netstat -an on a victim to get a listing of network connections.[63]"
    },
    {
        "uniqueId": "S0439",
        "target": "S0439 Okrum",
        "description": "Okrum was seen using NetSess to discover NetBIOS sessions.[64]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the net session, net use, and netstat commands as part of their advanced reconnaissance.[65]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors collected a list of open connections on the infected system using netstat and checks whether it has an internet connection.[66]"
    },
    {
        "uniqueId": "S0165",
        "target": "S0165 OSInfo",
        "description": "OSInfo enumerates the current network connections similar to net use .[8]"
    },
    {
        "uniqueId": "S1091",
        "target": "S1091 Pacu",
        "description": "Once inside a Virtual Private Cloud, Pacu can attempt to identify DirectConnect, VPN, or VPC Peering.[67]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX has a module for enumerating TCP and UDP network connections and associated processes using the netstat command.[68]"
    },
    {
        "uniqueId": "G0033",
        "target": "G0033 Poseidon Group",
        "description": "Poseidon Group obtains and saves information about victim network interfaces and addresses.[69]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 contains an implementation of netstat to enumerate TCP and UDP connections.[70]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER may collect active network connections by running netstat -an on a victim.[71]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy has a built-in utility command for netstat, can do net session through PowerView, and has an interactive shell which can be used to discover additional information.[72]"
    },
    {
        "uniqueId": "S1032",
        "target": "S1032 PyDCrypt",
        "description": "PyDCrypt has used netsh to find RPC connections on remote machines.[73]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can use netstat to enumerate current network connections.[74][75]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can use netstat to enumerate network connections.[76]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA uses netstat -ano to search for specific IP address ranges.[77]"
    },
    {
        "uniqueId": "S0153",
        "target": "S0153 RedLeaves",
        "description": "RedLeaves can enumerate drives and Remote Desktop sessions.[78]"
    },
    {
        "uniqueId": "S0125",
        "target": "S0125 Remsec",
        "description": "Remsec can obtain a list of active connections and open ports.[79]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team had gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured.[80][81]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has the ability to execute the netstat command.[82]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter used the Windows function GetExtendedUdpTable to detect connected UDP endpoints.[83]"
    },
    {
        "uniqueId": "S0063",
        "target": "S0063 SHOTPUT",
        "description": "SHOTPUT uses netstat to list TCP connection status.[84]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot has retrieved a GUID associated with a present LAN connection on a compromised machine.[85]"
    },
    {
        "uniqueId": "S0633",
        "target": "S0633 Sliver",
        "description": "Sliver can collect network connection information.[86]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA can enumerate open ports on a victim machine.[87]"
    },
    {
        "uniqueId": "S0374",
        "target": "S0374 SpeakUp",
        "description": "SpeakUp uses the arp -a command. [88]"
    },
    {
        "uniqueId": "S0018",
        "target": "S0018 Sykipot",
        "description": "Sykipot may use netstat -ano to display active network connections.[89]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has run netstat -anp to search for rival malware connections.[90] TeamTNT has also used libprocesshider to modify /etc/ld.so.preload.[91]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "Threat Group-3390 has used net use and netstat to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim.[92]"
    },
    {
        "uniqueId": "G1022",
        "target": "G1022 ToddyCat",
        "description": "ToddyCat has used netstat -anop tcp to discover TCP connections to compromised hosts.[93]"
    },
    {
        "uniqueId": "S0678",
        "target": "S0678 Torisma",
        "description": "Torisma can use WTSEnumerateSessionsW to monitor remote desktop connections.[94]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can use netstat to collect a list of network connections.[95]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper has tested if the localhost network is available and other connection capability on an infected system using command scripts.[96]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.[35][97] Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.[98]"
    },
    {
        "uniqueId": "S0452",
        "target": "S0452 USBferry",
        "description": "USBferry can use netstat and nbtstat to detect active network connections.[96]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer can gather information about TCP connection state.[99]"
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon",
        "description": "Volt Typhoon has used netstat -ano on compromised hosts to enumerate network connections.[100][101]"
    },
    {
        "uniqueId": "S0579",
        "target": "S0579 Waterbear",
        "description": "Waterbear can use API hooks on GetExtendedTcpTable to retrieve a table containing a list of TCP endpoints available to the application.[102]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy uses netstat -aon to gather network connection information.[103]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Symantec Security Response. (2016, September 6). Buckeye cyberespionage group shifts gaze from US to Hong Kong. Retrieved September 26, 2016."
    },
    {
        "uniqueId": "11",
        "target": "11 Identified in Targeted Attacks. Retrieved January 14, 2016.",
        "description": "Yates, M. (2017, June 18). APT3 Uncovered: The code evolution of Pirpi. Retrieved September 28, 2017."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021.",
        "description": "Perez, D. et al. (2021, May 27). Re-Checking Your Pulse: Updates on Chinese APT Actors Compromising Pulse Secure VPN Devices. Retrieved February 5, 2024."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Vrabie, V., et al. (2021, March 10). FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016."
    },
    {
        "uniqueId": "BE2",
        "target": "BE2 custom plugins, router abuse, and target profiles. Retrieved March 24, 2016.",
        "description": "GovCERT. (2016, May 23). Technical Report about the Espionage Case at RUAG. Retrieved November 7, 2018."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Jansen, W . (2021, January 12). Abusing cloud services to fly under the radar. Retrieved January 19, 2021."
    },
    {
        "uniqueId": "APT15",
        "target": "APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS. Retrieved April 4, 2018.",
        "description": "Threat Intelligence Team. (2021, August 23). New variant of Konni malware used in campaign targetting Russia. Retrieved January 5, 2022."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022.",
        "description": "Hsu, K. et al. (2020, June 24). Lucifer: New Cryptojacking and DDoS Hybrid Malware Exploiting High and Critical Vulnerabilities to Infect Windows Devices. Retrieved November 16, 2020."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "Mundo, A. (2020, March 26). Ransomware Maze. Retrieved May 18, 2020."
    },
    {
        "uniqueId": "11882",
        "target": "11882 Exploit. Retrieved December 20, 2017.",
        "description": "Nicolas Verdier. (n.d.). Retrieved January 29, 2018."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Yonathan Klijnsma. (2016, May 17). Mofang: A politically motivated information stealing adversary. Retrieved May 12, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "Check Point Research. (2019, February 4). SpeakUp: A New Undetected Backdoor Linux Trojan. Retrieved April 17, 2019."
    },
    {
        "uniqueId": "T1129",
        "target": "T1129 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "C2",
        "target": "C2 network communications or execution of specific actions on objective.",
        "description": "The Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.[1][2][3][4]"
    },
    {
        "uniqueId": "T1129",
        "target": "T1129 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 12 October 2023"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth uses the LoadLibraryExW() function to load additional modules. [6]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor's dispatcher can execute additional plugins by loading the respective DLLs.[7]"
    },
    {
        "uniqueId": "S0520",
        "target": "S0520 BLINDINGCAN",
        "description": "BLINDINGCAN has loaded and executed DLLs in memory during runtime on a victim machine.[8]"
    },
    {
        "uniqueId": "S0415",
        "target": "S0415 BOOSTWRITE",
        "description": "BOOSTWRITE has used the DWriteCreateFactory() function to load additional modules.[9]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can use LoadLibrary to attempt to execute GdiPlus.dll.[10]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can load DLLs.[11]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack contains a function that calls LoadLibrary and GetProcAddress.[12]"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb's loader can call the load() function to load the FoggyWeb dll into an Application Domain on a compromised AD FS server.[13]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT can load DLLs into memory.[14]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can load and call DLL functions.[15][16]"
    },
    {
        "uniqueId": "S0607",
        "target": "S0607 KillDisk",
        "description": "KillDisk loads and executes functions from a DLL.[17]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo had used AutoIt to load and execute the DLL payload.[18]"
    },
    {
        "uniqueId": "S0352",
        "target": "S0352 OSX_OCEANLOTUS.D",
        "description": "For network communications, OSX_OCEANLOTUS.D loads a dynamic library (.dylib file) using dlopen() and obtains a function pointer to execute within that shared library using dlsym().[4]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon has used call to LoadLibrary to load its installer. PipeMon loads its modules using reflective loading or custom shellcode.[19]"
    },
    {
        "uniqueId": "S0196",
        "target": "S0196 PUNCHBUGGY",
        "description": "PUNCHBUGGY can load a DLL using the LoadLibrary API.[20]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "RotaJakiro uses dynamically linked shared libraries (.so files) to execute additional functionality using dlopen() and dlsym().[3]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet calls LoadLibrary then executes exports from a DLL.[21]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to inject the LoadLibrary call template DLL into running processes.[22]"
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Identify and block potentially malicious software executed through this technique by using application control tools capable of preventing unknown modules from being loaded."
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitoring module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of shared modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled, or system modules such that deviation from known module loads may be suspicious"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may execute malicious payloads via loading shared modules."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 North Korean Remote Access Trojan: BLINDINGCAN. Retrieved August 19, 2020.",
        "description": "Carr, N, et all. (2019, October 10). Mahalo FIN7: Responding to the Criminal Operators\u2019 New Tools and Techniques. Retrieved October 11, 2019."
    },
    {
        "uniqueId": "22",
        "target": "22 GReAT. (2019, April 10). Project TajMahal \u2013 a sophisticated new APT framework. Retrieved October 14, 2019.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "GROUPS"
    },
    {
        "uniqueId": "152",
        "target": "152 ID Name Associated Groups Description",
        "description": "G0018 admin@338"
    },
    {
        "uniqueId": "338",
        "target": "338 is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as PoisonIvy, as well as some non-public backdoors.",
        "description": "G0130 Ajax Security Team Operation Woolen-Goldfish, AjaxTM, Rocket Kitten, Flying Kitten, Operation Saffron Rose"
    },
    {
        "uniqueId": "2010",
        "target": "2010 and believed to be operating out of Iran. By 2014 Ajax Security Team transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies.",
        "description": "G1024 Akira GOLD SAHARA, PUNK SPIDER"
    },
    {
        "uniqueId": "G1000",
        "target": "G1000 ALLANITE Palmetto Fusion",
        "description": "ALLANITE is a suspected Russian cyber espionage group, that has primarily targeted the electric utility sector within the United States and United Kingdom. The group's tactics and techniques are reportedly similar to Dragonfly, although ALLANITEs technical capabilities have not exhibited disruptive or destructive abilities. It has been suggested that the group maintains a presence in ICS for the purpose of gaining understanding of processes and to maintain persistence."
    },
    {
        "uniqueId": "G0138",
        "target": "G0138 Andariel Silent Chollima, PLUTONIUM, Onyx Sleet",
        "description": "Andariel is a North Korean state-sponsored threat group that has been active since at least 2009. Andariel has primarily focused its operations--which have included destructive attacks--against South Korean government agencies, military organizations, and a variety of domestic companies; they have also conducted cyber financial operations against ATMs, banks, and cryptocurrency exchanges. Andariel's notable activity includes Operation Black Mine, Operation GoldenAxe, and Campaign Rifle."
    },
    {
        "uniqueId": "G1007",
        "target": "G1007 Aoqin Dragon",
        "description": "Aoqin Dragon is a suspected Chinese cyber espionage threat group that has been active since at least 2013. Aoqin Dragon has primarily targeted government, education, and telecommunication organizations in Australia, Cambodia, Hong Kong, Singapore, and Vietnam. Security researchers noted a potential association between Aoqin Dragon and UNC94, based on malware, infrastructure, and targets."
    },
    {
        "uniqueId": "G1028",
        "target": "G1028 APT-C-23 Mantis, Arid Viper, Desert Falcon, TAG-63, Grey Karkadann, Big Bang APT, Two-tailed Scorpion",
        "description": "APT-C-23 is a threat group that has been active since at least 2014. APT-C-23 has primarily focused its operations on the Middle East, including Israeli military assets. APT-C-23 has developed mobile spyware targeting Android and iOS devices since 2017."
    },
    {
        "uniqueId": "G0099",
        "target": "G0099 APT-C-36 Blind Eagle",
        "description": "APT-C-36 is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing."
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1 Comment Crew, Comment Group, Comment Panda",
        "description": "APT1 is a Chinese threat group that has been attributed to the 2nd Bureau of the People\u2019s Liberation Army (PLA) General Staff Department\u2019s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398."
    },
    {
        "uniqueId": "G0005",
        "target": "G0005 APT12 IXESHE, DynCalc, Numbered Panda, DNSCALC",
        "description": "APT12 is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments."
    },
    {
        "uniqueId": "G0023",
        "target": "G0023 APT16",
        "description": "APT16 is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations."
    },
    {
        "uniqueId": "G0025",
        "target": "G0025 APT17 Deputy Dog",
        "description": "APT17 is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations."
    },
    {
        "uniqueId": "G0026",
        "target": "G0026 APT18 TG-0416, Dynamite Panda, Threat Group-0416",
        "description": "APT18 is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical."
    },
    {
        "uniqueId": "G0073",
        "target": "G0073 APT19 Codoso, C0d0so0, Codoso Team, Sunshop Group",
        "description": "APT19 is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms. Some analysts track APT19 and Deep Panda as the same group, but it is unclear from open source information if the groups are the same."
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28 IRON TWILIGHT, SNAKEMACKEREL, Swallowtail, Group 74, Sednit, Sofacy, Pawn Storm, Fancy Bear, STRONTIUM, Tsar Team, Threat Group-4127, TG-4127, Forest Blizzard, FROZENLAKE",
        "description": "APT28 is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165. This group has been active since at least 2004."
    },
    {
        "uniqueId": "APT28",
        "target": "APT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations. Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team.",
        "description": "G0016 APT29 IRON RITUAL, IRON HEMLOCK, NobleBaron, Dark Halo, StellarParticle, NOBELIUM, UNC2452, YTTRIUM, The Dukes, Cozy Bear, CozyDuke, SolarStorm, Blue Kitsune, UNC3524, Midnight Blizzard"
    },
    {
        "uniqueId": "APT29",
        "target": "APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR). They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015.",
        "description": "In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes. Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm."
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3 Gothic Panda, Pirpi, UPS Team, Buckeye, Threat Group-0110, TG-0110",
        "description": "APT3 is a China-based threat group that researchers have attributed to China's Ministry of State Security. This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap. As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong."
    },
    {
        "uniqueId": "G0013",
        "target": "G0013 APT30",
        "description": "APT30 is a threat group suspected to be associated with the Chinese government. While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches."
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32 SeaLotus, OceanLotus, APT-C-00, Canvas Cyclone, BISMUTH",
        "description": "APT32 is a suspected Vietnam-based threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims."
    },
    {
        "uniqueId": "G0064",
        "target": "G0064 APT33 HOLMIUM, Elfin, Peach Sandstorm",
        "description": "APT33 is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors."
    },
    {
        "uniqueId": "G0067",
        "target": "G0067 APT37 InkySquid, ScarCruft, Reaper, Group123, TEMP.Reaper, Ricochet Chollima",
        "description": "APT37 is a North Korean state-sponsored cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. APT37 has also been linked to the following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, North Korean Human Rights, and Evil New Year 2018."
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38 NICKEL GLADSTONE, BeagleBoyz, Bluenoroff, Stardust Chollima, Sapphire Sleet, COPERNICIUM",
        "description": "APT38 is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau. Active since at least 2014, APT38 has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which APT38 stole $81 million, as well as attacks against Bancomext and Banco de Chile ; some of their attacks have been destructive."
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39 ITG07, Chafer, Remix Kitten",
        "description": "APT39 is one of several names for cyber espionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. APT39 has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS."
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41 Wicked Panda, Brass Typhoon, BARIUM",
        "description": "APT41 is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, APT41 has been observed targeting healthcare, telecom, technology, and video game industries in 14 countries. APT41 overlaps at least partially with public reporting on groups including BARIUM and Winnti Group."
    },
    {
        "uniqueId": "G1023",
        "target": "G1023 APT5 Mulberry Typhoon, MANGANESE, BRONZE FLEETWOOD, Keyhole Panda, UNC2630",
        "description": "APT5 is a China-based espionage actor that has been active since at least 2007 primarily targeting the telecommunications, aerospace, and defense industries throughout the U.S., Europe, and Asia. APT5 has displayed advanced tradecraft and significant interest in compromising networking devices and their underlying software including through the use of zero-day exploits."
    },
    {
        "uniqueId": "G0143",
        "target": "G0143 Aquatic Panda",
        "description": "Aquatic Panda is a suspected China-based threat group with a dual mission of intelligence collection and industrial espionage. Active since at least May 2020, Aquatic Panda has primarily targeted entities in the telecommunications, technology, and government sectors."
    },
    {
        "uniqueId": "G0001",
        "target": "G0001 Axiom Group 72",
        "description": "Axiom is a suspected Chinese cyber espionage group that has targeted the aerospace, defense, government, manufacturing, and media sectors since at least 2008. Some reporting suggests a degree of overlap between Axiom and Winnti Group but the two groups appear to be distinct based on differences in reporting on TTPs and targeting."
    },
    {
        "uniqueId": "G0135",
        "target": "G0135 BackdoorDiplomacy",
        "description": "BackdoorDiplomacy is a cyber espionage threat group that has been active since at least 2017. BackdoorDiplomacy has targeted Ministries of Foreign Affairs and telecommunication companies in Africa, Europe, the Middle East, and Asia."
    },
    {
        "uniqueId": "G1002",
        "target": "G1002 BITTER T-APT-17",
        "description": "BITTER is a suspected South Asian cyber espionage threat group that has been active since at least 2013. BITTER has targeted government, energy, and engineering organizations in Pakistan, China, Bangladesh, and Saudi Arabia."
    },
    {
        "uniqueId": "G0063",
        "target": "G0063 BlackOasis",
        "description": "BlackOasis is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks. A group known by Microsoft as NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified."
    },
    {
        "uniqueId": "G0098",
        "target": "G0098 BlackTech Palmerworm",
        "description": "BlackTech is a suspected Chinese cyber espionage group that has primarily targeted organizations in East Asia--particularly Taiwan, Japan, and Hong Kong--and the US since at least 2013. BlackTech has used a combination of custom malware, dual-use tools, and living off the land tactics to compromise media, construction, engineering, electronics, and financial company networks."
    },
    {
        "uniqueId": "G0108",
        "target": "G0108 Blue Mockingbird",
        "description": "Blue Mockingbird is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019."
    },
    {
        "uniqueId": "G0097",
        "target": "G0097 Bouncing Golf",
        "description": "Bouncing Golf is a cyberespionage campaign targeting Middle Eastern countries."
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER REDBALDKNIGHT, Tick",
        "description": "BRONZE BUTLER is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry."
    },
    {
        "uniqueId": "G0008",
        "target": "G0008 Carbanak Anunak",
        "description": "Carbanak is a cybercriminal group that has used Carbanak malware to target financial institutions since at least 2013. Carbanak may be linked to groups tracked separately as Cobalt Group and FIN7 that have also used Carbanak malware."
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry."
    },
    {
        "uniqueId": "G1021",
        "target": "G1021 Cinnamon Tempest DEV-0401, Emperor Dragonfly, BRONZE STARLIGHT",
        "description": "Cinnamon Tempest is a China-based threat group that has been active since at least 2021 deploying multiple strains of ransomware based on the leaked Babuk source code. Cinnamon Tempest does not operate their ransomware on an affiliate model or purchase access but appears to act independently in all stages of the attack lifecycle. Based on victimology, the short lifespan of each ransomware variant, and use of malware attributed to government-sponsored threat groups, Cinnamon Tempest may be motivated by intellectual property theft or cyberespionage rather than financial gain."
    },
    {
        "uniqueId": "G0003",
        "target": "G0003 Cleaver Threat Group 2889, TG-2889",
        "description": "Cleaver is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver. Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889)."
    },
    {
        "uniqueId": "G0080",
        "target": "G0080 Cobalt Group GOLD KINGSWOOD, Cobalt Gang, Cobalt Spider",
        "description": "Cobalt Group is a financially motivated threat group that has primarily targeted financial institutions since at least 2016. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. Cobalt Group has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims. Reporting indicates there may be links between Cobalt Group and both the malware Carbanak and the group Carbanak."
    },
    {
        "uniqueId": "G0142",
        "target": "G0142 Confucius Confucius APT",
        "description": "Confucius is a cyber espionage group that has primarily targeted military personnel, high-profile personalities, business persons, and government organizations in South Asia since at least 2013. Security researchers have noted similarities between Confucius and Patchwork, particularly in their respective custom malware code and targets."
    },
    {
        "uniqueId": "G0052",
        "target": "G0052 CopyKittens",
        "description": "CopyKittens is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip."
    },
    {
        "uniqueId": "G1012",
        "target": "G1012 CURIUM Crimson Sandstorm, TA456, Tortoise Shell",
        "description": "CURIUM is an Iranian threat group first reported in November 2021 that has invested in building a relationship with potential targets via social media over a period of months to establish trust and confidence before sending malware. Security researchers note CURIUM has demonstrated great patience and persistence by chatting with potential targets daily and sending benign files to help lower their security consciousness."
    },
    {
        "uniqueId": "G1027",
        "target": "G1027 CyberAv3ngers Soldiers of Soloman",
        "description": "The CyberAv3ngers are a suspected Iranian Government Islamic Revolutionary Guard Corps (IRGC)-affiliated APT group. The CyberAv3ngers have been known to be active since at least 2020, with disputed and false claims of critical infrastructure compromises in Israel."
    },
    {
        "uniqueId": "G0070",
        "target": "G0070 Dark Caracal",
        "description": "Dark Caracal is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012."
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel DUBNIUM, Zigzag Hail",
        "description": "Darkhotel is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. Darkhotel has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks."
    },
    {
        "uniqueId": "G0079",
        "target": "G0079 DarkHydrus",
        "description": "DarkHydrus is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks."
    },
    {
        "uniqueId": "G0105",
        "target": "G0105 DarkVishnya",
        "description": "DarkVishnya is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region."
    },
    {
        "uniqueId": "G0009",
        "target": "G0009 Deep Panda Shell Crew, WebMasters, KungFu Kittens, PinkPanther, Black Vine",
        "description": "Deep Panda is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications. The intrusion into healthcare company Anthem has been attributed to Deep Panda. This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther. Deep Panda also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion. Some analysts track Deep Panda and APT19 as the same group, but it is unclear from open source information if the groups are the same."
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly TEMP.Isotope, DYMALLOY, Berserk Bear, TG-4192, Crouching Yeti, IRON LIBERTY, Energetic Bear, Ghost Blizzard, BROMINE",
        "description": "Dragonfly is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16. Active since at least 2010, Dragonfly has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks."
    },
    {
        "uniqueId": "G0017",
        "target": "G0017 DragonOK",
        "description": "DragonOK is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, DragonOK is thought to have a direct or indirect relationship with the threat group Moafee. It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT."
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca TAG-22, Charcoal Typhoon, CHROMIUM, ControlX",
        "description": "Earth Lusca is a suspected China-based cyber espionage group that has been active since at least April 2019. Earth Lusca has targeted organizations in Australia, China, Hong Kong, Mongolia, Nepal, the Philippines, Taiwan, Thailand, Vietnam, the United Arab Emirates, Nigeria, Germany, France, and the United States. Targets included government institutions, news media outlets, gambling companies, educational institutions, COVID-19 research organizations, telecommunications companies, religious movements banned in China, and cryptocurrency trading platforms; security researchers assess some Earth Lusca operations may be financially motivated."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 and the Winnti Group cluster, however security researchers assess Earth Lusca's techniques and infrastructure are separate.",
        "description": "G0066 Elderwood Elderwood Gang, Beijing Group, Sneaky Panda"
    },
    {
        "uniqueId": "2009",
        "target": "2009 Google intrusion known as Operation Aurora. The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers.",
        "description": "G1003 Ember Bear Saint Bear, UNC2589, UAC-0056, Lorec53, Lorec Bear, Bleeding Bear"
    },
    {
        "uniqueId": "G0020",
        "target": "G0020 Equation",
        "description": "Equation is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives."
    },
    {
        "uniqueId": "G0120",
        "target": "G0120 Evilnum",
        "description": "Evilnum is a financially motivated threat group that has been active since at least 2018."
    },
    {
        "uniqueId": "G1011",
        "target": "G1011 EXOTIC LILY",
        "description": "EXOTIC LILY is a financially motivated group that has been closely linked with Wizard Spider and the deployment of ransomware including Conti and Diavol. EXOTIC LILY may be acting as an initial access broker for other malicious actors, and has targeted a wide range of industries including IT, cybersecurity, and healthcare since at least September 2021."
    },
    {
        "uniqueId": "G0137",
        "target": "G0137 Ferocious Kitten",
        "description": "Ferocious Kitten is a threat group that has primarily targeted Persian-speaking individuals in Iran since at least 2015."
    },
    {
        "uniqueId": "G0051",
        "target": "G0051 FIN10",
        "description": "FIN10 is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations."
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13 Elephant Beetle",
        "description": "FIN13 is a financially motivated cyber threat group that has targeted the financial, retail, and hospitality industries in Mexico and Latin America, as early as 2016. FIN13 achieves its objectives by stealing intellectual property, financial data, mergers and acquisition information, or PII."
    },
    {
        "uniqueId": "G0085",
        "target": "G0085 FIN4",
        "description": "FIN4 is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013. FIN4 is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence."
    },
    {
        "uniqueId": "G0053",
        "target": "G0053 FIN5",
        "description": "FIN5 is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian."
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6 Magecart Group 6, ITG08, Skeleton Spider, TAAL, Camouflage Tempest",
        "description": "FIN6 is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors."
    },
    {
        "uniqueId": "G0046",
        "target": "G0046 FIN7 GOLD NIAGARA, ITG14, Carbon Spider, ELBRUS, Sangria Tempest",
        "description": "FIN7 is a financially-motivated threat group that has been active since 2013. FIN7 has primarily targeted the retail, restaurant, hospitality, software, consulting, financial services, medical equipment, cloud services, media, food and beverage, transportation, and utilities industries in the U.S. A portion of FIN7 was run out of a front company called Combi Security and often used point-of-sale malware for targeting efforts. Since 2020, FIN7 shifted operations to a big game hunting (BGH) approach including use of REvil ransomware and their own Ransomware as a Service (RaaS), Darkside. FIN7 may be linked to the Carbanak Group, but there appears to be several groups using Carbanak malware and are therefore tracked separately."
    },
    {
        "uniqueId": "G0061",
        "target": "G0061 FIN8 Syssphinx",
        "description": "FIN8 is a financially motivated threat group that has been active since at least January 2016, and known for targeting organizations in the hospitality, retail, entertainment, insurance, technology, chemical, and financial sectors. In June 2021, security researchers detected FIN8 switching from targeting point-of-sale (POS) devices to distributing a number of ransomware variants."
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten UNC757, Parisite, Pioneer Kitten, RUBIDIUM, Lemon Sandstorm",
        "description": "Fox Kitten is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. Fox Kitten has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering."
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM Granite Typhoon",
        "description": "GALLIUM is a cyberespionage group that has been active since at least 2012, primarily targeting telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam. This group is particularly known for launching Operation Soft Cell, a long-term campaign targeting telecommunications providers. Security researchers have identified GALLIUM as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors."
    },
    {
        "uniqueId": "G0084",
        "target": "G0084 Gallmaker",
        "description": "Gallmaker is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors."
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group IRON TILDEN, Primitive Bear, ACTINIUM, Armageddon, Shuckworm, DEV-0157, Aqua Blizzard",
        "description": "Gamaredon Group is a suspected Russian cyber espionage threat group that has targeted military, NGO, judiciary, law enforcement, and non-profit organizations in Ukraine since at least 2013. The name Gamaredon Group comes from a misspelling of the word \"Armageddon\", which was detected in the adversary's early campaigns."
    },
    {
        "uniqueId": "G0036",
        "target": "G0036 GCMAN",
        "description": "GCMAN is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services."
    },
    {
        "uniqueId": "G0115",
        "target": "G0115 GOLD SOUTHFIELD Pinchy Spider",
        "description": "GOLD SOUTHFIELD is a financially motivated threat group active since at least 2018 that operates the REvil Ransomware-as-a Service (RaaS). GOLD SOUTHFIELD provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, GOLD SOUTHFIELD started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked."
    },
    {
        "uniqueId": "G0078",
        "target": "G0078 Gorgon Group",
        "description": "Gorgon Group is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States."
    },
    {
        "uniqueId": "G0043",
        "target": "G0043 Group5",
        "description": "Group5 is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. Group5 has used two commonly available remote access tools (RATs), njRAT and NanoCore, as well as an Android RAT, DroidJack."
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM Operation Exchange Marauder, Silk Typhoon",
        "description": "HAFNIUM is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. HAFNIUM primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs."
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE Lyceum, Siamesekitten, Spirlin",
        "description": "HEXANE is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. HEXANE's TTPs appear similar to APT33 and OilRig but due to differences in victims and tools it is tracked as a separate entity."
    },
    {
        "uniqueId": "G0126",
        "target": "G0126 Higaisa",
        "description": "Higaisa is a threat group suspected to have South Korean origins. Higaisa has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. Higaisa was first disclosed in early 2019 but is assessed to have operated as early as 2009."
    },
    {
        "uniqueId": "G0100",
        "target": "G0100 Inception Inception Framework, Cloud Atlas",
        "description": "Inception is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East."
    },
    {
        "uniqueId": "G0136",
        "target": "G0136 IndigoZebra",
        "description": "IndigoZebra is a suspected Chinese cyber espionage group that has been targeting Central Asian governments since at least 2014."
    },
    {
        "uniqueId": "G0119",
        "target": "G0119 Indrik Spider Evil Corp, Manatee Tempest, DEV-0243",
        "description": "Indrik Spider is a Russia-based cybercriminal group that has been active since at least 2014. Indrik Spider initially started with the Dridex banking Trojan, and then by 2017 they began running ransomware operations using BitPaymer, WastedLocker, and Hades ransomware. Following U.S. sanctions and an indictment in 2019, Indrik Spider changed their tactics and diversified their toolset."
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang APT15, Mirage, Vixen Panda, GREF, Playful Dragon, RoyalAPT, NICKEL, Nylon Typhoon",
        "description": "Ke3chang is a threat group attributed to actors operating out of China. Ke3chang has targeted oil, government, diplomatic, military, and NGOs in Central and South America, the Caribbean, Europe, and North America since at least 2010."
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky Black Banshee, Velvet Chollima, Emerald Sleet, THALLIUM",
        "description": "Kimsuky is a North Korea-based cyber espionage group that has been active since at least 2012. The group initially focused on targeting South Korean government entities, think tanks, and individuals identified as experts in various fields, and expanded its operations to include the United States, Russia, Europe, and the UN. Kimsuky has focused its intelligence collection activities on foreign policy and national security issues related to the Korean peninsula, nuclear policy, and sanctions."
    },
    {
        "uniqueId": "2014",
        "target": "2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019).",
        "description": "North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups."
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$ DEV-0537, Strawberry Tempest",
        "description": "LAPSUS$ is cyber criminal threat group that has been active since at least mid-2021. LAPSUS$ specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors."
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group Labyrinth Chollima, HIDDEN COBRA, Guardians of Peace, ZINC, NICKEL ACADEMY, Diamond Sleet",
        "description": "Lazarus Group is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau. The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by Lazarus Group correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain."
    },
    {
        "uniqueId": "G0140",
        "target": "G0140 LazyScripter",
        "description": "LazyScripter is threat group that has mainly targeted the airlines industry since at least 2018, primarily using open-source toolsets."
    },
    {
        "uniqueId": "G0077",
        "target": "G0077 Leafminer Raspite",
        "description": "Leafminer is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017."
    },
    {
        "uniqueId": "G0065",
        "target": "G0065 Leviathan MUDCARP, Kryptonite Panda, Gadolinium, BRONZE MOHAWK, TEMP.Jumper, APT40, TEMP.Periscope, Gingham Typhoon",
        "description": "Leviathan is a Chinese state-sponsored cyber espionage group that has been attributed to the Ministry of State Security's (MSS) Hainan State Security Department and an affiliated front company. Active since at least 2009, Leviathan has targeted the following sectors: academia, aerospace/aviation, biomedical, defense industrial base, government, healthcare, manufacturing, maritime, and transportation across the US, Canada, Europe, the Middle East, and Southeast Asia."
    },
    {
        "uniqueId": "G0030",
        "target": "G0030 Lotus Blossom DRAGONFISH, Spring Dragon, RADIUM, Raspberry Typhoon",
        "description": "Lotus Blossom is a threat group that has targeted government and military organizations in Southeast Asia."
    },
    {
        "uniqueId": "G1014",
        "target": "G1014 LuminousMoth",
        "description": "LuminousMoth is a Chinese-speaking cyber espionage group that has been active since at least October 2020. LuminousMoth has targeted high-profile organizations, including government entities, in Myanmar, the Philippines, Thailand, and other parts of Southeast Asia. Some security researchers have concluded there is a connection between LuminousMoth and Mustang Panda based on similar targeting and TTPs, as well as network infrastructure overlaps."
    },
    {
        "uniqueId": "G0095",
        "target": "G0095 Machete APT-C-43, El Machete",
        "description": "Machete is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. Machete generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies."
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound TA453, COBALT ILLUSION, Charming Kitten, ITG18, Phosphorus, Newscaster, APT35, Mint Sandstorm",
        "description": "Magic Hound is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, likely on behalf of the Islamic Revolutionary Guard Corps. They have targeted European, U.S., and Middle Eastern government and military personnel, academics, journalists, and organizations such as the World Health Organization (WHO), via complex social engineering campaigns since at least 2014."
    },
    {
        "uniqueId": "G1026",
        "target": "G1026 Malteiro",
        "description": "Malteiro is a financially motivated criminal group that is likely based in Brazil and has been active since at least November 2019. The group operates and distributes the Mispadu banking trojan via a Malware-as-a-Service (MaaS) business model. Malteiro mainly targets victims throughout Latin America (particularly Mexico) and Europe (particularly Spain and Portugal)."
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass Cicada, POTASSIUM, Stone Panda, APT10, Red Apollo, CVNX, HOGFISH, BRONZE RIVERSIDE",
        "description": "menuPass is a threat group that has been active since at least 2006. Individual members of menuPass are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company."
    },
    {
        "uniqueId": "2016",
        "target": "2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university.",
        "description": "G1013 Metador"
    },
    {
        "uniqueId": "C2",
        "target": "C2 servers.",
        "description": "G0002 Moafee"
    },
    {
        "uniqueId": "G0103",
        "target": "G0103 Mofang",
        "description": "Mofang is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries."
    },
    {
        "uniqueId": "G0021",
        "target": "G0021 Molerats Operation Molerats, Gaza Cybergang",
        "description": "Molerats is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States."
    },
    {
        "uniqueId": "G1009",
        "target": "G1009 Moses Staff DEV-0500, Marigold Sandstorm",
        "description": "Moses Staff is a suspected Iranian threat group that has primarily targeted Israeli companies since at least September 2021. Moses Staff openly stated their motivation in attacking Israeli companies is to cause damage by leaking stolen sensitive data and encrypting the victim's networks without a ransom demand."
    },
    {
        "uniqueId": "G1019",
        "target": "G1019 MoustachedBouncer",
        "description": "MoustachedBouncer is a cyberespionage group that has been active since at least 2014 targeting foreign embassies in Belarus."
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater Earth Vetala, MERCURY, Static Kitten, Seedworm, TEMP.Zagros, Mango Sandstorm, TA450",
        "description": "MuddyWater is a cyber espionage group assessed to be a subordinate element within Iran's Ministry of Intelligence and Security (MOIS). Since at least 2017, MuddyWater has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America."
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda TA416, RedDelta, BRONZE PRESIDENT",
        "description": "Mustang Panda is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. Mustang Panda has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Europe, Mongolia, Myanmar, Pakistan, and Vietnam, among others."
    },
    {
        "uniqueId": "G1020",
        "target": "G1020 Mustard Tempest DEV-0206, TA569, GOLD PRELUDE, UNC1543",
        "description": "Mustard Tempest is an initial access broker that has operated the SocGholish distribution network since at least 2017. Mustard Tempest has partnered with Indrik Spider to provide access for the download of additional malware including LockBit, WastedLocker, and remote access tools."
    },
    {
        "uniqueId": "G0019",
        "target": "G0019 Naikon",
        "description": "Naikon is assessed to be a state-sponsored cyber espionage group attributed to the Chinese People\u2019s Liberation Army\u2019s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau (Military Unit Cover Designator 78020). Active since at least 2010, Naikon has primarily conducted operations against government, military, and civil organizations in Southeast Asia, as well as against international bodies such as the United Nations Development Programme (UNDP) and the Association of Southeast Asian Nations (ASEAN)."
    },
    {
        "uniqueId": "G0055",
        "target": "G0055 NEODYMIUM",
        "description": "NEODYMIUM is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called PROMETHIUM due to overlapping victim and campaign characteristics. NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified."
    },
    {
        "uniqueId": "G0133",
        "target": "G0133 Nomadic Octopus DustSquad",
        "description": "Nomadic Octopus is a Russian-speaking cyber espionage threat group that has primarily targeted Central Asia, including local governments, diplomatic missions, and individuals, since at least 2014. Nomadic Octopus has been observed conducting campaigns involving Android and Windows malware, mainly using the Delphi programming language, and building custom variants."
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig COBALT GYPSY, IRN2, APT34, Helix Kitten, Evasive Serpens, Hazel Sandstorm, EUROPIUM",
        "description": "OilRig is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. The group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests."
    },
    {
        "uniqueId": "G0071",
        "target": "G0071 Orangeworm",
        "description": "Orangeworm is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage. Reverse engineering of Kwampirs, directly associated with Orangeworm activity, indicates significant functional and development overlaps with Shamoon."
    },
    {
        "uniqueId": "G0040",
        "target": "G0040 Patchwork Hangover Group, Dropping Elephant, Chinastrats, MONSOON, Operation Hangover",
        "description": "Patchwork is a cyber espionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. Patchwork has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. Patchwork was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018."
    },
    {
        "uniqueId": "G0011",
        "target": "G0011 PittyTiger",
        "description": "PittyTiger is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control."
    },
    {
        "uniqueId": "G0068",
        "target": "G0068 PLATINUM",
        "description": "PLATINUM is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia."
    },
    {
        "uniqueId": "G1005",
        "target": "G1005 POLONIUM Plaid Rain",
        "description": "POLONIUM is a Lebanon-based group that has primarily targeted Israeli organizations, including critical manufacturing, information technology, and defense industry companies, since at least February 2022. Security researchers assess POLONIUM has coordinated their operations with multiple actors affiliated with Iran\u2019s Ministry of Intelligence and Security (MOIS), based on victim overlap as well as common techniques and tooling."
    },
    {
        "uniqueId": "G0033",
        "target": "G0033 Poseidon Group",
        "description": "Poseidon Group is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the Poseidon Group as a security firm."
    },
    {
        "uniqueId": "G0056",
        "target": "G0056 PROMETHIUM StrongPity",
        "description": "PROMETHIUM is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. PROMETHIUM has demonstrated similarity to another activity group called NEODYMIUM due to overlapping victim and campaign characteristics."
    },
    {
        "uniqueId": "G0024",
        "target": "G0024 Putter Panda APT2, MSUpdater",
        "description": "Putter Panda is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA\u2019s 3rd General Staff Department (GSD)."
    },
    {
        "uniqueId": "G0075",
        "target": "G0075 Rancor",
        "description": "Rancor is a threat group that has led targeted campaigns against the South East Asia region. Rancor uses politically-motivated lures to entice victims to open malicious documents."
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name Rocke comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between Rocke and the Iron Cybercrime Group, though this attribution has not been confirmed."
    },
    {
        "uniqueId": "G0048",
        "target": "G0048 RTM",
        "description": "RTM is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name (RTM)."
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team ELECTRUM, Telebots, IRON VIKING, BlackEnergy (Group), Quedagh, Voodoo Bear, IRIDIUM, Seashell Blizzard, FROZENBARENTS",
        "description": "Sandworm Team is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455. This group has been active since at least 2009."
    },
    {
        "uniqueId": "74455",
        "target": "74455 officers associated with Sandworm Team for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide NotPetya attack, targeting of the 2017 French presidential campaign, the 2018 Olympic Destroyer attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019. Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as APT28.",
        "description": "G0029 Scarlet Mimic"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider Roasted 0ktapus, Octo Tempest, Storm-0875",
        "description": "Scattered Spider is a native English-speaking cybercriminal group that has been active since at least 2022. The group initially targeted customer relationship management and business-process outsourcing (BPO) firms as well as telecommunications and technology companies. Beginning in 2023, Scattered Spider expanded its operations to compromise victims in the gaming, hospitality, retail, MSP, manufacturing, and financial sectors. During campaigns, Scattered Spider has leveraged targeted social-engineering techniques, attempted to bypass popular endpoint security tools, and more recently, deployed ransomware for financial gain."
    },
    {
        "uniqueId": "G1008",
        "target": "G1008 SideCopy",
        "description": "SideCopy is a Pakistani threat group that has primarily targeted South Asian countries, including Indian and Afghani government personnel, since at least 2019. SideCopy's name comes from its infection chain that tries to mimic that of Sidewinder, a suspected Indian threat group."
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder T-APT-04, Rattlesnake",
        "description": "Sidewinder is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan."
    },
    {
        "uniqueId": "G0091",
        "target": "G0091 Silence Whisper Spider",
        "description": "Silence is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing."
    },
    {
        "uniqueId": "G0122",
        "target": "G0122 Silent Librarian TA407, COBALT DICKENS",
        "description": "Silent Librarian is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of Silent Librarian are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC)."
    },
    {
        "uniqueId": "G0083",
        "target": "G0083 SilverTerrier",
        "description": "SilverTerrier is a Nigerian threat group that has been seen active since 2014. SilverTerrier mainly targets organizations in high technology, higher education, and manufacturing."
    },
    {
        "uniqueId": "G0054",
        "target": "G0054 Sowbug",
        "description": "Sowbug is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015."
    },
    {
        "uniqueId": "G0038",
        "target": "G0038 Stealth Falcon",
        "description": "Stealth Falcon is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed."
    },
    {
        "uniqueId": "G0041",
        "target": "G0041 Strider ProjectSauron",
        "description": "Strider is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda."
    },
    {
        "uniqueId": "G0039",
        "target": "G0039 Suckfly",
        "description": "Suckfly is a China-based threat group that has been active since at least 2014."
    },
    {
        "uniqueId": "G1018",
        "target": "G1018 TA2541",
        "description": "TA2541 is a cybercriminal group that has been targeting the aviation, aerospace, transportation, manufacturing, and defense industries since at least 2017. TA2541 campaigns are typically high volume and involve the use of commodity remote access tools obfuscated by crypters and themes related to aviation, transportation, and travel."
    },
    {
        "uniqueId": "G0062",
        "target": "G0062 TA459",
        "description": "TA459 is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others."
    },
    {
        "uniqueId": "G0092",
        "target": "G0092 TA505 Hive0065, Spandex Tempest, CHIMBORAZO",
        "description": "TA505 is a cyber criminal group that has been active since at least 2014. TA505 is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving Clop."
    },
    {
        "uniqueId": "G0127",
        "target": "G0127 TA551 GOLD CABIN, Shathak",
        "description": "TA551 is a financially-motivated threat group that has been active since at least 2018. The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns."
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT is a threat group that has primarily targeted cloud and containerized environments. The group as been active since at least October 2019 and has mainly focused its efforts on leveraging cloud and container resources to deploy cryptocurrency miners in victim environments."
    },
    {
        "uniqueId": "G0088",
        "target": "G0088 TEMP.Veles XENOTIME",
        "description": "TEMP.Veles is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing TRITON, a malware framework designed to manipulate industrial safety systems."
    },
    {
        "uniqueId": "G0089",
        "target": "G0089 The White Company",
        "description": "The White Company is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan."
    },
    {
        "uniqueId": "G0028",
        "target": "G0028 Threat Group-1314 TG-1314",
        "description": "Threat Group-1314 is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure."
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390 Earth Smilodon, TG-3390, Emissary Panda, BRONZE UNION, APT27, Iron Tiger, LuckyMouse",
        "description": "Threat Group-3390 is a Chinese threat group that has extensively used strategic Web compromises to target victims. The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors."
    },
    {
        "uniqueId": "G0076",
        "target": "G0076 Thrip",
        "description": "Thrip is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as \"living off the land\" techniques."
    },
    {
        "uniqueId": "G1022",
        "target": "G1022 ToddyCat",
        "description": "ToddyCat is a sophisticated threat group that has been active since at least 2020 using custom loaders and malware in multi-stage infection chains against government and military targets across Europe and Asia."
    },
    {
        "uniqueId": "G0131",
        "target": "G0131 Tonto Team Earth Akhlut, BRONZE HUNTLEY, CactusPete, Karma Panda",
        "description": "Tonto Team is a suspected Chinese state-sponsored cyber espionage threat group that has primarily targeted South Korea, Japan, Taiwan, and the United States since at least 2009; by 2020 they expanded operations to include other Asian as well as Eastern European countries. Tonto Team has targeted government, military, energy, mining, financial, education, healthcare, and technology organizations, including through the Heartbeat Campaign (2009-2012) and Operation Bitter Biscuit (2017)."
    },
    {
        "uniqueId": "G0134",
        "target": "G0134 Transparent Tribe COPPER FIELDSTONE, APT36, Mythic Leopard, ProjectM",
        "description": "Transparent Tribe is a suspected Pakistan-based threat group that has been active since at least 2013, primarily targeting diplomatic, defense, and research organizations in India and Afghanistan."
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper Pirate Panda, KeyBoy",
        "description": "Tropic Trooper is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. Tropic Trooper focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011."
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla IRON HUNTER, Group 88, Waterbug, WhiteBear, Snake, Krypton, Venomous Bear, Secret Blizzard, BELUGASTURGEON",
        "description": "Turla is a cyber espionage threat group that has been attributed to Russia's Federal Security Service (FSB). They have compromised victims in over 50 countries since at least 2004, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies. Turla is known for conducting watering hole and spearphishing campaigns, and leveraging in-house tools and malware, such as Uroburos."
    },
    {
        "uniqueId": "G1029",
        "target": "G1029 UNC788",
        "description": "UNC788 is a group of hackers from Iran that has targeted people in the Middle East."
    },
    {
        "uniqueId": "G0123",
        "target": "G0123 Volatile Cedar Lebanese Cedar",
        "description": "Volatile Cedar is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. Volatile Cedar has been operating since 2012 and is motivated by political and ideological interests."
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon BRONZE SILHOUETTE",
        "description": "Volt Typhoon is a People's Republic of China (PRC) state-sponsored actor that has been active since at least 2021. Volt Typhoon typically focuses on espionage and information gathering and has targeted critical infrastructure organizations in the US including Guam. Volt Typhoon has emphasized stealth in operations using web shells, living-off-the-land (LOTL) binaries, hands on keyboard activities, and stolen credentials."
    },
    {
        "uniqueId": "G0107",
        "target": "G0107 Whitefly",
        "description": "Whitefly is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore\u2019s largest public health organization, SingHealth."
    },
    {
        "uniqueId": "G0124",
        "target": "G0124 Windigo",
        "description": "The Windigo group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the Ebury SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, Windigo operators continued updating Ebury through 2019."
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift Bahamut",
        "description": "Windshift is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East."
    },
    {
        "uniqueId": "G0044",
        "target": "G0044 Winnti Group Blackfly",
        "description": "Winnti Group is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting. Some reporting suggests a number of other groups, including Axiom, APT17, and Ke3chang, are closely linked to Winnti Group."
    },
    {
        "uniqueId": "G0090",
        "target": "G0090 WIRTE",
        "description": "WIRTE is a threat group that has been active since at least August 2018. WIRTE has targeted government, diplomatic, financial, military, legal, and technology organizations in the Middle East and Europe."
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider UNC1878, TEMP.MixMaster, Grim Spider, FIN12, GOLD BLACKBURN, ITG23, Periwinkle Tempest, DEV-0193",
        "description": "Wizard Spider is a Russia-based financially motivated threat group originally known for the creation and deployment of TrickBot since at least 2016. Wizard Spider possesses a diverse aresenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals."
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM APT31, Violet Typhoon",
        "description": "ZIRCONIUM is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community."
    },
    {
        "uniqueId": "T1548",
        "target": "T1548 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1548",
        "target": "T1548 Sub-techniques:  T1548.001, T1548.002, T1548.003, T1548.004, T1548.005, T1548.006",
        "description": "\u24d8"
    },
    {
        "uniqueId": "30",
        "target": "30 January 2020",
        "description": "Last Modified: 15 April 2024"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[5]"
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "System settings can prevent applications from running that haven't been downloaded from legitimate repositories which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk."
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Applications with known vulnerabilities or known shell escapes should not have the setuid or setgid bits set to reduce potential damage if an application is compromised. Additionally, the number of programs with setuid or setgid bits set should be minimized across a system. Ensuring that the sudo tty_tickets setting is enabled will prevent this leakage across tty sessions."
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Remove users from the local administrator group on systems."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "The sudoers file should be strictly edited such that passwords are always required and that users can't spawn risky processes as users with higher privilege."
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "Perform regular software updates to mitigate exploitation risk."
    },
    {
        "uniqueId": "M1052",
        "target": "M1052 User Account Control",
        "description": "Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Limit the privileges of cloud accounts to assume, create, or impersonate additional roles, policies, and permissions to only those required. Where just-in-time access is enabled, consider requiring manual approval for temporary elevation of privileges."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Metadata",
        "description": "Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo)."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Also look for any process API calls for behavior that may be indicative of Process Injection. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Modification",
        "description": "Log cloud API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Modification",
        "description": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes."
    },
    {
        "uniqueId": "T1135",
        "target": "T1135 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1135",
        "target": "T1135 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "14",
        "target": "14 December 2017",
        "description": "Last Modified: 29 September 2023"
    },
    {
        "uniqueId": "S1129",
        "target": "S1129 Akira",
        "description": "Akira can identify remote file shares for encryption.[3]"
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1",
        "description": "APT1 listed connected network shares.[4]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 used the net view command to show all shares available, including the administrative shares such as C$ and ADMIN$.[5]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 has enumerated network shares on a compromised host.[6]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 has used the post exploitation tool CrackMapExec to enumerate network shares.[7]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 used the net share command as part of network reconnaissance.[8][9]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon has enumerated shared folders and mapped volumes.[10]"
    },
    {
        "uniqueId": "S1053",
        "target": "S1053 AvosLocker",
        "description": "AvosLocker has enumerated shared drives on a compromised network.[11][12]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk has the ability to enumerate network shares.[13]"
    },
    {
        "uniqueId": "S0606",
        "target": "S0606 Bad Rabbit",
        "description": "Bad Rabbit enumerates open SMB shares on internal victim networks.[14]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can check a user's access to the C$ share on a compromised machine.[15]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can enumerate shared drives on the domain.[16]"
    },
    {
        "uniqueId": "S0570",
        "target": "S0570 BitPaymer",
        "description": "BitPaymer can search for network shares on the domain or workgroup using net view .[17]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat has the ability to discover network shares on compromised networks.[18][19]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors executed the PowerView ShareFinder module to identify open shares.[20]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used net share and net view to identify network shares of interest.[21]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling has the ability to enumerate network shares.[22]"
    },
    {
        "uniqueId": "S0611",
        "target": "S0611 Clop",
        "description": "Clop can enumerate network shares.[23]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can query shared drives on the local system.[24]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can enumerate remote open SMB network shares using NetShareEnum().[25][26]"
    },
    {
        "uniqueId": "S0488",
        "target": "S0488 CrackMapExec",
        "description": "CrackMapExec can enumerate the shared folders and associated permissions for a targeted network.[27]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba can discover shared resources using the NetShareEnum API call.[28]"
    },
    {
        "uniqueId": "G0105",
        "target": "G0105 DarkVishnya",
        "description": "DarkVishnya scanned the network for public shared folders.[29]"
    },
    {
        "uniqueId": "S0616",
        "target": "S0616 DEATHRANSOM",
        "description": "DEATHRANSOM has the ability to use loop operations to enumerate network resources.[30]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol has a ENMDSKS command to enumerates available network shares.[31]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.[32]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has enumerated non-hidden network shares using WNetEnumResourceW. [33]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can find shared drives on the local system.[34]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has executed net view commands for enumeration of open shares on compromised machines.[35][36]"
    },
    {
        "uniqueId": "S0618",
        "target": "S0618 FIVEHANDS",
        "description": "FIVEHANDS can enumerate network shares and mounted drives on a network.[37]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has been used to execute net view to discover mapped network shares.[38]"
    },
    {
        "uniqueId": "S0617",
        "target": "S0617 HELLOKITTY",
        "description": "HELLOKITTY has the ability to enumerate network resources.[30]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can gather network share information.[39]"
    },
    {
        "uniqueId": "S0250",
        "target": "S0250 Koadic",
        "description": "Koadic can scan local network for open SMB.[40]"
    },
    {
        "uniqueId": "S1075",
        "target": "S1075 KOPILUWAK",
        "description": "KOPILUWAK can use netstat and Net to discover network shares.[41]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs collects a list of network shares with the command net share.[42]"
    },
    {
        "uniqueId": "S0233",
        "target": "S0233 MURKYTOP",
        "description": "MURKYTOP has the capability to retrieve information about shares on remote hosts.[43]"
    },
    {
        "uniqueId": "S0039",
        "target": "S0039 Net",
        "description": "The net view \\remotesystem and net share commands in Net can be used to find shared drives and directories on remote and local systems respectively.[44]"
    },
    {
        "uniqueId": "S0365",
        "target": "S0365 Olympic Destroyer",
        "description": "Olympic Destroyer will attempt to enumerate mapped network shares to later attempt to wipe all files on those shares.[45]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the net share command as part of their advanced reconnaissance.[46]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors discovered network disks mounted to the system using netstat.[47]"
    },
    {
        "uniqueId": "S0165",
        "target": "S0165 OSInfo",
        "description": "OSInfo discovers shares on the network[48]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX has a module to enumerate network shares.[49]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy can list local and remote shared drives and folders over SMB.[50]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can use net share to identify network shares for use in lateral movement.[51][52]"
    },
    {
        "uniqueId": "S0686",
        "target": "S0686 QuietSieve",
        "description": "QuietSieve can identify and search networked drives for specific file name extensions.[53]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can scan for network drives which may contain documents for collection.[54][55]"
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal can enumerate the shared resources of a given IP addresses using the API call NetShareEnum.[56]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has the ability to execute the net view command.[57]"
    },
    {
        "uniqueId": "S0444",
        "target": "S0444 ShimRat",
        "description": "ShimRat can enumerate connected drives for infected host machines.[58]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can enumerate shares on a compromised host.[59]"
    },
    {
        "uniqueId": "G0054",
        "target": "G0054 Sowbug",
        "description": "Sowbug listed remote shared drives that were accessible from a victim.[60]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet enumerates the directories of a network resource.[61]"
    },
    {
        "uniqueId": "G0131",
        "target": "G0131 Tonto Team",
        "description": "Tonto Team has used tools such as NBTscan to enumerate network shares.[62]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot module shareDll/mshareDll discovers network shares via the WNetOpenEnumA API.[63][64]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper used netview to scan target systems for shared resources.[65]"
    },
    {
        "uniqueId": "S0612",
        "target": "S0612 WastedLocker",
        "description": "WastedLocker can identify network adjacent and accessible drives.[66]"
    },
    {
        "uniqueId": "S0689",
        "target": "S0689 WhisperGate",
        "description": "WhisperGate can enumerate connected remote logical drives.[67]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has used the \"net view\" command to locate mapped network shares.[68]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy identifies network drives when they are added to victim systems.[69]"
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Enable Windows Group Policy \"Do Not Allow Anonymous Enumeration of SAM Accounts and Shares\" security setting to limit users who can enumerate network shares.[70]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021.",
        "description": "Yuste, J. Pastrana, S. (2021, February 9). Avaddon ransomware: an in-depth analysis and decryption of infected systems. Retrieved August 19, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "Pantazopoulos, N. (2020, June 2). In-depth analysis of the new Team9 malware family. Retrieved December 1, 2020."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "Neeamni, D., Rubinfeld, A.. (2021, July 1). Diavol - A New Ransomware Used By Wizard Spider?. Retrieved November 12, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Yonathan Klijnsma. (2016, May 17). Mofang: A politically motivated information stealing adversary. Retrieved May 12, 2020."
    },
    {
        "uniqueId": "22",
        "target": "22 Daniel Lughi, Jaromir Horejsi. (2020, October 2). Tonto Team - Exploring the TTPs of an advanced threat actor operating a large infrastructure. Retrieved October 17, 2021.",
        "description": "Boutin, J. (2020, October 12). ESET takes part in global operation to disrupt Trickbot. Retrieved March 15, 2021."
    },
    {
        "uniqueId": "2017",
        "target": "2017 Sofacy Activity. Retrieved November 27, 2018.",
        "description": "Microsoft. (2017, April 19). Network access: Do not allow anonymous enumeration of SAM accounts and shares. Retrieved May 20, 2020."
    },
    {
        "uniqueId": "T1665",
        "target": "T1665 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "C2",
        "target": "C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools,[1] masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers,[2][3][4] and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely.",
        "description": "C2 networks may include the use of Proxy or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections. For example, an adversary may use a virtual private cloud to spoof their IP address to closer align with a victim's IP address ranges. This may also bypass security measures relying on geolocation of the source IP address.[5][6]"
    },
    {
        "uniqueId": "C2",
        "target": "C2 infrastructure may also be supported by Resource Development activities such as Acquire Infrastructure and Compromise Infrastructure. For example, using widely trusted hosting services or domains such as prominent URL shortening providers or marketing services for C2 networks may enable adversaries to present benign content that later redirects victims to malicious web pages or infrastructure once specific conditions are met.[9][10]",
        "description": "ID: T1665"
    },
    {
        "uniqueId": "13",
        "target": "13 February 2024",
        "description": "Last Modified: 18 April 2024"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 uses compromised residential endpoints, typically within the same ISP IP address range, as proxies to hide the true source of C2 traffic.[11]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate command and control includes hard-coded domains in the malware masquerading as legitimate services such as Akamai CDN or Amazon Web Services.[12]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure.[13]"
    },
    {
        "uniqueId": "DS0038",
        "target": "DS0038 Domain Name Domain Registration",
        "description": "Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information, and in monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain."
    },
    {
        "uniqueId": "DS0035",
        "target": "DS0035 Internet Scan Response Content",
        "description": "Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. If requests are filtered or blocked, the specifics of this action, such as the response sent, can be used to gain further insight into the resource's nature or creation."
    },
    {
        "uniqueId": "C2",
        "target": "C2 infrastructure. Correlate data and patterns from Internet-facing resources gathered from scans with network traffic to gain further insight into potential adversary C2 networks.",
        "description": "DS0029 Network Traffic Network Traffic Content"
    },
    {
        "uniqueId": "C2",
        "target": "C2 networks.",
        "description": "References"
    },
    {
        "uniqueId": "TA571",
        "target": "TA571 Delivers IcedID Forked Loader. Retrieved February 13, 2024.",
        "description": "Nick Simonian. (2023, May 22). Don't @ Me: URL Obfuscation Through Schema Abuse. Retrieved February 13, 2024."
    },
    {
        "uniqueId": "T1587",
        "target": "T1587 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1587",
        "target": "T1587 Sub-techniques:  T1587.001, T1587.002, T1587.003, T1587.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "01",
        "target": "01 October 2020",
        "description": "Last Modified: 17 October 2021"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky created and used a mailing toolkit to use in spearphishing attacks.[5]"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    },
    {
        "uniqueId": "DS0035",
        "target": "DS0035 Internet Scan Response Content",
        "description": "Consider use of services that may aid in the tracking of capabilities, such as certificates, in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of information to uncover other adversary infrastructure.[6] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    },
    {
        "uniqueId": "DS0004",
        "target": "DS0004 Malware Repository Malware Content",
        "description": "Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015."
    },
    {
        "uniqueId": "StrongPity3",
        "target": "StrongPity3 APT. Retrieved July 20, 2020.",
        "description": "Kim, J. et al. (2019, October). KIMSUKY GROUP: TRACKING THE KING OF THE SPEAR PHISHING. Retrieved November 2, 2020."
    },
    {
        "uniqueId": "T1140",
        "target": "T1140 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1140",
        "target": "T1140 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "14",
        "target": "14 December 2017",
        "description": "Last Modified: 14 August 2023"
    },
    {
        "uniqueId": "S0469",
        "target": "S0469 ABK",
        "description": "ABK has the ability to decrypt AES encrypted payloads.[4]"
    },
    {
        "uniqueId": "S1028",
        "target": "S1028 Action RAT",
        "description": "Action RAT can use Base64 to decode actor-controlled C2 server communications.[5]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla has the ability to decrypt strings encrypted with the Rijndael symmetric encryption algorithm.[6]"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey has decoded antivirus name strings.[7]"
    },
    {
        "uniqueId": "S0584",
        "target": "S0584 AppleJeus",
        "description": "AppleJeus has decoded files received from a C2.[8]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can decode its payload prior to execution.[9]"
    },
    {
        "uniqueId": "G0073",
        "target": "G0073 APT19",
        "description": "An APT19 HTTP malware variant decrypts strings using single-byte XOR keys.[10]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "An APT28 macro uses the command certutil -decode to decode contents of a .txt file storing the base64 encoded payload.[11][12]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 has used malware to decrypt encrypted CAB files.[13]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to decrypt the loader configuration and payload DLL.[14]"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth uses a fromCharCode() deobfuscation method to avoid explicitly writing execution commands and to hide its code. [15][16]"
    },
    {
        "uniqueId": "S0347",
        "target": "S0347 AuditCred",
        "description": "AuditCred uses XOR and RC4 to perform decryption on the code functions.[17]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon has decrypted encrypted strings.[18]"
    },
    {
        "uniqueId": "S0473",
        "target": "S0473 Avenger",
        "description": "Avenger has the ability to decrypt files downloaded from C2.[4]"
    },
    {
        "uniqueId": "S1053",
        "target": "S1053 AvosLocker",
        "description": "AvosLocker has deobfuscated XOR-encoded strings.[19]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult uses an XOR key to decrypt content and uses Base64 to decode the C2 address.[20][21]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk has the ability to unpack itself into memory using XOR.[22][23]"
    },
    {
        "uniqueId": "S0414",
        "target": "S0414 BabyShark",
        "description": "BabyShark has the ability to decode downloaded files prior to execution.[24]"
    },
    {
        "uniqueId": "S0475",
        "target": "S0475 BackConfig",
        "description": "BackConfig has used a custom routine to decrypt strings.[25]"
    },
    {
        "uniqueId": "S0642",
        "target": "S0642 BADFLICK",
        "description": "BADFLICK can decode shellcode using a custom rotating XOR cipher.[26]"
    },
    {
        "uniqueId": "S0234",
        "target": "S0234 Bandook",
        "description": "Bandook has decoded its PowerShell script.[27]"
    },
    {
        "uniqueId": "S0239",
        "target": "S0239 Bankshot",
        "description": "Bankshot decodes embedded XOR strings.[28]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can decrypt downloaded payloads. Bazar also resolves strings and other artifacts at runtime.[29][30]"
    },
    {
        "uniqueId": "S0470",
        "target": "S0470 BBK",
        "description": "BBK has the ability to decrypt AES encrypted payloads.[4]"
    },
    {
        "uniqueId": "S0127",
        "target": "S0127 BBSRAT",
        "description": "BBSRAT uses Expand to decompress a CAB file into executable content.[31]"
    },
    {
        "uniqueId": "S0574",
        "target": "S0574 BendyBear",
        "description": "BendyBear has decrypted function blocks using a XOR key during runtime to evade detection.[32]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal has decoded strings in the malware using XOR and RC4.[33][34]"
    },
    {
        "uniqueId": "S0520",
        "target": "S0520 BLINDINGCAN",
        "description": "BLINDINGCAN has used AES and XOR to decrypt its DLLs.[35]"
    },
    {
        "uniqueId": "S0635",
        "target": "S0635 BoomBox",
        "description": "BoomBox can decrypt AES-encrypted files downloaded from C2.[36]"
    },
    {
        "uniqueId": "S0415",
        "target": "S0415 BOOSTWRITE",
        "description": "BOOSTWRITE has used a a 32-byte long multi-XOR key to decode data inside its payload.[37]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER downloads encoded payloads and decodes them on the victim.[38]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 has the ability to deobfuscate its payload prior to execution.[39]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can deobfuscate C2 server responses and unpack its code on targeted hosts.[40][41]"
    },
    {
        "uniqueId": "S0482",
        "target": "S0482 Bundlore",
        "description": "Bundlore has used openssl to decrypt AES encrypted payload data. Bundlore has also used base64 and RC4 with a hardcoded key to deobfuscate data.[42]"
    },
    {
        "uniqueId": "S1118",
        "target": "S1118 BUSHWALK",
        "description": "BUSHWALK can Base64 decode and RC4 decrypt malicious payloads sent through a web request\u2019s command parameter.[43][44]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 used the DUSTPAN loader to decrypt embedded payloads.[45]"
    },
    {
        "uniqueId": "C0021",
        "target": "C0021 C0021",
        "description": "During C0021, the threat actors deobfuscated encoded PowerShell commands including use of the specific string 'FromBase'+0x40+'String', in place of FromBase64String which is normally used to decode base64.[46][47]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon decrypts task and configuration files for execution.[48][49]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT decodes many of its artifacts and is decrypted (AES-128) after being downloaded.[50]"
    },
    {
        "uniqueId": "S0160",
        "target": "S0160 certutil",
        "description": "certutil has been used to decode binaries hidden inside certificate files as Base64 information.[1]"
    },
    {
        "uniqueId": "S0631",
        "target": "S0631 Chaes",
        "description": "Chaes has decrypted an AES encrypted binary file to trigger the download of other files.[51]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower can decrypt downloaded modules prior to execution.[52]"
    },
    {
        "uniqueId": "S1041",
        "target": "S1041 Chinoxy",
        "description": "The Chinoxy dropping function can initiate decryption of its config file.[53]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme can decrypt its encrypted internal code.[54]"
    },
    {
        "uniqueId": "G1021",
        "target": "G1021 Cinnamon Tempest",
        "description": "Cinnamon Tempest has used weaponized DLLs to load and decrypt payloads.[55]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling can deobfuscate its payload prior to execution.[56][57]"
    },
    {
        "uniqueId": "S0611",
        "target": "S0611 Clop",
        "description": "Clop has used a simple XOR operation to decrypt strings.[58]"
    },
    {
        "uniqueId": "S1105",
        "target": "S1105 COATHANGER",
        "description": "COATHANGER decodes configuration items from a bundled file for command and control activity.[59]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can deobfuscate shellcode using a rolling XOR and decrypt metadata from Beacon sessions.[60][61]"
    },
    {
        "uniqueId": "S0369",
        "target": "S0369 CoinTicker",
        "description": "CoinTicker decodes the initially-downloaded hidden encoded file using OpenSSL.[62]"
    },
    {
        "uniqueId": "S0126",
        "target": "S0126 ComRAT",
        "description": "ComRAT has used unique per machine passwords to decrypt the orchestrator payload and a hardcoded XOR key to decrypt its communications module. ComRAT has also used a unique password to decrypt the file used for its hidden file system.[63][64]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti has decrypted its payload using a hardcoded AES-256 key.[65][66]"
    },
    {
        "uniqueId": "S0492",
        "target": "S0492 CookieMiner",
        "description": "CookieMiner has used Google Chrome's decryption and extraction operations.[67]"
    },
    {
        "uniqueId": "S0614",
        "target": "S0614 CostaBricks",
        "description": "CostaBricks has the ability to use bytecode to decrypt embedded payloads.[68]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson can decode its encoded PE file prior to execution.[69]"
    },
    {
        "uniqueId": "S0687",
        "target": "S0687 Cyclops Blink",
        "description": "Cyclops Blink can decrypt and parse instructions sent from C2.[70]"
    },
    {
        "uniqueId": "S1014",
        "target": "S1014 DanBot",
        "description": "DanBot can use a VBA macro to decode its payload prior to installation and execution.[71]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate installation includes binary code stored in a file located in a hidden directory, such as shell.txt, that is decrypted then executed.[72] DarkGate uses hexadecimal-encoded shellcode payloads during installation that are called via Windows API CallWindowProc() to decode and then execute.[73]"
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel",
        "description": "Darkhotel has decrypted strings and imports using RC4 during execution.[74][75]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla can decrypt its payload and associated configuration elements using the Rijndael cipher.[76]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman has the ability to self-extract as a RAR archive.[77]"
    },
    {
        "uniqueId": "S0255",
        "target": "S0255 DDKONG",
        "description": "DDKONG decodes an embedded configuration using XOR.[78]"
    },
    {
        "uniqueId": "S1052",
        "target": "S1052 DEADEYE",
        "description": "DEADEYE has the ability to combine multiple sections of a binary which were broken up to evade detection into a single .dll prior to execution.[45]"
    },
    {
        "uniqueId": "S0354",
        "target": "S0354 Denis",
        "description": "Denis will decrypt important strings used for C&C communication.[79]"
    },
    {
        "uniqueId": "S0547",
        "target": "S0547 DropBook",
        "description": "DropBook can unarchive data downloaded from the C2 to obtain the payload and persistence modules.[80]"
    },
    {
        "uniqueId": "S0502",
        "target": "S0502 Drovorub",
        "description": "Drovorub has de-obsfuscated XOR encrypted payloads in WebSocket messages.[81]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack has used a decryption routine that is part of an executable physical patch.[82]"
    },
    {
        "uniqueId": "S0024",
        "target": "S0024 Dyre",
        "description": "Dyre decrypts resources needed for targeting the victim.[83][84]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca has used certutil to decode a string into a cabinet file.[85]"
    },
    {
        "uniqueId": "S0377",
        "target": "S0377 Ebury",
        "description": "Ebury has verified C2 domain ownership by decrypting the TXT record using an embedded RSA public key.[86]"
    },
    {
        "uniqueId": "S0624",
        "target": "S0624 Ecipekac",
        "description": "Ecipekac has the ability to decrypt fileless loader modules.[87]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor has been decrypted before execution.[88][89]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has used a self-extracting RAR file to deliver modules to victims. Emotet has also extracted embedded executables from files using hard-coded buffer offsets.[90]"
    },
    {
        "uniqueId": "S0634",
        "target": "S0634 EnvyScout",
        "description": "EnvyScout can deobfuscate and write malicious ISO files to disk.[36]"
    },
    {
        "uniqueId": "S0401",
        "target": "S0401 Exaramel for Linux",
        "description": "Exaramel for Linux can decrypt its configuration file.[91]"
    },
    {
        "uniqueId": "S0361",
        "target": "S0361 Expand",
        "description": "Expand can be used to decompress a local or remote CAB file into an executable.[92]"
    },
    {
        "uniqueId": "S0512",
        "target": "S0512 FatDuke",
        "description": "FatDuke can decrypt AES encrypted C2 communications.[93]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has utilized certutil to decode base64 encoded versions of custom malware.[94]"
    },
    {
        "uniqueId": "S0355",
        "target": "S0355 Final1stspy",
        "description": "Final1stspy uses Python code to deobfuscate base64-encoded strings.[95]"
    },
    {
        "uniqueId": "S0182",
        "target": "S0182 FinFisher",
        "description": "FinFisher extracts and decrypts stage 3 malware, which is stored in encrypted resources.[96][97]"
    },
    {
        "uniqueId": "S0618",
        "target": "S0618 FIVEHANDS",
        "description": "FIVEHANDS has the ability to decrypt its payload prior to execution.[98][99][100]"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb can be decrypted in memory using a Lightweight Encryption Algorithm (LEA)-128 key and decoded using a XOR key.[101]"
    },
    {
        "uniqueId": "S1120",
        "target": "S1120 FRAMESTING",
        "description": "FRAMESTING can decompress data received within POST requests.[43]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors deobfuscated Base64-encoded commands following the execution of a malicious script, which revealed a small script designed to obtain an additional payload.[102]"
    },
    {
        "uniqueId": "S0628",
        "target": "S0628 FYAnti",
        "description": "FYAnti has the ability to decrypt an embedded .NET module.[87]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group tools decrypted additional payloads from the C2. Gamaredon Group has also decoded base64-encoded source code of a downloader.[103][104]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can decompress and decrypt DLLs and shellcode.[54]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT has decrypted and loaded the gh0st RAT DLL into memory, once the initial dropper executable is launched.[105]"
    },
    {
        "uniqueId": "S1117",
        "target": "S1117 GLASSTOKEN",
        "description": "GLASSTOKEN has the ability to decode hexadecimal and Base64 C2 requests.[106]"
    },
    {
        "uniqueId": "S0588",
        "target": "S0588 GoldMax",
        "description": "GoldMax has decoded and decrypted the configuration file when executed.[107][108]"
    },
    {
        "uniqueId": "S0477",
        "target": "S0477 Goopy",
        "description": "Goopy has used a polymorphic decryptor to decrypt itself at runtime.[79]"
    },
    {
        "uniqueId": "G0078",
        "target": "G0078 Gorgon Group",
        "description": "Gorgon Group malware can decode contents from a payload that was Base64 encoded and write the contents to a file.[109]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can decrypt its encrypted internal strings.[110]"
    },
    {
        "uniqueId": "S0690",
        "target": "S0690 Green Lambert",
        "description": "Green Lambert can use multiple custom routines to decrypt strings prior to execution.[111][112]"
    },
    {
        "uniqueId": "S0632",
        "target": "S0632 GrimAgent",
        "description": "GrimAgent can use a decryption algorithm for strings based on Rotate on Right (RoR) and Rotate on Left (RoL) functionality.[113]"
    },
    {
        "uniqueId": "S0499",
        "target": "S0499 Hancitor",
        "description": "Hancitor has decoded Base64 encoded URLs to insert a recipient\u2019s name into the filename of the Word document. Hancitor has also extracted executables from ZIP files.[114][115]"
    },
    {
        "uniqueId": "S0697",
        "target": "S0697 HermeticWiper",
        "description": "HermeticWiper can decompress and copy driver files using LZCopy.[116]"
    },
    {
        "uniqueId": "S1027",
        "target": "S1027 Heyoka Backdoor",
        "description": "Heyoka Backdoor can decrypt its payload prior to execution.[117]"
    },
    {
        "uniqueId": "S0394",
        "target": "S0394 HiddenWasp",
        "description": "HiddenWasp uses a cipher to implement a decoding function.[118]"
    },
    {
        "uniqueId": "G0126",
        "target": "G0126 Higaisa",
        "description": "Higaisa used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.[119][120]"
    },
    {
        "uniqueId": "S0601",
        "target": "S0601 Hildegard",
        "description": "Hildegard has decrypted ELF files with AES.[121]"
    },
    {
        "uniqueId": "S1097",
        "target": "S1097 HUI Loader",
        "description": "HUI Loader can decrypt and load files containing malicious payloads.[122]"
    },
    {
        "uniqueId": "S0398",
        "target": "S0398 HyperBro",
        "description": "HyperBro can unpack and decrypt its payload prior to execution.[56][123]"
    },
    {
        "uniqueId": "S1022",
        "target": "S1022 IceApple",
        "description": "IceApple can use a Base64-encoded AES key to decrypt tasking.[124]"
    },
    {
        "uniqueId": "S0434",
        "target": "S0434 Imminent Monitor",
        "description": "Imminent Monitor has decoded malware components that are then dropped to the system.[125]"
    },
    {
        "uniqueId": "S0604",
        "target": "S0604 Industroyer",
        "description": "Industroyer decrypts code to connect to a remote C2 server.[126]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can decrypt, unpack and load a DLL from its resources, or from blobs encrypted with Data Protection API, two-key triple DES, and variations of the XOR cipher.[127][128]"
    },
    {
        "uniqueId": "S0581",
        "target": "S0581 IronNetInjector",
        "description": "IronNetInjector has the ability to decrypt embedded .NET and PE payloads.[129]"
    },
    {
        "uniqueId": "S0189",
        "target": "S0189 ISMInjector",
        "description": "ISMInjector uses the certutil command to decode a payload file.[130]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has deobfuscated Base64-encoded shellcode strings prior to loading them.[131]"
    },
    {
        "uniqueId": "S0585",
        "target": "S0585 Kerrdown",
        "description": "Kerrdown can decode, decrypt, and decompress multiple layers of shellcode.[132]"
    },
    {
        "uniqueId": "S0487",
        "target": "S0487 Kessel",
        "description": "Kessel has decrypted the binary's configuration once the main function was launched.[133]"
    },
    {
        "uniqueId": "S1051",
        "target": "S1051 KEYPLUG",
        "description": "KEYPLUG can decode its configuration file to determine C2 protocols.[45]"
    },
    {
        "uniqueId": "S0526",
        "target": "S0526 KGH_SPY",
        "description": "KGH_SPY can decrypt encrypted strings and write them to a newly created folder.[134]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has decoded malicious VBScripts using Base64.[135]"
    },
    {
        "uniqueId": "S0641",
        "target": "S0641 Kobalos",
        "description": "Kobalos decrypts strings right after the initial communication, but before the authentication process.[136]"
    },
    {
        "uniqueId": "S0669",
        "target": "S0669 KOCTOPUS",
        "description": "KOCTOPUS has deobfuscated itself before executing its commands.[137]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI has used certutil to download and decode base64 encoded strings and has also devoted a custom section to performing all the components of the deobfuscation process.[138][139]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs decrypts and extracts a copy of its main DLL payload when executing.[140]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime.[141][142]"
    },
    {
        "uniqueId": "G0065",
        "target": "G0065 Leviathan",
        "description": "Leviathan has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors.[143]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron has used AES and XOR to decrypt configuration files and commands.[144]"
    },
    {
        "uniqueId": "S1119",
        "target": "S1119 LIGHTWIRE",
        "description": "LIGHTWIRE can RC4 decrypt and Base64 decode C2 commands.[43]"
    },
    {
        "uniqueId": "S0513",
        "target": "S0513 LiteDuke",
        "description": "LiteDuke has the ability to decrypt and decode multiple layers of obfuscation.[93]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar can decrypt its configuration data.[145]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot has decoded and decrypted its stages multiple times using hard-coded keys to deliver the final payload, and has decoded its server response hex string using XOR.[146]"
    },
    {
        "uniqueId": "S0582",
        "target": "S0582 LookBack",
        "description": "LookBack has a function that decrypts malicious data.[147]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can decrypt its C2 address upon execution.[148]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete\u2019s downloaded data is decrypted using AES.[149]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa decrypts a downloaded file using AES-128-EBC with a custom delta.[150]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can decrypt files and data.[151]"
    },
    {
        "uniqueId": "G1026",
        "target": "G1026 Malteiro",
        "description": "Malteiro has the ability to deobfuscate downloaded files prior to execution.[152]"
    },
    {
        "uniqueId": "S0576",
        "target": "S0576 MegaCortex",
        "description": "MegaCortex has used a Base64 key to decode its components.[153]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has used certutil in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used certutil -decode to decode files on the victim\u2019s machine when dropping UPPERCUT.[154][155]"
    },
    {
        "uniqueId": "S0443",
        "target": "S0443 MESSAGETAP",
        "description": "After checking for the existence of two files, keyword_parm.txt and parm.txt, MESSAGETAP XOR decodes and read the contents of the files. [156]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can decrypt and load other modules.[151]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Upon execution, Metamorfo has unzipped itself after being downloaded to the system and has performed string decryption.[157][158][159]"
    },
    {
        "uniqueId": "S0280",
        "target": "S0280 MirageFox",
        "description": "MirageFox has a function for decrypting data containing C2 configuration information.[160]"
    },
    {
        "uniqueId": "S1122",
        "target": "S1122 Mispadu",
        "description": "Mispadu decrypts its encrypted configuration files prior to execution.[152][161]"
    },
    {
        "uniqueId": "G0021",
        "target": "G0021 Molerats",
        "description": "Molerats decompresses ZIP files once on the victim machine.[162]"
    },
    {
        "uniqueId": "S1026",
        "target": "S1026 Mongall",
        "description": "Mongall has the ability to decrypt its payload prior to execution.[117]"
    },
    {
        "uniqueId": "S0284",
        "target": "S0284 More_eggs",
        "description": "More_eggs will decode malware components that are then dropped to the system.[163]"
    },
    {
        "uniqueId": "S1047",
        "target": "S1047 Mori",
        "description": "Mori can resolve networking APIs from strings that are ADD-encrypted.[164]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has decoded base64-encoded PowerShell, JavaScript, and VBScript.[165][166][167][168]"
    },
    {
        "uniqueId": "S0637",
        "target": "S0637 NativeZone",
        "description": "NativeZone can decrypt and decode embedded Cobalt Strike beacon stage shellcode.[36]"
    },
    {
        "uniqueId": "S0457",
        "target": "S0457 Netwalker",
        "description": "Netwalker's PowerShell script can decode and decrypt multiple layers of obfuscation, leading to the Netwalker DLL being loaded into memory.[169]"
    },
    {
        "uniqueId": "S1100",
        "target": "S1100 Ninja",
        "description": "The Ninja loader component can decrypt and decompress the payload.[170][171]"
    },
    {
        "uniqueId": "S0353",
        "target": "S0353 NOKKI",
        "description": "NOKKI uses a unique, custom de-obfuscation technique.[172]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "A OilRig macro has run a PowerShell command to decode file contents. OilRig has also used certutil to decode base64-encoded files on victims.[173][130][174][175]"
    },
    {
        "uniqueId": "S0439",
        "target": "S0439 Okrum",
        "description": "Okrum's loader can decrypt the backdoor code, embedded within the loader or within a legitimate PNG file. A custom XOR cipher or RC4 is used for decryption.[176]"
    },
    {
        "uniqueId": "S0052",
        "target": "S0052 OnionDuke",
        "description": "OnionDuke can use a custom decryption algorithm to decrypt strings.[93]"
    },
    {
        "uniqueId": "S0264",
        "target": "S0264 OopsIE",
        "description": "OopsIE concatenates then decompresses multiple resources to load an embedded .Net Framework assembly.[174]"
    },
    {
        "uniqueId": "C0016",
        "target": "C0016 Operation Dust Storm",
        "description": "During Operation Dust Storm, attackers used VBS code to decode payloads.[177]"
    },
    {
        "uniqueId": "C0006",
        "target": "C0006 Operation Honeybee",
        "description": "During Operation Honeybee, malicious files were decoded prior to execution.[178]"
    },
    {
        "uniqueId": "C0005",
        "target": "C0005 Operation Spalax",
        "description": "For Operation Spalax, the threat actors used a variety of packers and droppers to decrypt malicious payloads.[179]"
    },
    {
        "uniqueId": "S0402",
        "target": "S0402 OSX/Shlayer",
        "description": "OSX/Shlayer can base64-decode and AES-decrypt downloaded payloads.[180] Versions of OSX/Shlayer pass encrypted and password-protected code to openssl and then write the payload to the /tmp folder.[181][182]"
    },
    {
        "uniqueId": "S0352",
        "target": "S0352 OSX_OCEANLOTUS.D",
        "description": "OSX_OCEANLOTUS.D uses a decode routine combining bit shifting and XOR operations with a variable key that depends on the length of the string that was encoded. If the computation for the variable XOR key turns out to be 0, the default XOR key of 0x1B is used. This routine is also referenced as the rotate function in reporting.[183]"
    },
    {
        "uniqueId": "S0598",
        "target": "S0598 P.A.S. Webshell",
        "description": "P.A.S. Webshell can use a decryption mechanism to process a user supplied password and allow execution.[91]"
    },
    {
        "uniqueId": "S1050",
        "target": "S1050 PcShare",
        "description": "PcShare has decrypted its strings by applying a XOR operation and a decompression using a custom implemented LZM algorithm.[53]"
    },
    {
        "uniqueId": "S0517",
        "target": "S0517 Pillowmint",
        "description": "Pillowmint has been decompressed by included shellcode prior to being launched.[184]"
    },
    {
        "uniqueId": "S1031",
        "target": "S1031 PingPull",
        "description": "PingPull can decrypt received data from its C2 server by using AES.[185]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon can decrypt password-protected executables.[186]"
    },
    {
        "uniqueId": "S1123",
        "target": "S1123 PITSTOP",
        "description": "PITSTOP can deobfuscate base64 encoded and AES encrypted commands.[44]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX decompresses and decrypts itself using the Microsoft API call RtlDecompressBuffer.[187][56][188]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT has used LZMA and base64 libraries to decode obfuscated scripts.[189]"
    },
    {
        "uniqueId": "S0518",
        "target": "S0518 PolyglotDuke",
        "description": "PolyglotDuke can use a custom algorithm to decrypt strings used by the malware.[93]"
    },
    {
        "uniqueId": "S1012",
        "target": "S1012 PowerLess",
        "description": "PowerLess can use base64 and AES ECB decryption prior to execution of downloaded modules.[190]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS can deobfuscate the main backdoor code.[167]"
    },
    {
        "uniqueId": "S1046",
        "target": "S1046 PowGoop",
        "description": "PowGoop can decrypt PowerShell scripts for execution.[164][191]"
    },
    {
        "uniqueId": "S0279",
        "target": "S0279 Proton",
        "description": "Proton uses an encrypted file to store commands and configuration values.[192]"
    },
    {
        "uniqueId": "S0613",
        "target": "S0613 PS1",
        "description": "PS1 can use an XOR key to decrypt a PowerShell loader and payload binary.[68]"
    },
    {
        "uniqueId": "S0147",
        "target": "S0147 Pteranodon",
        "description": "Pteranodon can decrypt encrypted data strings prior to using them.[193]"
    },
    {
        "uniqueId": "S0196",
        "target": "S0196 PUNCHBUGGY",
        "description": "PUNCHBUGGY has used PowerShell to decode base64-encoded assembly.[194]"
    },
    {
        "uniqueId": "S1032",
        "target": "S1032 PyDCrypt",
        "description": "PyDCrypt has decrypted and dropped the DCSrv payload to disk.[195]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can deobfuscate and re-assemble code strings for execution.[196][197][198]"
    },
    {
        "uniqueId": "S0269",
        "target": "S0269 QUADAGENT",
        "description": "QUADAGENT uses AES and a preshared key to decrypt the custom Base64 routine used to encode strings and scripts.[199]"
    },
    {
        "uniqueId": "S1076",
        "target": "S1076 QUIETCANARY",
        "description": "QUIETCANARY can use a custom parsing routine to decode the command codes and additional parameters from the C2 before executing them.[200]"
    },
    {
        "uniqueId": "S0565",
        "target": "S0565 Raindrop",
        "description": "Raindrop decrypted its Cobalt Strike payload using an AES-256 encryption algorithm in CBC mode with a unique key per sample.[201][202]"
    },
    {
        "uniqueId": "S0629",
        "target": "S0629 RainyDay",
        "description": "RainyDay can decrypt its payload via a XOR key.[203]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can extract its agent from the body of a malicious document.[204]"
    },
    {
        "uniqueId": "S1113",
        "target": "S1113 RAPIDPULSE",
        "description": "RAPIDPULSE listens for specific HTTP query parameters in received communications. If specific parameters match, a hard-coded RC4 key is used to decrypt the HTTP query paremter hmacTime. This decrypts to a filename that is then open, read, encrypted with the same RC4 key, base64-encoded, written to standard out, then passed as a response to the HTTP request.[205]"
    },
    {
        "uniqueId": "S0495",
        "target": "S0495 RDAT",
        "description": "RDAT can deobfuscate the base64-encoded and AES-encrypted files downloaded from the C2 server.[206]"
    },
    {
        "uniqueId": "S0511",
        "target": "S0511 RegDuke",
        "description": "RegDuke can decrypt strings with a key either stored in the Registry or hardcoded in the code.[93]"
    },
    {
        "uniqueId": "S0375",
        "target": "S0375 Remexi",
        "description": "Remexi decrypts the configuration data using XOR with 25-character keys.[207]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can decode encrypted strings to enable execution of commands and payloads.[208][209][210][211][212][213]"
    },
    {
        "uniqueId": "S0258",
        "target": "S0258 RGDoor",
        "description": "RGDoor decodes Base64 strings and decrypts strings using a custom XOR algorithm.[214]"
    },
    {
        "uniqueId": "S0448",
        "target": "S0448 Rising Sun",
        "description": "Rising Sun has decrypted itself using a single-byte XOR scheme. Additionally, Rising Sun can decrypt its configuration data at runtime.[215]"
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke has extracted tar.gz files after downloading them from a C2 server.[216]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin decodes an embedded executable using base64 and decompresses it.[217]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can decrypt strings using the victim's hostname as the key.[218][219]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "RotaJakiro uses the AES algorithm, bit shifts in a function called rotate, and an XOR cipher to decrypt resources required for persistence, process guarding, and file locking. It also performs this same function on encrypted stack strings and the head and key sections in the network packet structure used for C2 communications.[220]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot can deobfuscate strings and files for execution.[221]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team's VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip.[222][223]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic can first decrypt with the RC4 algorithm using a hardcoded decryption key before decompressing.[224]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot has the ability to decrypt and decompress its payload to enable code execution.[225][226]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has decrypted a binary blob to start execution.[227]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Shamoon decrypts ciphertext using an XOR cipher and a base64-encoded string.[228]"
    },
    {
        "uniqueId": "S1019",
        "target": "S1019 Shark",
        "description": "Shark can extract and decrypt downloaded .zip files.[229]"
    },
    {
        "uniqueId": "S0546",
        "target": "S0546 SharpStage",
        "description": "SharpStage has decompressed data received from the C2 server.[230]"
    },
    {
        "uniqueId": "S0444",
        "target": "S0444 ShimRat",
        "description": "ShimRat has decompressed its core DLL using shellcode once an impersonated antivirus component was running on a system.[231]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot can decrypt data received from a C2 and save to a file.[107]"
    },
    {
        "uniqueId": "S0610",
        "target": "S0610 SideTwist",
        "description": "SideTwist can decode and decrypt messages received from C2.[232]"
    },
    {
        "uniqueId": "S0623",
        "target": "S0623 Siloscape",
        "description": "Siloscape has decrypted the password of the C2 server with a simple byte by byte XOR. Siloscape also writes both an archive of Tor and the unzip binary to disk from data embedded within the payload using Visual Studio\u2019s Resource Manager.[233]"
    },
    {
        "uniqueId": "S0468",
        "target": "S0468 Skidmap",
        "description": "Skidmap has the ability to download, unpack, and decrypt tar.gz files .[234]"
    },
    {
        "uniqueId": "S1110",
        "target": "S1110 SLIGHTPULSE",
        "description": "SLIGHTPULSE can deobfuscate base64 encoded and RC4 encrypted C2 messages.[235]"
    },
    {
        "uniqueId": "S0226",
        "target": "S0226 Smoke Loader",
        "description": "Smoke Loader deobfuscates its code.[236]"
    },
    {
        "uniqueId": "S1086",
        "target": "S1086 Snip3",
        "description": "Snip3 can decode its second-stage PowerShell script prior to execution.[237]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 used 7-Zip to decode their Raindrop malware.[201]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can run upload to decrypt and upload files from storage.[68][99]"
    },
    {
        "uniqueId": "S0516",
        "target": "S0516 SoreFang",
        "description": "SoreFang can decode and decrypt exfiltrated data sent to C2.[238]"
    },
    {
        "uniqueId": "S0543",
        "target": "S0543 Spark",
        "description": "Spark has used a custom XOR algorithm to decrypt the payload.[239]"
    },
    {
        "uniqueId": "S0390",
        "target": "S0390 SQLRat",
        "description": "SQLRat has scripts that are responsible for deobfuscating additional scripts.[240]"
    },
    {
        "uniqueId": "S1030",
        "target": "S1030 Squirrelwaffle",
        "description": "Squirrelwaffle has decrypted files and payloads using a XOR-based algorithm.[241][242]"
    },
    {
        "uniqueId": "S0188",
        "target": "S0188 Starloader",
        "description": "Starloader decrypts and executes shellcode from a file called Stars.jps.[243]"
    },
    {
        "uniqueId": "S1112",
        "target": "S1112 STEADYPULSE",
        "description": "STEADYPULSE can URL decode key/value pairs sent over C2.[235]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet decrypts resources that are loaded into memory and executed.[244]"
    },
    {
        "uniqueId": "S0562",
        "target": "S0562 SUNSPOT",
        "description": "SUNSPOT decrypts SUNBURST, which was stored in AES128-CBC encrypted blobs.[245]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can deobfuscate packed binaries in memory.[123]"
    },
    {
        "uniqueId": "G0092",
        "target": "G0092 TA505",
        "description": "TA505 has decrypted packed DLLs with an XOR key.[246]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor can use a stream cipher to decrypt stings used by the malware.[247]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has used a script that decodes a Base64-encoded version of WeaveWorks Scope.[248]"
    },
    {
        "uniqueId": "S0560",
        "target": "S0560 TEARDROP",
        "description": "TEARDROP was decoded using a custom rolling XOR algorithm to execute a customized Cobalt Strike payload.[249][250][202]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "During execution, Threat Group-3390 malware deobfuscates and decompresses code that was encoded with Metasploit\u2019s shikata_ga_nai encoder as well as compressed with LZNT1 compression.[251]"
    },
    {
        "uniqueId": "S0665",
        "target": "S0665 ThreatNeedle",
        "description": "ThreatNeedle can decrypt its payload using RC4, AES, or one-byte XORing.[252]"
    },
    {
        "uniqueId": "S0678",
        "target": "S0678 Torisma",
        "description": "Torisma has used XOR and Base64 to decode C2 data.[253]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot decodes the configuration data and modules.[254][255][256]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper used shellcode with an XOR algorithm to decrypt a payload. Tropic Trooper also decrypted image files which contained a payload.[257][258]"
    },
    {
        "uniqueId": "S0436",
        "target": "S0436 TSCookie",
        "description": "TSCookie has the ability to decrypt, load, and execute a DLL and its resources.[259]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian has the ability to use a XOR decryption key to extract C2 server domains and IP addresses.[260]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or PowerShell Profile, to decode encrypted PowerShell payloads.[261]"
    },
    {
        "uniqueId": "S0263",
        "target": "S0263 TYPEFRAME",
        "description": "One TYPEFRAME variant decrypts an archive using an RC4 key, then decompresses and installs the decrypted malicious DLL module. Another variant decodes the embedded file by XORing it with the value \"0x35\".[262]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can decrypt command parameters sent through C2 and use unpacking code to extract its packed executable.[263]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has used crypto key information stored in the Registry to decrypt Tor clients dropped to disk.[264]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has the ability to decode and decrypt downloaded files.[265][266]"
    },
    {
        "uniqueId": "S0636",
        "target": "S0636 VaporRage",
        "description": "VaporRage can deobfuscate XOR-encoded shellcode prior to execution.[36]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN decrypts code, strings, and commands to use once it's on the victim's machine.[267]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer deobfuscates its strings and APIs once its executed.[268]"
    },
    {
        "uniqueId": "S0670",
        "target": "S0670 WarzoneRAT",
        "description": "WarzoneRAT can use XOR 0x45 to decrypt obfuscated code.[269]"
    },
    {
        "uniqueId": "S0612",
        "target": "S0612 WastedLocker",
        "description": "WastedLocker's custom cryptor, CryptOne, used an XOR based algorithm to decrypt the payload.[270]"
    },
    {
        "uniqueId": "S0579",
        "target": "S0579 Waterbear",
        "description": "Waterbear has the ability to decrypt its RC4 encrypted payload for execution.[271]"
    },
    {
        "uniqueId": "S0515",
        "target": "S0515 WellMail",
        "description": "WellMail can decompress scripts received from C2.[272]"
    },
    {
        "uniqueId": "S0514",
        "target": "S0514 WellMess",
        "description": "WellMess can decode and decrypt data received from C2.[273][274][275]"
    },
    {
        "uniqueId": "S0689",
        "target": "S0689 WhisperGate",
        "description": "WhisperGate can deobfuscate downloaded files stored in reverse byte order and decrypt embedded resources using multiple XOR operations.[276][277]"
    },
    {
        "uniqueId": "S0466",
        "target": "S0466 WindTail",
        "description": "WindTail has the ability to decrypt strings using hard-coded AES keys.[278]"
    },
    {
        "uniqueId": "S0430",
        "target": "S0430 Winnti for Linux",
        "description": "Winnti for Linux has decoded XOR encoded strings holding its configuration upon execution.[279]"
    },
    {
        "uniqueId": "S0141",
        "target": "S0141 Winnti for Windows",
        "description": "The Winnti for Windows dropper can decrypt and decompresses a data blob.[280]"
    },
    {
        "uniqueId": "S1115",
        "target": "S1115 WIREFIRE",
        "description": "WIREFIRE can decode, decrypt, and decompress data received in C2 HTTP POST requests.[281]"
    },
    {
        "uniqueId": "G0090",
        "target": "G0090 WIRTE",
        "description": "WIRTE has used Base64 to decode malicious VBS script.[282]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT can deobfuscate Base64-encoded strings and scripts.[283]"
    },
    {
        "uniqueId": "S0653",
        "target": "S0653 xCaon",
        "description": "xCaon has decoded strings from the C2 server before executing commands.[284]"
    },
    {
        "uniqueId": "S0388",
        "target": "S0388 YAHOYAH",
        "description": "YAHOYAH decrypts downloaded files before execution.[285]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy decodes its secondary payload and writes it to the victim\u2019s machine. Zebrocy also uses AES and XOR to decrypt strings and payloads.[286][287]"
    },
    {
        "uniqueId": "S0230",
        "target": "S0230 ZeroT",
        "description": "ZeroT shellcode decrypts and decompresses its RC4-encrypted payload.[288]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda decrypts strings in the code during the execution process.[289]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code.[290]"
    },
    {
        "uniqueId": "S1013",
        "target": "S1013 ZxxZ",
        "description": "ZxxZ has used a XOR key to decrypt strings.[291]"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Modification",
        "description": "Monitor for changes made to files for unexpected modifications that attempt to hide artifacts. On Windows, Event ID 4663 (Security Log - An attempt was made to access an object) can be used to alert on suspicious file accesses (e.g., attempting to write to a file which shouldn\u2019t be further modified) that may coincide with attempts to hide artifacts."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior."
    },
    {
        "uniqueId": "base64",
        "target": "base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding an encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.",
        "description": "Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The analytic is oriented around the creation of CertUtil.exe processes, which may be used to encode and decode files, including PE and script code. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022.",
        "description": "Cybersecurity and Infrastructure Security Agency. (2021, February 21). AppleJeus: Analysis of North Korea\u2019s Cryptocurrency Malware. Retrieved March 1, 2021."
    },
    {
        "uniqueId": "C0d0so0",
        "target": "C0d0so0 Group. Retrieved August 2, 2018.",
        "description": "Lee, B, et al. (2018, February 28). Sofacy Attacks Multiple Government Entities. Retrieved March 15, 2018."
    },
    {
        "uniqueId": "Team9",
        "target": "Team9 malware family. Retrieved December 1, 2020.",
        "description": "Lee, B. Grunzweig, J. (2015, December 22). BBSRAT Attacks Targeting Russian Organizations Linked to Roaming Tiger. Retrieved August 19, 2016."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "US-CERT. (2020, August 19). MAR-10295134-1.v1 \u2013 North Korean Remote Access Trojan: BLINDINGCAN. Retrieved August 19, 2020."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Dunwoody, M., et al. (2018, November 19). Not So Cozy: An Uncomfortable Examination of a Suspected APT29 Phishing Campaign. Retrieved November 27, 2018."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Vrabie, V. (2020, November). Dissecting a Chinese APT Targeting South Eastern Asian Government Institutions. Retrieved September 19, 2022."
    },
    {
        "uniqueId": "27",
        "target": "27 LYCEUM Takes Center Stage in Middle East Campaign Retrieved. 2019/11/19",
        "description": "Adi Zeligson & Rotem Kerner. (2018, November 13). Enter The DarkGate - New Cryptocurrency Mining and Ransomware Campaign. Retrieved February 9, 2024."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "CISA. (2021, May 6). Analysis Report (AR21-126A) FiveHands Ransomware. Retrieved June 7, 2021."
    },
    {
        "uniqueId": "19",
        "target": "19 Lure in Campaigns. Retrieved May 19, 2020.",
        "description": "Boutin, J. (2020, June 11). Gamaredon group grows its game. Retrieved June 16, 2020."
    },
    {
        "uniqueId": "10",
        "target": "10 Years. Retrieved July 14, 2022.",
        "description": "Sanmillan, I. (2019, May 29). HiddenWasp Malware Stings Targeted Linux Systems. Retrieved June 24, 2019."
    },
    {
        "uniqueId": "2019",
        "target": "2019 Campaign. Retrieved April 28, 2020.",
        "description": "Threat Intelligence Team. (2021, August 23). New variant of Konni malware used in campaign targetting Russia. Retrieved January 5, 2022."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022.",
        "description": "Muhammad, I., Unterbrink, H.. (2021, January 6). A Deep Dive into Lokibot Infection Chain. Retrieved August 31, 2021."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018.",
        "description": "Leong, R., Perez, D., Dean, T. (2019, October 31). MESSAGETAP: Who\u2019s Reading Your Text Messages?. Retrieved May 11, 2020."
    },
    {
        "uniqueId": "APT15",
        "target": "APT15 Resurfaces With New Tools Based On Old Ones. Retrieved September 21, 2018.",
        "description": "ESET Security. (2019, November 19). Mispadu: Advertisement for a discounted Unhappy Meal. Retrieved March 13, 2024."
    },
    {
        "uniqueId": "ITG08",
        "target": "ITG08 Strikes Again. Retrieved September 16, 2019.",
        "description": "FBI, CISA, CNMF, NCSC-UK. (2022, February 24). Iranian Government-Sponsored Actors Conduct Cyber Operations Against Global Government and Commercial Networks. Retrieved September 27, 2022."
    },
    {
        "uniqueId": "11882",
        "target": "11882 Exploit. Retrieved December 20, 2017.",
        "description": "Lee, B., Falcone, R. (2018, February 23). OopsIE! OilRig Uses ThreeDollars to Deliver New Trojan. Retrieved July 16, 2018."
    },
    {
        "uniqueId": "2020",
        "target": "2020 Global Threat Report. Retrieved December 11, 2020.",
        "description": "Hromcova, Z. (2019, July). OKRUM AND KETRICAN: AN OVERVIEW OF RECENT KE3CHANG GROUP ACTIVITY. Retrieved May 6, 2020."
    },
    {
        "uniqueId": "20",
        "target": "20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
        "description": "Erye Hernandez and Danny Tsechansky. (2017, June 22). The New and Improved macOS Backdoor from OceanLotus. Retrieved September 8, 2023."
    },
    {
        "uniqueId": "TA416",
        "target": "TA416 Increases Operational Tempo Against European Governments as Conflict in Ukraine Escalates. Retrieved March 16, 2022.",
        "description": "Mercer, W. Rascagneres, P. Ventura, V. (2020, October 6). PoetRAT: Malware targeting public and private sector in Azerbaijan evolves . Retrieved April 9, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 IS BACK IN BUSINESS, TARGETING THE HOSPITALITY INDUSTRY. Retrieved June 13, 2019.",
        "description": "Checkpoint Research. (2021, November 15). Uncovering MosesStaff techniques: Ideology over Money. Retrieved August 11, 2022."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021.",
        "description": "Vrabie, V. (2021, April 23). NAIKON \u2013 Traces from a Military Cyber-Espionage Operation. Retrieved June 29, 2021."
    },
    {
        "uniqueId": "C2",
        "target": "C2 Channel with Steganography to Its Inventory. Retrieved July 28, 2020.",
        "description": "Legezo, D. (2019, January 30). Chafer used Remexi malware to spy on Iran-based foreign diplomatic entities. Retrieved April 17, 2019."
    },
    {
        "uniqueId": "471",
        "target": "471 Malware Intelligence team. (2020, March 31). REvil Ransomware-as-a-Service \u2013 An analysis of a ransomware affiliate operation. Retrieved August 4, 2020.",
        "description": "Counter Threat Unit Research Team. (2019, September 24). REvil/Sodinokibi Ransomware. Retrieved August 4, 2020."
    },
    {
        "uniqueId": "C2",
        "target": "C2 communications. Retrieved April 17, 2019.",
        "description": "Cash, D., Grunzweig, J., Adair, S., Lancaster, T. (2021, August 25). North Korean BLUELIGHT Special: InkySquid Deploys RokRAT. Retrieved October 1, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Uses Revamped Sardonic Backdoor to Deliver Noberus Ransomware. Retrieved August 9, 2023.",
        "description": "Schwarz, D. et al. (2019, October 16). TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Continues to Infect Networks With SDBbot RAT. Retrieved May 29, 2020.",
        "description": "Kaspersky Lab. (2017, August). ShadowPad: popular server management software hit in supply chain attack. Retrieved March 22, 2021."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021.",
        "description": "Prizmant, D. (2021, June 7). Siloscape: First Known Malware Targeting Windows Containers to Compromise Cloud Environments. Retrieved June 9, 2021."
    },
    {
        "uniqueId": "Snip3",
        "target": "Snip3 Crypter, a Highly Evasive RAT Loader. Retrieved September 13, 2023.",
        "description": "CISA. (2020, July 16). MAR-10296782-1.v1 \u2013 SOREFANG. Retrieved September 29, 2020."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Revisited: Inside Astra Panel and SQLRat Malware. Retrieved June 18, 2019.",
        "description": "Kumar, A., Stone-Gross, Brett. (2021, September 28). Squirrelwaffle: New Loader Delivering Cobalt Strike. Retrieved August 9, 2022."
    },
    {
        "uniqueId": "22",
        "target": "22 CrowdStrike Intelligence Team. (2021, January 11). SUNSPOT: An Implant in the Build Process. Retrieved January 11, 2021.",
        "description": "Terefos, A. (2020, November 18). TA505: A Brief History of Their Time. Retrieved July 14, 2022."
    },
    {
        "uniqueId": "v2",
        "target": "v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021.",
        "description": "Darin Smith. (2022, April 21). TeamTNT targeting AWS, Alibaba. Retrieved August 4, 2022."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019.",
        "description": "US-CERT. (2018, June 14). MAR-10135536-12 \u2013 North Korean Trojan: TYPEFRAME. Retrieved July 13, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMAIL. Retrieved September 29, 2020.",
        "description": "PWC. (2020, July 16). How WellMess malware has been used to target COVID-19 vaccines. Retrieved September 24, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMESS. Retrieved September 24, 2020.",
        "description": "Biasini, N. et al.. (2022, January 21). Ukraine Campaign Delivers Defacement and Wipers, in Continued Escalation. Retrieved March 14, 2022."
    },
    {
        "uniqueId": "S2",
        "target": "S2 Grupo. (2019, April 2). WIRTE Group attacking the Middle East. Retrieved May 24, 2019.",
        "description": "MalwareBytes Threat Intelligence Team. (2022, August 3). Woody RAT: A new feature-rich malware spotted in the wild. Retrieved December 6, 2022."
    },
    {
        "uniqueId": "APT31",
        "target": "APT31 Stole and Used an Unknown Equation Group 0-Day. Retrieved March 24, 2021.",
        "description": "Raghuprasad, C . (2022, May 11). Bitter APT adds Bangladesh to their targets. Retrieved June 1, 2022."
    },
    {
        "uniqueId": "T1498",
        "target": "T1498 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1498",
        "target": "T1498 Sub-techniques:  T1498.001, T1498.002",
        "description": "\u24d8"
    },
    {
        "uniqueId": "17",
        "target": "17 April 2019",
        "description": "Last Modified: 25 March 2022"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "In 2016, APT28 conducted a distributed denial of service (DDoS) attack against the World Anti-Doping Agency.[4]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can execute TCP, UDP, and HTTP denial of service (DoS) attacks.[5]"
    },
    {
        "uniqueId": "S1107",
        "target": "S1107 NKAbuse",
        "description": "NKAbuse enables multiple types of network denial of service capabilities across several protocols post-installation.[6]"
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.[7]"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Flow",
        "description": "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    },
    {
        "uniqueId": "DS0013",
        "target": "DS0013 Sensor Health Host Status",
        "description": "Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)"
    },
    {
        "uniqueId": "T1098",
        "target": "T1098 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1098",
        "target": "T1098 Sub-techniques:  T1098.001, T1098.002, T1098.003, T1098.004, T1098.005, T1098.006",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 16 January 2024"
    },
    {
        "uniqueId": "C0025",
        "target": "C0025 2016 Ukraine Electric Power Attack",
        "description": "During the 2016 Ukraine Electric Power Attack, Sandworm Team used the sp_addlinkedsrvlogin command in MS-SQL to create a link between a created account and other servers in the network.[2]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "APT3 has been known to add created accounts to local admin groups to maintain elevated access.[3]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 has added user accounts to the User and Admin groups.[4]"
    },
    {
        "uniqueId": "G1023",
        "target": "G1023 APT5",
        "description": "APT5 has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation.[5]"
    },
    {
        "uniqueId": "S0274",
        "target": "S0274 Calisto",
        "description": "Calisto adds permissions and remote logins to all users.[6]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate elevates accounts created through the malware to the local administration group during execution.[7]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has added newly created accounts to the administrators group to maintain elevated access.[8]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has assigned newly created accounts the sysadmin role to maintain persistence.[9]"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM has granted privileges to domain accounts.[10]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has added accounts to specific groups with net localgroup.[11]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group malware WhiskeyDelta-Two contains a function that attempts to rename the administrator\u2019s account.[12][13]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups.[14]"
    },
    {
        "uniqueId": "S0002",
        "target": "S0002 Mimikatz",
        "description": "The Mimikatz credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality. The LSADUMP::ChangeNTLM and LSADUMP::SetNTLM modules can also manipulate the password hash of an account without knowing the clear text value.[15][16]"
    },
    {
        "uniqueId": "S0382",
        "target": "S0382 ServHelper",
        "description": "ServHelper has added a user named \"supportaccount\" to the Remote Desktop Users and Administrators groups.[17]"
    },
    {
        "uniqueId": "S0649",
        "target": "S0649 SMOKEDHAM",
        "description": "SMOKEDHAM has added user accounts to local Admin groups.[1]"
    },
    {
        "uniqueId": "M1032",
        "target": "M1032 Multi-factor Authentication",
        "description": "Use multi-factor authentication for user and privileged accounts."
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems."
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Protect domain controllers by ensuring proper security configuration for critical servers to limit access by potentially unnecessary protocols and services, such as SMB file sharing."
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Ensure that low-privileged user accounts do not have permissions to modify accounts or account-related policies."
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Object Modification",
        "description": "Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.[18]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config)."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Modification",
        "description": "Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system."
    },
    {
        "uniqueId": "DS0036",
        "target": "DS0036 Group Group Modification",
        "description": "Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Modification",
        "description": "Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "Metcalf, S. (2015, November 13). Unofficial Guide to Mimikatz & Command Reference. Retrieved December 23, 2015."
    },
    {
        "uniqueId": "T1563",
        "target": "T1563 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1563",
        "target": "T1563 Sub-techniques:  T1563.001, T1563.002",
        "description": "\u24d8"
    },
    {
        "uniqueId": "25",
        "target": "25 February 2020",
        "description": "Last Modified: 26 February 2024"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Disable the remote service (ex: SSH, RDP, etc.) if it is unnecessary."
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Enable firewall rules to block unnecessary traffic between network security zones within a network."
    },
    {
        "uniqueId": "M1027",
        "target": "M1027 Password Policies",
        "description": "Set and enforce secure password policies for accounts."
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Do not allow remote access to services as a privileged account unless necessary."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Limit remote user permissions if remote access is necessary."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment."
    },
    {
        "uniqueId": "11",
        "target": "11 security incident. Retrieved February 17, 2020.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "TA0010",
        "target": "TA0010 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TACTICS"
    },
    {
        "uniqueId": "TA0010",
        "target": "TA0010 Created: 17 October 2018",
        "description": "Last Modified: 19 July 2019"
    },
    {
        "uniqueId": "T1020",
        "target": "T1020 Automated Exfiltration Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.",
        "description": ".001 Traffic Duplication Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device."
    },
    {
        "uniqueId": "T1030",
        "target": "T1030 Data Transfer Size Limits An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
        "description": "T1048 Exfiltration Over Alternative Protocol Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
    },
    {
        "uniqueId": "001",
        "target": "001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.",
        "description": ".002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
    },
    {
        "uniqueId": "003",
        "target": "003 Exfiltration Over Unencrypted Non-C2 Protocol Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.",
        "description": "T1041 Exfiltration Over C2 Channel Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications."
    },
    {
        "uniqueId": "T1011",
        "target": "T1011 Exfiltration Over Other Network Medium Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.",
        "description": ".001 Exfiltration Over Bluetooth Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel."
    },
    {
        "uniqueId": "T1052",
        "target": "T1052 Exfiltration Over Physical Medium Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
        "description": ".001 Exfiltration over USB Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems."
    },
    {
        "uniqueId": "T1567",
        "target": "T1567 Exfiltration Over Web Service Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.",
        "description": ".001 Exfiltration to Code Repository Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection."
    },
    {
        "uniqueId": "002",
        "target": "002 Exfiltration to Cloud Storage Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.",
        "description": ".003 Exfiltration to Text Storage Sites Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as pastebin[.]com, are commonly used by developers to share code and other information."
    },
    {
        "uniqueId": "004",
        "target": "004 Exfiltration Over Webhook Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server. Many public and commercial services, such as Discord, Slack, and webhook.site, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello. When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application.",
        "description": "T1029 Scheduled Transfer Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability."
    },
    {
        "uniqueId": "T1537",
        "target": "T1537 Transfer Data to Cloud Account Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "TA0005",
        "target": "TA0005 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TACTICS"
    },
    {
        "uniqueId": "TA0005",
        "target": "TA0005 Created: 17 October 2018",
        "description": "Last Modified: 19 July 2019"
    },
    {
        "uniqueId": "43",
        "target": "43 ID Name Description",
        "description": "T1548 Abuse Elevation Control Mechanism Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system."
    },
    {
        "uniqueId": "001",
        "target": "001 Setuid and Setgid An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user\u2019s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively. Normally an application is run in the current user\u2019s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.",
        "description": ".002 Bypass User Account Control Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action."
    },
    {
        "uniqueId": "003",
        "target": "003 Sudo and Sudo Caching Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.",
        "description": ".004 Elevated Execution with Prompt Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified."
    },
    {
        "uniqueId": "005",
        "target": "005 Temporary Elevated Cloud Access Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own.",
        "description": ".006 TCC Manipulation Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to execute malicious applications with elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA)."
    },
    {
        "uniqueId": "T1134",
        "target": "T1134 Access Token Manipulation Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.",
        "description": ".001 Token Impersonation/Theft Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread."
    },
    {
        "uniqueId": "002",
        "target": "002 Create Process with Token Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas.",
        "description": ".003 Make and Impersonate Token Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread."
    },
    {
        "uniqueId": "004",
        "target": "004 Parent PID Spoofing Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context.",
        "description": ".005 SID-History Injection Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens)."
    },
    {
        "uniqueId": "T1197",
        "target": "T1197 BITS Jobs Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through Component Object Model (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.",
        "description": "T1612 Build Image on Host Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote build request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it."
    },
    {
        "uniqueId": "T1622",
        "target": "T1622 Debugger Evasion Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.",
        "description": "T1140 Deobfuscate/Decode Files or Information Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."
    },
    {
        "uniqueId": "T1610",
        "target": "T1610 Deploy Container Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to Escape to Host and access other containers running on the node.",
        "description": "T1006 Direct Volume Access Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools."
    },
    {
        "uniqueId": "T1484",
        "target": "T1484 Domain or Tenant Policy Modification Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation.",
        "description": ".001 Group Policy Modification Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path \\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\."
    },
    {
        "uniqueId": "002",
        "target": "002 Trust Modification Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.",
        "description": "T1480 Execution Guardrails Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\u2019s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses."
    },
    {
        "uniqueId": "001",
        "target": "001 Environmental Keying Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.",
        "description": "T1211 Exploitation for Defense Evasion Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them."
    },
    {
        "uniqueId": "T1222",
        "target": "T1222 File and Directory Permissions Modification Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).",
        "description": ".001 Windows File and Directory Permissions Modification Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)."
    },
    {
        "uniqueId": "002",
        "target": "002 Linux and Mac File and Directory Permissions Modification Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).",
        "description": "T1564 Hide Artifacts Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection."
    },
    {
        "uniqueId": "001",
        "target": "001 Hidden Files and Directories Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls \u2013a for Linux and macOS).",
        "description": ".002 Hidden Users Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users."
    },
    {
        "uniqueId": "003",
        "target": "003 Hidden Window Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.",
        "description": ".004 NTFS File Attributes Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. Within MFT entries are file attributes, such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files)."
    },
    {
        "uniqueId": "005",
        "target": "005 Hidden File System Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.",
        "description": ".006 Run Virtual Instance Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values."
    },
    {
        "uniqueId": "007",
        "target": "007 VBA Stomping Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.",
        "description": ".008 Email Hiding Rules Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the New-InboxRule or Set-InboxRule PowerShell cmdlets on Windows systems."
    },
    {
        "uniqueId": "009",
        "target": "009 Resource Forking Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using ls -l@ or xattr -l commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the /Resources folder.",
        "description": ".010 Process Argument Spoofing Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB."
    },
    {
        "uniqueId": "011",
        "target": "011 Ignore Process Interrupts Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off. These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.",
        "description": ".012 File/Path Exclusions Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate."
    },
    {
        "uniqueId": "T1574",
        "target": "T1574 Hijack Execution Flow Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.",
        "description": ".001 DLL Search Order Hijacking Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution."
    },
    {
        "uniqueId": "002",
        "target": "002 DLL Side-Loading Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).",
        "description": ".004 Dylib Hijacking Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with @rpath, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable. Additionally, if weak linking is used, such as the LC_LOAD_WEAK_DYLIB function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added."
    },
    {
        "uniqueId": "005",
        "target": "005 Executable Installer File Permissions Weakness Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.",
        "description": ".006 Dynamic Linker Hijacking Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as LD_PRELOAD on Linux or DYLD_INSERT_LIBRARIES on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library."
    },
    {
        "uniqueId": "007",
        "target": "007 Path Interception by PATH Environment Variable Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line.",
        "description": ".008 Path Interception by Search Order Hijacking Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program."
    },
    {
        "uniqueId": "009",
        "target": "009 Path Interception by Unquoted Path Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.",
        "description": ".010 Services File Permissions Weakness Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
    },
    {
        "uniqueId": "011",
        "target": "011 Services Registry Permissions Weakness Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through access control lists and user permissions.",
        "description": ".012 COR_PROFILER Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR."
    },
    {
        "uniqueId": "013",
        "target": "013 KernelCallbackTable Adversaries may abuse the KernelCallbackTable of a process to hijack its execution flow in order to run their own payloads. The KernelCallbackTable can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once user32.dll is loaded.",
        "description": ".014 AppDomainManager Adversaries may execute their own malicious payloads by hijacking how the .NET AppDomainManager loads assemblies. The .NET framework uses the AppDomainManager class to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (.exe or .dll binaries compiled to run as .NET code) may be loaded into an application domain as executable code."
    },
    {
        "uniqueId": "T1562",
        "target": "T1562 Impair Defenses Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.",
        "description": ".001 Disable or Modify Tools Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems."
    },
    {
        "uniqueId": "002",
        "target": "002 Disable Windows Event Logging Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections.",
        "description": ".003 Impair Command History Logging Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done."
    },
    {
        "uniqueId": "004",
        "target": "004 Disable or Modify System Firewall Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.",
        "description": ".006 Indicator Blocking An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation."
    },
    {
        "uniqueId": "007",
        "target": "007 Disable or Modify Cloud Firewall Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in Disable or Modify System Firewall.",
        "description": ".008 Disable or Modify Cloud Logs An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities."
    },
    {
        "uniqueId": "009",
        "target": "009 Safe Mode Boot Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.",
        "description": ".010 Downgrade Attack Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system\u2019s backward compatibility to force it into less secure modes of operation."
    },
    {
        "uniqueId": "011",
        "target": "011 Spoof Security Alerting Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders\u2019 awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.",
        "description": ".012 Disable or Modify Linux Audit System Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules."
    },
    {
        "uniqueId": "T1656",
        "target": "T1656 Impersonation Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via Phishing for Information, Phishing, or Internal Spearphishing) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims.",
        "description": "T1070 Indicator Removal Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform."
    },
    {
        "uniqueId": "001",
        "target": "001 Clear Windows Event Logs Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.",
        "description": ".002 Clear Linux or Mac System Logs Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the /var/log/ directory. Subfolders in this directory categorize logs by their related functions, such as:"
    },
    {
        "uniqueId": "003",
        "target": "003 Clear Command History In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.",
        "description": ".004 File Deletion Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."
    },
    {
        "uniqueId": "005",
        "target": "005 Network Share Connection Removal Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and SMB/Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the net use \\system\\share /delete command.",
        "description": ".006 Timestomp Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools."
    },
    {
        "uniqueId": "007",
        "target": "007 Clear Network Connection History and Configurations Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as Remote Services or External Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.",
        "description": ".008 Clear Mailbox Data Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests."
    },
    {
        "uniqueId": "009",
        "target": "009 Clear Persistence Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, Modify Registry, Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e. Create Account).",
        "description": "T1202 Indirect Command Execution Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking cmd. For example, Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a Command and Scripting Interpreter, Run window, or via scripts."
    },
    {
        "uniqueId": "T1036",
        "target": "T1036 Masquerading Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.",
        "description": ".001 Invalid Code Signature Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files."
    },
    {
        "uniqueId": "002",
        "target": "002 Right-to-Left Override Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named March 25 \\u202Excod.scr will display as March 25 rcs.docx. A JavaScript file named photo_high_re\\u202Egnp.js will be displayed as photo_high_resj.png.",
        "description": ".003 Rename System Utilities Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename rundll32.exe). An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths."
    },
    {
        "uniqueId": "004",
        "target": "004 Masquerade Task or Service Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.",
        "description": ".005 Match Legitimate Name or Location Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous."
    },
    {
        "uniqueId": "006",
        "target": "006 Space after Filename Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.",
        "description": ".007 Double File Extension Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: File.txt.exe may render in some views as just File.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies."
    },
    {
        "uniqueId": "008",
        "target": "008 Masquerade File Type Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file, is 0xFF 0xD8 and the file extension is either .JPE, .JPEG or .JPG.",
        "description": ".009 Break Process Trees An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the \"parent-child\" relationship for detection, breaking this relationship could result in the adversary\u2019s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs."
    },
    {
        "uniqueId": "T1556",
        "target": "T1556 Modify Authentication Process Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.",
        "description": ".001 Domain Controller Authentication Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts."
    },
    {
        "uniqueId": "002",
        "target": "002 Password Filter DLL Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.",
        "description": ".003 Pluggable Authentication Modules Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in /etc/passwd and /etc/shadow."
    },
    {
        "uniqueId": "004",
        "target": "004 Network Device Authentication Adversaries may use Patch System Image to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.",
        "description": ".005 Reversible Encryption An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it."
    },
    {
        "uniqueId": "006",
        "target": "006 Multi-Factor Authentication Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.",
        "description": ".007 Hybrid Identity Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts."
    },
    {
        "uniqueId": "008",
        "target": "008 Network Provider DLL Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions. During the logon process, Winlogon (the interactive logon module) sends credentials to the local mpnotify.exe process via RPC. The mpnotify.exe process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.",
        "description": ".009 Conditional Access Policies Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource."
    },
    {
        "uniqueId": "T1578",
        "target": "T1578 Modify Cloud Compute Infrastructure An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.",
        "description": ".001 Create Snapshot An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in Revert Cloud Instance where an adversary may revert to a snapshot to evade detection and remove evidence of their presence."
    },
    {
        "uniqueId": "002",
        "target": "002 Create Cloud Instance An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may Create Snapshot of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect Data from Local System or for Remote Data Staging.",
        "description": ".003 Delete Cloud Instance An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable."
    },
    {
        "uniqueId": "004",
        "target": "004 Revert Cloud Instance An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.",
        "description": ".005 Modify Cloud Compute Configurations Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim\u2019s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim."
    },
    {
        "uniqueId": "T1112",
        "target": "T1112 Modify Registry Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.",
        "description": "T1601 Modify System Image Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves. On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file."
    },
    {
        "uniqueId": "001",
        "target": "001 Patch System Image Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses. Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file. Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.",
        "description": ".002 Downgrade System Image Adversaries may install an older version of the operating system of a network device to weaken security. Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features."
    },
    {
        "uniqueId": "T1599",
        "target": "T1599 Network Boundary Bridging Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.",
        "description": ".001 Network Address Translation Traversal Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks."
    },
    {
        "uniqueId": "T1027",
        "target": "T1027 Obfuscated Files or Information Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.",
        "description": ".001 Binary Padding Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations."
    },
    {
        "uniqueId": "002",
        "target": "002 Software Packing Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.",
        "description": ".003 Steganography Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files."
    },
    {
        "uniqueId": "004",
        "target": "004 Compile After Delivery Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.",
        "description": ".005 Indicator Removal from Tools Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems."
    },
    {
        "uniqueId": "006",
        "target": "006 HTML Smuggling Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.",
        "description": ".007 Dynamic API Resolution Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various Native API functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts."
    },
    {
        "uniqueId": "008",
        "target": "008 Stripped Payloads Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system\u2019s linker when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.",
        "description": ".009 Embedded Payloads Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets."
    },
    {
        "uniqueId": "010",
        "target": "010 Command Obfuscation Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., Phishing and Drive-by Compromise) or interactively via Command and Scripting Interpreter.",
        "description": ".011 Fileless Storage Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository."
    },
    {
        "uniqueId": "012",
        "target": "012 LNK Icon Smuggling Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the IconEnvironmentDataBlock) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory.",
        "description": ".013 Encrypted/Encoded File Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as Software Packing, Steganography, and Embedded Payloads, share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., Deobfuscate/Decode Files or Information) at the time of execution/use."
    },
    {
        "uniqueId": "T1647",
        "target": "T1647 Plist File Modification Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the info.plist file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.",
        "description": "T1542 Pre-OS Boot Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control."
    },
    {
        "uniqueId": "001",
        "target": "001 System Firmware Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.",
        "description": ".002 Component Firmware Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components/devices that may not have the same capability or level of integrity checking."
    },
    {
        "uniqueId": "003",
        "target": "003 Bootkit Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.",
        "description": ".004 ROMMONkit Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect."
    },
    {
        "uniqueId": "005",
        "target": "005 TFTP Boot Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.",
        "description": "T1055 Process Injection Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process."
    },
    {
        "uniqueId": "001",
        "target": "001 Dynamic-link Library Injection Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".002 Portable Executable Injection Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "003",
        "target": "003 Thread Execution Hijacking Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".004 Asynchronous Procedure Call Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "005",
        "target": "005 Thread Local Storage Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".008 Ptrace System Calls Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "009",
        "target": "009 Proc Memory Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".011 Extra Window Memory Injection Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "012",
        "target": "012 Process Hollowing Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".013 Process Doppelg\u00e4nging Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process."
    },
    {
        "uniqueId": "014",
        "target": "014 VDSO Hijacking Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.",
        "description": ".015 ListPlanting Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process."
    },
    {
        "uniqueId": "T1620",
        "target": "T1620 Reflective Code Loading Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., Shared Modules).",
        "description": "T1207 Rogue Domain Controller Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys."
    },
    {
        "uniqueId": "T1014",
        "target": "T1014 Rootkit Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information.",
        "description": "T1553 Subvert Trust Controls Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site."
    },
    {
        "uniqueId": "001",
        "target": "001 Gatekeeper Bypass Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple\u2019s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.",
        "description": ".002 Code Signing Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. Unlike Invalid Code Signature, this activity will result in a valid signature."
    },
    {
        "uniqueId": "003",
        "target": "003 SIP and Trust Provider Hijacking Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function, which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.",
        "description": ".004 Install Root Certificate Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website."
    },
    {
        "uniqueId": "005",
        "target": "005 Mark-of-the-Web Bypass Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named Zone.Identifier with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.",
        "description": ".006 Code Signing Policy Modification Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system."
    },
    {
        "uniqueId": "T1218",
        "target": "T1218 System Binary Proxy Execution Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system. Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.",
        "description": ".001 Compiled HTML File Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. CHM content is displayed using underlying components of the Internet Explorer browser loaded by the HTML Help executable program (hh.exe)."
    },
    {
        "uniqueId": "002",
        "target": "002 Control Panel Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.",
        "description": ".003 CMSTP Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections."
    },
    {
        "uniqueId": "004",
        "target": "004 InstallUtil Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: C:\\Windows\\Microsoft.NET\\Framework\\v\\InstallUtil.exe and C:\\Windows\\Microsoft.NET\\Framework64\\v\\InstallUtil.exe.",
        "description": ".005 Mshta Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code"
    },
    {
        "uniqueId": "007",
        "target": "007 Msiexec Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.",
        "description": ".008 Odbcconf Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft."
    },
    {
        "uniqueId": "009",
        "target": "009 Regsvcs/Regasm Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.",
        "description": ".010 Regsvr32 Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft."
    },
    {
        "uniqueId": "011",
        "target": "011 Rundll32 Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).",
        "description": ".012 Verclsid Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell."
    },
    {
        "uniqueId": "013",
        "target": "013 Mavinject Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).",
        "description": ".014 MMC Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration."
    },
    {
        "uniqueId": "015",
        "target": "015 Electron Applications Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams. Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS. The Chromium engine is used to display web content and Node.js runs the backend code.",
        "description": "T1216 System Script Proxy Execution Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems."
    },
    {
        "uniqueId": "001",
        "target": "001 PubPrn Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the Windows Command Shell via Cscript.exe. For example, the following code publishes a printer within the specified domain: cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com.",
        "description": ".002 SyncAppvPublishingServer Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious PowerShell commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V). For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally."
    },
    {
        "uniqueId": "T1221",
        "target": "T1221 Template Injection Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft\u2019s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.",
        "description": "T1205 Traffic Signaling Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software."
    },
    {
        "uniqueId": "001",
        "target": "001 Port Knocking Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.",
        "description": ".002 Socket Filters Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the libpcap library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell."
    },
    {
        "uniqueId": "T1127",
        "target": "T1127 Trusted Developer Utilities Proxy Execution Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.",
        "description": ".001 MSBuild Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations."
    },
    {
        "uniqueId": "T1535",
        "target": "T1535 Unused/Unsupported Cloud Regions Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.",
        "description": "T1550 Use Alternate Authentication Material Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    },
    {
        "uniqueId": "001",
        "target": "001 Application Access Token Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.",
        "description": ".002 Pass the Hash Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash."
    },
    {
        "uniqueId": "003",
        "target": "003 Pass the Ticket Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.",
        "description": ".004 Web Session Cookie Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated."
    },
    {
        "uniqueId": "T1078",
        "target": "T1078 Valid Accounts Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.",
        "description": ".001 Default Accounts Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes."
    },
    {
        "uniqueId": "002",
        "target": "002 Domain Accounts Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.",
        "description": ".003 Local Accounts Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
    },
    {
        "uniqueId": "004",
        "target": "004 Cloud Accounts Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory.",
        "description": "T1497 Virtualization/Sandbox Evasion Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
    },
    {
        "uniqueId": "001",
        "target": "001 System Checks Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.",
        "description": ".002 User Activity Based Checks Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
    },
    {
        "uniqueId": "003",
        "target": "003 Time Based Evasion Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.",
        "description": "T1600 Weaken Encryption Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications."
    },
    {
        "uniqueId": "001",
        "target": "001 Reduce Key Space Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.",
        "description": ".002 Disable Crypto Hardware Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data."
    },
    {
        "uniqueId": "T1220",
        "target": "T1220 XSL Script Processing Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1187",
        "target": "T1187 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "80",
        "target": "80 and 443. [2] [3]",
        "description": "Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. Template Injection), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. [4] With access to the credential hash, an adversary can perform off-line Brute Force cracking to gain access to plaintext credentials. [5]"
    },
    {
        "uniqueId": "T1187",
        "target": "T1187 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "16",
        "target": "16 January 2018",
        "description": "Last Modified: 14 August 2023"
    },
    {
        "uniqueId": "G0079",
        "target": "G0079 DarkHydrus",
        "description": "DarkHydrus used Template Injection to launch an authentication window for users to enter their credentials.[8]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.[9][10]"
    },
    {
        "uniqueId": "S0634",
        "target": "S0634 EnvyScout",
        "description": "EnvyScout can use protocol handlers to coax the operating system to send NTLMv2 authentication responses to attacker-controlled infrastructure.[11]"
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Block SMB traffic from exiting an enterprise network with egress filtering or by blocking TCP ports 139, 445 and UDP port 137. Filter or block WebDAV protocol traffic from exiting the network. If access to external resources over SMB and WebDAV is necessary, then traffic should be tightly limited with allowlisting. [12] [7]"
    },
    {
        "uniqueId": "M1027",
        "target": "M1027 Password Policies",
        "description": "Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for unexpected files used to gather credentials when the files are rendered"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located."
    },
    {
        "uniqueId": "445",
        "target": "445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.",
        "description": "References"
    },
    {
        "uniqueId": "T1550",
        "target": "T1550 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1550",
        "target": "T1550 Sub-techniques:  T1550.001, T1550.002, T1550.003, T1550.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "30",
        "target": "30 January 2020",
        "description": "Last Modified: 28 April 2024"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb can allow abuse of a compromised AD FS server's SAML token.[3]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 used forged SAML tokens that allowed the actors to impersonate users and bypass MFA, enabling APT29 to access enterprise cloud applications and services.[4][5]"
    },
    {
        "uniqueId": "M1015",
        "target": "M1015 Active Directory Configuration",
        "description": "Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc."
    },
    {
        "uniqueId": "M1013",
        "target": "M1013 Application Developer Guidance",
        "description": "Consider implementing token binding strategies, such as Azure AD token protection or OAuth Proof of Possession, that cryptographically bind a token to a secret. This may prevent the token from being used without knowledge of the secret or possession of the device the token is tied to.[6][7]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses."
    },
    {
        "uniqueId": "M1027",
        "target": "M1027 Password Policies",
        "description": "Set and enforce secure password policies for accounts."
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems."
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Credential Request",
        "description": "Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Authentication",
        "description": "Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    },
    {
        "uniqueId": "DS0006",
        "target": "DS0006 Web Credential Web Credential Usage",
        "description": "Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Team. (2020, December 28). Using Microsoft 365 Defender to protect against Solorigate. Retrieved January 7, 2021.",
        "description": "Secureworks CTU. (n.d.). IRON RITUAL. Retrieved February 24, 2022."
    },
    {
        "uniqueId": "T1611",
        "target": "T1611 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1611",
        "target": "T1611 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "30",
        "target": "30 March 2021",
        "description": "Last Modified: 19 April 2024"
    },
    {
        "uniqueId": "S0600",
        "target": "S0600 Doki",
        "description": "Doki\u2019s container was configured to bind the host root directory.[4]"
    },
    {
        "uniqueId": "S0601",
        "target": "S0601 Hildegard",
        "description": "Hildegard has used the BOtB tool that can break out of containers. [9]"
    },
    {
        "uniqueId": "S0683",
        "target": "S0683 Peirates",
        "description": "Peirates can gain a reverse shell on a host node by mounting the Kubernetes hostPath.[10]"
    },
    {
        "uniqueId": "S0623",
        "target": "S0623 Siloscape",
        "description": "Siloscape maps the host\u2019s C drive to the container by creating a global symbolic link to the host through the calling of NtSetInformationSymbolicLink.[11]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has deployed privileged containers that mount the filesystem of victim machine.[12][13]"
    },
    {
        "uniqueId": "M1048",
        "target": "M1048 Application Isolation and Sandboxing",
        "description": "Consider utilizing seccomp, seccomp-bpf, or a similar solution that restricts certain system calls such as mount. In Kubernetes environments, consider defining Pod Security Standards that limit container access to host process namespaces, the host network, and the host file system.[14]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Remove unnecessary tools and software from containers."
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Use read-only containers, read-only file systems, and minimal images when possible to prevent the running of commands.[14] Where possible, also consider using application control and software restriction tools (such as those provided by SELinux) to restrict access to files, processes, and system calls in containers.[15]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Ensure containers are not running as root by default and do not use unnecessary privileges or mounted components. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.[14]"
    },
    {
        "uniqueId": "DS0032",
        "target": "DS0032 Container Container Creation",
        "description": "Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root."
    },
    {
        "uniqueId": "DS0008",
        "target": "DS0008 Kernel Kernel Module Load",
        "description": "Monitor for the installation of kernel modules that could be abused to escape containers on a host."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for unexpected usage of syscalls such as mount that may indicate an attempt to escape from a privileged container to host."
    },
    {
        "uniqueId": "DS0034",
        "target": "DS0034 Volume Volume Modification",
        "description": "Monitor cluster-level (Kubernetes) data and events associated with changing containers' volume configurations."
    },
    {
        "uniqueId": "T1538",
        "target": "T1538 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1538",
        "target": "T1538 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "30",
        "target": "30 August 2019",
        "description": "Last Modified: 19 April 2024"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider",
        "description": "Scattered Spider abused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement.[2]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Monitor for newly constructed logon behavior across cloud service management consoles.[3]"
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Authentication",
        "description": "Correlate other security systems with login information, such as user accounts, IP addresses, and login names.[3]"
    },
    {
        "uniqueId": "T1600",
        "target": "T1600 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1600",
        "target": "T1600 Sub-techniques:  T1600.001, T1600.002",
        "description": "\u24d8"
    },
    {
        "uniqueId": "19",
        "target": "19 October 2020",
        "description": "Last Modified: 21 October 2020"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Modification",
        "description": "File Modification"
    },
    {
        "uniqueId": "T1560",
        "target": "T1560 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1560",
        "target": "T1560 Sub-techniques:  T1560.001, T1560.002, T1560.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "20",
        "target": "20 February 2020",
        "description": "Last Modified: 20 January 2024"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "ADVSTORESHELL encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.[2]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can encrypt data with 3DES before sending it over to a C2 server.[3]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed has compressed collected data before exfiltration.[4]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[1]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32's backdoor has used LZMA compression and RC4 encryption before exfiltration.[5]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has used ZIP to compress data gathered on a compromised host.[6]"
    },
    {
        "uniqueId": "G0001",
        "target": "G0001 Axiom",
        "description": "Axiom has compressed and encrypted data prior to exfiltration.[7]"
    },
    {
        "uniqueId": "S0093",
        "target": "S0093 Backdoor.Oldrea",
        "description": "Backdoor.Oldrea writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.[8]"
    },
    {
        "uniqueId": "S0521",
        "target": "S0521 BloodHound",
        "description": "BloodHound can compress data collected by its SharpHound ingestor into a ZIP file to be written to disk.[9][10]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT can zip files before exfiltration.[11]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can compress data stolen from the Registry and volume shadow copies prior to exfiltration.[12]"
    },
    {
        "uniqueId": "S0454",
        "target": "S0454 Cadelspy",
        "description": "Cadelspy has the ability to compress stolen data into a .cab file.[13]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme can encrypt and store on disk collected data before exfiltration.[14]"
    },
    {
        "uniqueId": "S0187",
        "target": "S0187 Daserf",
        "description": "Daserf hides collected data in password-protected .rar archives.[15]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has compressed data into .zip files prior to exfiltration.[16]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack packs collected data into a password protected archive.[17]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has been observed encrypting the data it collects before sending it to the C2 server. [18]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can ZIP directories on the target system.[19]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic encrypts collected data using a public key framework before sending it over the C2 channel.[20] Some variants encrypt the collected data with AES and encode it with base64 before transmitting it to the C2 server.[21]"
    },
    {
        "uniqueId": "S0343",
        "target": "S0343 Exaramel for Windows",
        "description": "Exaramel for Windows automatically encrypts files before sending them to the C2 server.[22]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT encrypts collected data with AES and Base64 and then sends it to the C2 server.[23]"
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6",
        "description": "Following data collection, FIN6 has compressed log files into a ZIP archive prior to staging and exfiltration.[24]"
    },
    {
        "uniqueId": "S0249",
        "target": "S0249 Gold Dragon",
        "description": "Gold Dragon encrypts data using Base64 before being sent to the command and control server.[25]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "The Ke3chang group has been known to compress data before exfiltration.[26]"
    },
    {
        "uniqueId": "S0487",
        "target": "S0487 Kessel",
        "description": "Kessel can RC4-encrypt credentials before sending to the C2.[27]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI has encrypted data and files prior to exfiltration.[28]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2. [29][30][31]"
    },
    {
        "uniqueId": "G0065",
        "target": "G0065 Leviathan",
        "description": "Leviathan has archived victim's data prior to exfiltration.[32]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron contains a function to encrypt and store emails that it collects.[33]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar has encrypted data before sending it to the server.[34]"
    },
    {
        "uniqueId": "S1101",
        "target": "S1101 LoFiSe",
        "description": "LoFiSe can collect files into password-protected ZIP-archives for exfiltration.[35]"
    },
    {
        "uniqueId": "G1014",
        "target": "G1014 LuminousMoth",
        "description": "LuminousMoth has manually archived stolen files from victim machines before exfiltration.[36]"
    },
    {
        "uniqueId": "S0010",
        "target": "S0010 Lurid",
        "description": "Lurid can compress data before sending it.[37]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete stores zipped files with profile data from installed web browsers.[38]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has encrypted files and information before exfiltration.[39][40]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE has the ability to compress archived screenshots.[41]"
    },
    {
        "uniqueId": "G0040",
        "target": "G0040 Patchwork",
        "description": "Patchwork encrypted the collected files' path with AES and then encoded them with base64.[42]"
    },
    {
        "uniqueId": "S0517",
        "target": "S0517 Pillowmint",
        "description": "Pillowmint has encrypted stolen credit card information with AES and further encoded it with Base64.[43]"
    },
    {
        "uniqueId": "S1012",
        "target": "S1012 PowerLess",
        "description": "PowerLess can encrypt browser database files prior to exfiltration.[44]"
    },
    {
        "uniqueId": "S0113",
        "target": "S0113 Prikormka",
        "description": "After collecting documents from removable media, Prikormka compresses the collected files, and encrypts it with Blowfish.[45]"
    },
    {
        "uniqueId": "S0279",
        "target": "S0279 Proton",
        "description": "Proton zips up files before exfiltrating them.[46]"
    },
    {
        "uniqueId": "S0375",
        "target": "S0375 Remexi",
        "description": "Remexi encrypts and adds all gathered browser data into files for upload to C2.[47]"
    },
    {
        "uniqueId": "S0253",
        "target": "S0253 RunningRAT",
        "description": "RunningRAT contains code to compress files.[25]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter used LZ compression to compress initial reconnaissance reports before sending to the C2.[48]"
    },
    {
        "uniqueId": "S0586",
        "target": "S0586 TAINTEDSCRIBE",
        "description": "TAINTEDSCRIBE has used FileReadZipSend to compress a file and send to C2.[49]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN encrypts the collected files using 3-DES.[50]"
    },
    {
        "uniqueId": "S0515",
        "target": "S0515 WellMail",
        "description": "WellMail can archive files on the compromised host.[51]"
    },
    {
        "uniqueId": "S0658",
        "target": "S0658 XCSSET",
        "description": "XCSSET will compress entire ~/Desktop folders excluding all .git folders, but only if the total data size is under 200MB.[52]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy has used a method similar to RC4 as well as AES for encryption and hexadecimal for encoding data before exfiltration. [53][54][55]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "System scans can be performed to identify unauthorized archival utilities."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "APT40",
        "target": "APT40 Actors Associated with China\u2019s MSS Hainan State Security Department. Retrieved August 12, 2021.",
        "description": "Faou, M. (2019, May). Turla LightNeuron: One email away from remote code execution. Retrieved June 24, 2019."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022.",
        "description": "Dedola, G. et al. (2023, October 12). ToddyCat: Keep calm and check logs. Retrieved January 3, 2024."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 North Korean Trojan: TAINTEDSCRIBE. Retrieved March 5, 2021.",
        "description": "Lancaster, T., Cortes, J. (2018, January 29). VERMIN: Quasar RAT and Custom Malware Used In Ukraine. Retrieved July 5, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMAIL. Retrieved September 29, 2020.",
        "description": "Mac Threat Response, Mobile Research Team. (2020, August 13). The XCSSET Malware: Inserts Malicious Code Into Xcode Projects, Performs UXSS Backdoor Planting in Safari, and Leverages Two Zero-day Exploits. Retrieved October 5, 2021."
    },
    {
        "uniqueId": "2017",
        "target": "2017 Sofacy Activity. Retrieved November 27, 2018.",
        "description": "ESET. (2018, November 20). Sednit: What\u2019s going on with Zebrocy?. Retrieved February 12, 2019."
    },
    {
        "uniqueId": "T1568",
        "target": "T1568 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1568",
        "target": "T1568 Sub-techniques:  T1568.001, T1568.002, T1568.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "10",
        "target": "10 March 2020",
        "description": "Last Modified: 11 March 2022"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 has used Dynamic DNS providers for their malware C2 infrastructure.[4]"
    },
    {
        "uniqueId": "S1087",
        "target": "S1087 AsyncRAT",
        "description": "AsyncRAT can be configured to use dynamic DNS.[5]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal has used a dynamic DNS service for C2.[6]"
    },
    {
        "uniqueId": "G1002",
        "target": "G1002 BITTER",
        "description": "BITTER has used DDNS for C2 communications.[7]"
    },
    {
        "uniqueId": "C0026",
        "target": "C0026 C0026",
        "description": "During C0026, the threat actors re-registered a ClouDNS dynamic DNS subdomain which was previously used by ANDROMEDA.[8]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has incorporated dynamic DNS domains in its infrastructure.[9]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can use dynamic DNS domain names in C2.[10]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has forged POST strings with a random choice from a list of possibilities including \"forum\", \"php\", \"view\", etc. while making connection with the C2, hindering detection efforts.[11]"
    },
    {
        "uniqueId": "S0034",
        "target": "S0034 NETEAGLE",
        "description": "NETEAGLE can use HTTP to download resources that contain an IP address and port number pair to connect to for C2.[12]"
    },
    {
        "uniqueId": "C0002",
        "target": "C0002 Night Dragon",
        "description": "During Night Dragon, threat actors used dynamic DNS services for C2.[13]"
    },
    {
        "uniqueId": "C0016",
        "target": "C0016 Operation Dust Storm",
        "description": "For Operation Dust Storm, the threat actors used dynamic DNS domains from a variety of free providers, including No-IP, Oray, and 3322.[14]"
    },
    {
        "uniqueId": "C0005",
        "target": "C0005 Operation Spalax",
        "description": "For Operation Spalax, the threat actors used dynamic DNS services, including Duck DNS and DNS Exit, as part of their C2 infrastructure.[15]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM has resolved Pony C2 server IP addresses by either converting Bitcoin blockchain transaction data to specific octets, or accessing IP addresses directly within the Namecoin blockchain.[16][17]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2.[18]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST dynamically resolved C2 infrastructure for randomly-generated subdomains within a parent domain.[19]"
    },
    {
        "uniqueId": "G1018",
        "target": "G1018 TA2541",
        "description": "TA2541 has used dynamic DNS services for C2 infrastructure.[20]"
    },
    {
        "uniqueId": "S0671",
        "target": "S0671 Tomiris",
        "description": "Tomiris has connected to a signalization server that provides a URL and port, and then Tomiris sends a GET request to that URL to establish C2.[21]"
    },
    {
        "uniqueId": "G0134",
        "target": "G0134 Transparent Tribe",
        "description": "Transparent Tribe has used dynamic DNS services to set up C2.[22]"
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Malware researchers can reverse engineer malware variants that use dynamic resolution and determine future C2 infrastructure that the malware will attempt to contact, but this is a time and resource intensive effort.[23][24]"
    },
    {
        "uniqueId": "M1021",
        "target": "M1021 Restrict Web-Based Content",
        "description": "In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "Dela Paz, R. (2016, October 21). BITTER: a targeted attack against Pakistan. Retrieved June 1, 2022."
    },
    {
        "uniqueId": "APT30",
        "target": "APT30 AND THE MECHANICS OF A LONG-RUNNING CYBER ESPIONAGE OPERATION. Retrieved May 1, 2015.",
        "description": "McAfee\u00ae Foundstone\u00ae Professional Services and McAfee Labs\u2122. (2011, February 10). Global Energy Cyberattacks: \u201cNight Dragon\u201d. Retrieved February 19, 2018."
    },
    {
        "uniqueId": "T1105",
        "target": "T1105 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1105",
        "target": "T1105 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 11 April 2024"
    },
    {
        "uniqueId": "C0028",
        "target": "C0028 2015 Ukraine Electric Power Attack",
        "description": "During the 2015 Ukraine Electric Power Attack, Sandworm Team pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. [5]"
    },
    {
        "uniqueId": "S0469",
        "target": "S0469 ABK",
        "description": "ABK has the ability to download files from C2.[6]"
    },
    {
        "uniqueId": "S1028",
        "target": "S1028 Action RAT",
        "description": "Action RAT has the ability to download additional payloads onto an infected machine.[7]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can download additional files for execution on the victim\u2019s machine.[8][9]"
    },
    {
        "uniqueId": "S0092",
        "target": "S0092 Agent.btz",
        "description": "Agent.btz attempts to download an encrypted binary from a specified domain.[10]"
    },
    {
        "uniqueId": "G0130",
        "target": "G0130 Ajax Security Team",
        "description": "Ajax Security Team has used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system.[11]"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey can download and execute files to further infect a host machine with additional malware.[12]"
    },
    {
        "uniqueId": "S0504",
        "target": "S0504 Anchor",
        "description": "Anchor can download additional payloads.[13][14]"
    },
    {
        "uniqueId": "G0138",
        "target": "G0138 Andariel",
        "description": "Andariel has downloaded additional tools and malware onto compromised hosts.[15]"
    },
    {
        "uniqueId": "S1074",
        "target": "S1074 ANDROMEDA",
        "description": "ANDROMEDA can download additional payloads from C2.[16]"
    },
    {
        "uniqueId": "G0099",
        "target": "G0099 APT-C-36",
        "description": "APT-C-36 has downloaded binary data from a specified domain after the malicious document is opened.[17]"
    },
    {
        "uniqueId": "G0026",
        "target": "G0026 APT18",
        "description": "APT18 can upload a file to the victim\u2019s machine.[18]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.[19][20][21][22][23]"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 has downloaded additional tools and malware onto compromised networks.[24][25][26][27]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "APT3 has a tool that can copy files to remote machines.[28]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors.[29]"
    },
    {
        "uniqueId": "G0064",
        "target": "G0064 APT33",
        "description": "APT33 has downloaded additional files and programs from its C2 server.[30][31]"
    },
    {
        "uniqueId": "G0067",
        "target": "G0067 APT37",
        "description": "APT37 has downloaded second stage malware from compromised websites.[32][33][34][35]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 used a backdoor, NESTEGG, that has the capability to download and upload files to and from a victim\u2019s machine.[36]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 has downloaded tools to compromised hosts.[37][38]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 used certutil to download additional files.[39][40][41] APT41 downloaded post-exploitation tools such as Cobalt Strike via command shell following initial access.[42]"
    },
    {
        "uniqueId": "G0143",
        "target": "G0143 Aquatic Panda",
        "description": "Aquatic Panda has downloaded additional malware onto compromised hosts.[43]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to download additional payloads from C2.[44]"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth uses certutil and BITSAdmin to download additional malware. [45][46][47]"
    },
    {
        "uniqueId": "S1087",
        "target": "S1087 AsyncRAT",
        "description": "AsyncRAT has the ability to download files over SFTP.[48]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor can download additional plugins, updates and other files. [49]"
    },
    {
        "uniqueId": "S0347",
        "target": "S0347 AuditCred",
        "description": "AuditCred can download files and additional malware.[50]"
    },
    {
        "uniqueId": "S0473",
        "target": "S0473 Avenger",
        "description": "Avenger has the ability to download files from C2 to a compromised host.[6]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can download and execute additional files. Azorult has also downloaded a ransomware payload called Hermes.[51][52]"
    },
    {
        "uniqueId": "S0414",
        "target": "S0414 BabyShark",
        "description": "BabyShark has downloaded additional files from the C2.[53][54]"
    },
    {
        "uniqueId": "S0475",
        "target": "S0475 BackConfig",
        "description": "BackConfig can download and execute additional payloads on a compromised host.[55]"
    },
    {
        "uniqueId": "S0093",
        "target": "S0093 Backdoor.Oldrea",
        "description": "Backdoor.Oldrea can download additional modules from C2.[56]"
    },
    {
        "uniqueId": "G0135",
        "target": "G0135 BackdoorDiplomacy",
        "description": "BackdoorDiplomacy has downloaded additional files and tools onto a compromised host.[57]"
    },
    {
        "uniqueId": "S0642",
        "target": "S0642 BADFLICK",
        "description": "BADFLICK has download files from its C2 server.[58]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH has the ability to load a second stage malicious DLL file onto a compromised machine.[59]"
    },
    {
        "uniqueId": "S0128",
        "target": "S0128 BADNEWS",
        "description": "BADNEWS is capable of downloading additional files through C2 channels, including a new version of itself.[60][61][62]"
    },
    {
        "uniqueId": "S0337",
        "target": "S0337 BadPatch",
        "description": "BadPatch can download and execute or update malware.[63]"
    },
    {
        "uniqueId": "S0234",
        "target": "S0234 Bandook",
        "description": "Bandook can download files to the system.[64]"
    },
    {
        "uniqueId": "S0239",
        "target": "S0239 Bankshot",
        "description": "Bankshot uploads files and secondary payloads to the victim's machine.[65]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can download and deploy additional payloads, including ransomware and post-exploitation frameworks such as Cobalt Strike.[66][67][68][69]"
    },
    {
        "uniqueId": "S0470",
        "target": "S0470 BBK",
        "description": "BBK has the ability to download files from C2 to the infected host.[6]"
    },
    {
        "uniqueId": "S0574",
        "target": "S0574 BendyBear",
        "description": "BendyBear is designed to download an implant from a C2 server.[70]"
    },
    {
        "uniqueId": "S0017",
        "target": "S0017 BISCUIT",
        "description": "BISCUIT has a command to download a file from the C2 server.[71]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal has the capability to download files to execute on the victim\u2019s machine.[72][73][74]"
    },
    {
        "uniqueId": "S0190",
        "target": "S0190 BITSAdmin",
        "description": "BITSAdmin can be used to create BITS Jobs to upload and/or download files.[75]"
    },
    {
        "uniqueId": "G1002",
        "target": "G1002 BITTER",
        "description": "BITTER has downloaded additional malware and tools onto a compromised host.[76][77]"
    },
    {
        "uniqueId": "S0564",
        "target": "S0564 BlackMould",
        "description": "BlackMould has the ability to download files to the victim's machine.[78]"
    },
    {
        "uniqueId": "S0520",
        "target": "S0520 BLINDINGCAN",
        "description": "BLINDINGCAN has downloaded files to a victim machine.[79]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT can download additional files onto the host.[34]"
    },
    {
        "uniqueId": "S0486",
        "target": "S0486 Bonadan",
        "description": "Bonadan can download additional modules from the C2 server.[80]"
    },
    {
        "uniqueId": "S0360",
        "target": "S0360 BONDUPDATER",
        "description": "BONDUPDATER can download or upload files from its C2 server.[81]"
    },
    {
        "uniqueId": "S0635",
        "target": "S0635 BoomBox",
        "description": "BoomBox has the ability to download next stage malware components to a compromised system.[82]"
    },
    {
        "uniqueId": "S0651",
        "target": "S0651 BoxCaon",
        "description": "BoxCaon can download files.[83]"
    },
    {
        "uniqueId": "S0204",
        "target": "S0204 Briba",
        "description": "Briba downloads files onto infected hosts.[84]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has used various tools to download files, including DGet (a similar tool to wget).[85]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 can download files to compromised hosts.[86]"
    },
    {
        "uniqueId": "S0471",
        "target": "S0471 build_downer",
        "description": "build_downer has the ability to download files from C2 to the infected host.[6]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can download and execute additional payloads including through the use of a Dex command.[87][88][89]"
    },
    {
        "uniqueId": "S0482",
        "target": "S0482 Bundlore",
        "description": "Bundlore can download and execute new versions of itself.[90]"
    },
    {
        "uniqueId": "S1118",
        "target": "S1118 BUSHWALK",
        "description": "BUSHWALK can write malicious payloads sent through a web request\u2019s command parameter.[91][92]"
    },
    {
        "uniqueId": "C0010",
        "target": "C0010 C0010",
        "description": "During C0010, UNC3890 actors downloaded tools and malware onto a compromised host.[93]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors downloaded additional tools and files onto a compromised network.[94]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 downloaded malicious payloads onto compromised systems.[95]"
    },
    {
        "uniqueId": "C0018",
        "target": "C0018 C0018",
        "description": "During C0018, the threat actors downloaded additional tools, such as Mimikatz and Sliver, as well as Cobalt Strike and AvosLocker ransomware onto the victim network.[96][97]"
    },
    {
        "uniqueId": "C0021",
        "target": "C0021 C0021",
        "description": "During C0021, the threat actors downloaded additional tools and files onto victim machines.[98][99]"
    },
    {
        "uniqueId": "C0026",
        "target": "C0026 C0026",
        "description": "During C0026, the threat actors downloaded malicious payloads onto select compromised hosts.[16]"
    },
    {
        "uniqueId": "C0027",
        "target": "C0027 C0027",
        "description": "During C0027, Scattered Spider downloaded tools using victim organization systems.[100]"
    },
    {
        "uniqueId": "S0274",
        "target": "S0274 Calisto",
        "description": "Calisto has the capability to upload and download files to the victim's machine.[101]"
    },
    {
        "uniqueId": "S0077",
        "target": "S0077 CallMe",
        "description": "CallMe has the capability to download a file to the victim from the C2 server.[102]"
    },
    {
        "uniqueId": "S0351",
        "target": "S0351 Cannon",
        "description": "Cannon can download a payload for execution.[103]"
    },
    {
        "uniqueId": "S0484",
        "target": "S0484 Carberp",
        "description": "Carberp can download and execute new plugins from the C2 server. [104][105]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT can download and execute additional payloads.[106]"
    },
    {
        "uniqueId": "S0465",
        "target": "S0465 CARROTBALL",
        "description": "CARROTBALL has the ability to download and install a remote payload.[107]"
    },
    {
        "uniqueId": "S0462",
        "target": "S0462 CARROTBAT",
        "description": "CARROTBAT has the ability to download and execute a remote file via certutil.[108]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell has a module to download and upload files to the system.[109]"
    },
    {
        "uniqueId": "S0160",
        "target": "S0160 certutil",
        "description": "certutil can be used to download files from a given URL.[110][111]"
    },
    {
        "uniqueId": "S0631",
        "target": "S0631 Chaes",
        "description": "Chaes can download additional files onto an infected machine.[112]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower has the ability to download additional modules to a compromised host.[113]"
    },
    {
        "uniqueId": "S0144",
        "target": "S0144 ChChes",
        "description": "ChChes is capable of downloading files, including additional modules.[114][115][116]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has remotely copied tools and malware onto targeted systems.[117]"
    },
    {
        "uniqueId": "S0020",
        "target": "S0020 China Chopper",
        "description": "China Chopper's server component can download remote files.[118][119][120][121][122]"
    },
    {
        "uniqueId": "S0023",
        "target": "S0023 CHOPSTICK",
        "description": "CHOPSTICK is capable of performing remote file transmission.[123]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme can download its code from C2.[124]"
    },
    {
        "uniqueId": "G1021",
        "target": "G1021 Cinnamon Tempest",
        "description": "Cinnamon Tempest has downloaded files, including Cobalt Strike, to compromised hosts.[125]"
    },
    {
        "uniqueId": "S0054",
        "target": "S0054 CloudDuke",
        "description": "CloudDuke downloads and executes additional malware from either a Web address or a Microsoft OneDrive account.[26]"
    },
    {
        "uniqueId": "S0106",
        "target": "S0106 cmd",
        "description": "cmd can be used to copy files to/from a remotely connected external system.[126]"
    },
    {
        "uniqueId": "G0080",
        "target": "G0080 Cobalt Group",
        "description": "Cobalt Group has used public sites such as github.com and sendspace.com to upload files and then download them to victim computers.[127][3] The group's JavaScript backdoor is also capable of downloading files.[128]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can deliver additional payloads to victim machines.[129][130]"
    },
    {
        "uniqueId": "S0369",
        "target": "S0369 CoinTicker",
        "description": "CoinTicker executes a Python script to download its second stage.[131]"
    },
    {
        "uniqueId": "S0608",
        "target": "S0608 Conficker",
        "description": "Conficker downloads an HTTP server to the infected machine.[132]"
    },
    {
        "uniqueId": "G0142",
        "target": "G0142 Confucius",
        "description": "Confucius has downloaded additional files and payloads onto a compromised host following initial access.[133][134]"
    },
    {
        "uniqueId": "S0492",
        "target": "S0492 CookieMiner",
        "description": "CookieMiner can download additional scripts from a web server.[135]"
    },
    {
        "uniqueId": "S0137",
        "target": "S0137 CORESHELL",
        "description": "CORESHELL downloads another dropper from its C2 server.[136]"
    },
    {
        "uniqueId": "S0614",
        "target": "S0614 CostaBricks",
        "description": "CostaBricks has been used to load SombRAT onto a compromised host.[137]"
    },
    {
        "uniqueId": "C0004",
        "target": "C0004 CostaRicto",
        "description": "During CostaRicto, the threat actors downloaded malware and tools onto a compromised host.[137]"
    },
    {
        "uniqueId": "S1023",
        "target": "S1023 CreepyDrive",
        "description": "CreepyDrive can download files to the compromised host.[138]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson contains a command to retrieve files from its C2 server.[139][140][141]"
    },
    {
        "uniqueId": "S0498",
        "target": "S0498 Cryptoistic",
        "description": "Cryptoistic has the ability to send and receive files.[142]"
    },
    {
        "uniqueId": "S0527",
        "target": "S0527 CSPY Downloader",
        "description": "CSPY Downloader can download additional tools to a compromised host.[143]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba can download files from its C2 server.[144]"
    },
    {
        "uniqueId": "C0029",
        "target": "C0029 Cutting Edge",
        "description": "During Cutting Edge, threat actors leveraged exploits to download remote files to Ivanti Connect Secure VPNs.[145]"
    },
    {
        "uniqueId": "S0687",
        "target": "S0687 Cyclops Blink",
        "description": "Cyclops Blink has the ability to download files to target systems.[146][147]"
    },
    {
        "uniqueId": "S0497",
        "target": "S0497 Dacls",
        "description": "Dacls can download its payload from a C2 server.[142][148]"
    },
    {
        "uniqueId": "S1014",
        "target": "S1014 DanBot",
        "description": "DanBot can download additional files to a targeted system.[149]"
    },
    {
        "uniqueId": "S0334",
        "target": "S0334 DarkComet",
        "description": "DarkComet can load any files onto the infected machine to execute.[150][151]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate retrieves cryptocurrency mining payloads and commands in encrypted traffic from its command and control server.[152] DarkGate uses Windows Batch scripts executing the curl command to retrieve follow-on payloads.[153]"
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel",
        "description": "Darkhotel has used first-stage payloads that download additional malware from C2 servers.[154]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla can download additional packages for keylogging, cryptocurrency mining, and other capabilities; it can also retrieve malicious payloads such as Agent Tesla, AsyncRat, NanoCore, RedLine, Cobalt Strike, and Metasploit.[155]"
    },
    {
        "uniqueId": "S0187",
        "target": "S0187 Daserf",
        "description": "Daserf can download remote files.[156][85]"
    },
    {
        "uniqueId": "S0255",
        "target": "S0255 DDKONG",
        "description": "DDKONG downloads and uploads files on the victim\u2019s machine.[157]"
    },
    {
        "uniqueId": "S0616",
        "target": "S0616 DEATHRANSOM",
        "description": "DEATHRANSOM can download files to a compromised host.[158]"
    },
    {
        "uniqueId": "S0354",
        "target": "S0354 Denis",
        "description": "Denis deploys additional backdoors and hacking tools to the system.[159]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol can receive configuration updates and additional payloads including wscpy.exe from C2.[160]"
    },
    {
        "uniqueId": "S0200",
        "target": "S0200 Dipsind",
        "description": "Dipsind can download remote files.[161]"
    },
    {
        "uniqueId": "S1088",
        "target": "S1088 Disco",
        "description": "Disco can download files to targeted systems via SMB.[162]"
    },
    {
        "uniqueId": "S1021",
        "target": "S1021 DnsSystem",
        "description": "DnsSystem can download files to compromised systems after receiving a command with the string downloaddd.[163]"
    },
    {
        "uniqueId": "S0213",
        "target": "S0213 DOGCALL",
        "description": "DOGCALL can download and execute additional payloads.[164]"
    },
    {
        "uniqueId": "S0600",
        "target": "S0600 Doki",
        "description": "Doki has downloaded scripts from C2.[165]"
    },
    {
        "uniqueId": "S0695",
        "target": "S0695 Donut",
        "description": "Donut can download and execute previously staged shellcode payloads.[166]"
    },
    {
        "uniqueId": "S0472",
        "target": "S0472 down_new",
        "description": "down_new has the ability to download files to the compromised host.[6]"
    },
    {
        "uniqueId": "S0134",
        "target": "S0134 Downdelph",
        "description": "After downloading its main config file, Downdelph downloads multiple payloads from C2 servers.[167]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has copied and installed tools for operations once in the victim environment.[168]"
    },
    {
        "uniqueId": "S0694",
        "target": "S0694 DRATzarus",
        "description": "DRATzarus can deploy additional tools onto an infected machine.[169]"
    },
    {
        "uniqueId": "S0547",
        "target": "S0547 DropBook",
        "description": "DropBook can download and execute additional files.[170][171]"
    },
    {
        "uniqueId": "S0502",
        "target": "S0502 Drovorub",
        "description": "Drovorub can download files to a compromised host.[172]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack\u2019s can download and upload a file to the victim\u2019s computer.[173][174]"
    },
    {
        "uniqueId": "S0024",
        "target": "S0024 Dyre",
        "description": "Dyre has a command to download and executes additional files.[175]"
    },
    {
        "uniqueId": "S0624",
        "target": "S0624 Ecipekac",
        "description": "Ecipekac can download additional payloads to a compromised host.[176]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor has the ability to download files from its C2 server.[177][178]"
    },
    {
        "uniqueId": "G0066",
        "target": "G0066 Elderwood",
        "description": "The Ritsol backdoor trojan used by Elderwood can download files onto a compromised host from a remote location.[179]"
    },
    {
        "uniqueId": "S0081",
        "target": "S0081 Elise",
        "description": "Elise can download additional files from the C2 server for execution.[180]"
    },
    {
        "uniqueId": "G1003",
        "target": "G1003 Ember Bear",
        "description": "Ember Bear has used tools to download malicious code.[181]"
    },
    {
        "uniqueId": "S0082",
        "target": "S0082 Emissary",
        "description": "Emissary has the capability to download files from the C2 server.[182]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can upload and download to and from a victim machine.[183]"
    },
    {
        "uniqueId": "S0404",
        "target": "S0404 esentutl",
        "description": "esentutl can be used to copy files from a given URL.[184]"
    },
    {
        "uniqueId": "S0396",
        "target": "S0396 EvilBunny",
        "description": "EvilBunny has downloaded additional Lua scripts from the C2.[185]"
    },
    {
        "uniqueId": "S0568",
        "target": "S0568 EVILNUM",
        "description": "EVILNUM can download and upload files to the victim's computer.[186][187]"
    },
    {
        "uniqueId": "G0120",
        "target": "G0120 Evilnum",
        "description": "Evilnum can deploy additional components or tools as needed.[186]"
    },
    {
        "uniqueId": "S0401",
        "target": "S0401 Exaramel for Linux",
        "description": "Exaramel for Linux has a command to download a file from and to a remote C2 server.[188][189]"
    },
    {
        "uniqueId": "S0569",
        "target": "S0569 Explosive",
        "description": "Explosive has a function to download a file to the infected system.[190]"
    },
    {
        "uniqueId": "S0171",
        "target": "S0171 Felismus",
        "description": "Felismus can download files from remote servers.[191]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT downloads and uploads files to and from the victim\u2019s machine.[192][193]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has downloaded additional tools and malware to compromised systems.[194][195]"
    },
    {
        "uniqueId": "G0046",
        "target": "G0046 FIN7",
        "description": "FIN7 has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload.[196][197][198]"
    },
    {
        "uniqueId": "G0061",
        "target": "G0061 FIN8",
        "description": "FIN8 has used remote code execution to download subsequent payloads.[199][200]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro can download additional malware from the C2 server.[201]"
    },
    {
        "uniqueId": "S0381",
        "target": "S0381 FlawedAmmyy",
        "description": "FlawedAmmyy can transfer files from C2.[202]"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb can receive additional malicious components from an actor controlled C2 server and execute them on a compromised AD FS server.[203]"
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten",
        "description": "Fox Kitten has downloaded additional tools including PsExec directly to endpoints.[204]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors downloaded files and tools onto a victim machine.[205]"
    },
    {
        "uniqueId": "S0095",
        "target": "S0095 ftp",
        "description": "ftp may be abused by adversaries to transfer tools or files from an external system into a compromised environment.[206][207]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can download additional files onto a compromised host.[208]"
    },
    {
        "uniqueId": "C0007",
        "target": "C0007 FunnyDream",
        "description": "During FunnyDream, the threat actors downloaded additional droppers and backdoors onto a compromised system.[208]"
    },
    {
        "uniqueId": "S0628",
        "target": "S0628 FYAnti",
        "description": "FYAnti can download additional payloads to a compromised host.[176]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM dropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, and HTRAN.[209][78]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has downloaded additional malware and tools onto a compromised host.[210][211][212][213]"
    },
    {
        "uniqueId": "S0168",
        "target": "S0168 Gazer",
        "description": "Gazer can execute a task to download a file.[214][215]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can download additional plug-ins to a compromised host.[124]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT can download files to the victim\u2019s machine.[216][217]"
    },
    {
        "uniqueId": "S0249",
        "target": "S0249 Gold Dragon",
        "description": "Gold Dragon can download additional components from the C2 server.[218]"
    },
    {
        "uniqueId": "S0493",
        "target": "S0493 GoldenSpy",
        "description": "GoldenSpy constantly attempts to download and execute files from the remote C2, including GoldenSpy itself if not found on the system.[219]"
    },
    {
        "uniqueId": "S0588",
        "target": "S0588 GoldMax",
        "description": "GoldMax can download and execute additional files.[220][221]"
    },
    {
        "uniqueId": "G0078",
        "target": "G0078 Gorgon Group",
        "description": "Gorgon Group malware can download additional files from C2 servers.[222]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can download its second stage from a hardcoded URL within the loader's code.[223][224]"
    },
    {
        "uniqueId": "S0342",
        "target": "S0342 GreyEnergy",
        "description": "GreyEnergy can download additional modules and payloads.[193]"
    },
    {
        "uniqueId": "S0632",
        "target": "S0632 GrimAgent",
        "description": "GrimAgent has the ability to download and execute additional payloads.[225]"
    },
    {
        "uniqueId": "S0561",
        "target": "S0561 GuLoader",
        "description": "GuLoader can download further malware for execution on the victim's machine.[226]"
    },
    {
        "uniqueId": "S0132",
        "target": "S0132 H1N1",
        "description": "H1N1 contains a command to download and execute a file from a remotely hosted URL using WinINet HTTP requests.[227]"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host.[228][121]"
    },
    {
        "uniqueId": "S0499",
        "target": "S0499 Hancitor",
        "description": "Hancitor has the ability to download additional files from C2.[229]"
    },
    {
        "uniqueId": "S0214",
        "target": "S0214 HAPPYWORK",
        "description": "can download and execute a second-stage payload.[32]"
    },
    {
        "uniqueId": "S0170",
        "target": "S0170 Helminth",
        "description": "Helminth can download additional files.[230]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has downloaded additional payloads and malicious scripts onto a compromised host.[231]"
    },
    {
        "uniqueId": "S0087",
        "target": "S0087 Hi-Zor",
        "description": "Hi-Zor has the ability to upload and download files from its C2 server.[232]"
    },
    {
        "uniqueId": "S0394",
        "target": "S0394 HiddenWasp",
        "description": "HiddenWasp downloads a tar compressed archive from a download server to the system.[233]"
    },
    {
        "uniqueId": "S0009",
        "target": "S0009 Hikit",
        "description": "Hikit has the ability to download files to a compromised host.[234]"
    },
    {
        "uniqueId": "S0601",
        "target": "S0601 Hildegard",
        "description": "Hildegard has downloaded additional scripts that build and run Monero cryptocurrency miners.[235]"
    },
    {
        "uniqueId": "S0376",
        "target": "S0376 HOPLIGHT",
        "description": "HOPLIGHT has the ability to connect to a remote host in order to upload and download files.[236]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to upload a file from the command and control (C2) server to the victim machine.[237]"
    },
    {
        "uniqueId": "S0070",
        "target": "S0070 HTTPBrowser",
        "description": "HTTPBrowser is capable of writing a file to the compromised system from the C2 server.[238]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can download files and additional malware components.[239][240]"
    },
    {
        "uniqueId": "S0398",
        "target": "S0398 HyperBro",
        "description": "HyperBro has the ability to download additional files.[241]"
    },
    {
        "uniqueId": "S0483",
        "target": "S0483 IcedID",
        "description": "IcedID has the ability to download additional modules and a configuration file from C2.[242][243]"
    },
    {
        "uniqueId": "G0136",
        "target": "G0136 IndigoZebra",
        "description": "IndigoZebra has downloaded additional files and tools from its C2 server.[83]"
    },
    {
        "uniqueId": "G0119",
        "target": "G0119 Indrik Spider",
        "description": "Indrik Spider has downloaded additional scripts, malware, and tools onto a compromised host.[244][245]"
    },
    {
        "uniqueId": "S0604",
        "target": "S0604 Industroyer",
        "description": "Industroyer downloads a shellcode payload from a remote C2 server and loads it into memory.[246]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can upload files to the victim's machine for operations.[247][248]"
    },
    {
        "uniqueId": "S0015",
        "target": "S0015 Ixeshe",
        "description": "Ixeshe can download and execute additional files.[249]"
    },
    {
        "uniqueId": "S0528",
        "target": "S0528 Javali",
        "description": "Javali can download payloads from remote C2 servers.[47]"
    },
    {
        "uniqueId": "S0044",
        "target": "S0044 JHUHUGIT",
        "description": "JHUHUGIT can retrieve an additional payload from its C2 server.[250][251] JHUHUGIT has a command to download files to the victim\u2019s machine.[252]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "JPIN can download files and upgrade itself.[161]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can download and execute files.[253][254][255]"
    },
    {
        "uniqueId": "S0648",
        "target": "S0648 JSS Loader",
        "description": "JSS Loader has the ability to download malicious executables to a compromised host.[256]"
    },
    {
        "uniqueId": "S0215",
        "target": "S0215 KARAE",
        "description": "KARAE can upload and download files, including second-stage malware.[32]"
    },
    {
        "uniqueId": "S0088",
        "target": "S0088 Kasidet",
        "description": "Kasidet has the ability to download and execute additional files.[257]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar downloads additional plug-ins to load on the victim\u2019s machine, including the ability to upgrade and replace its own binary.[258]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has used tools to download files to compromised machines.[259]"
    },
    {
        "uniqueId": "S0585",
        "target": "S0585 Kerrdown",
        "description": "Kerrdown can download specific payloads to a compromised host based on OS architecture.[260]"
    },
    {
        "uniqueId": "S0487",
        "target": "S0487 Kessel",
        "description": "Kessel can download additional modules from the C2 server.[80]"
    },
    {
        "uniqueId": "S1020",
        "target": "S1020 Kevin",
        "description": "Kevin can download files to the compromised host.[231]"
    },
    {
        "uniqueId": "S0387",
        "target": "S0387 KeyBoy",
        "description": "KeyBoy has a download and upload functionality.[261][262]"
    },
    {
        "uniqueId": "S0271",
        "target": "S0271 KEYMARBLE",
        "description": "KEYMARBLE can upload files to the victim\u2019s machine and can download additional payloads.[263]"
    },
    {
        "uniqueId": "S0526",
        "target": "S0526 KGH_SPY",
        "description": "KGH_SPY has the ability to download and execute code from remote servers.[143]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has downloaded additional scripts, tools, and malware onto victim systems.[40][264]"
    },
    {
        "uniqueId": "S0599",
        "target": "S0599 Kinsing",
        "description": "Kinsing has downloaded additional lateral movement scripts from C2.[265]"
    },
    {
        "uniqueId": "S0437",
        "target": "S0437 Kivars",
        "description": "Kivars has the ability to download and execute files.[266]"
    },
    {
        "uniqueId": "S0250",
        "target": "S0250 Koadic",
        "description": "Koadic can download additional files and tools.[267][268]"
    },
    {
        "uniqueId": "S0669",
        "target": "S0669 KOCTOPUS",
        "description": "KOCTOPUS has executed a PowerShell command to download a file to the system.[268]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI can download files and execute them on the victim\u2019s machine.[269][270]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs downloads additional files from C2 servers.[271]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has downloaded files, malware, and tools from its C2 onto a compromised host.[272][273][274][142][148][275][276][277][278][279]"
    },
    {
        "uniqueId": "G0140",
        "target": "G0140 LazyScripter",
        "description": "LazyScripter had downloaded additional tools to a compromised host.[268]"
    },
    {
        "uniqueId": "G0065",
        "target": "G0065 Leviathan",
        "description": "Leviathan has downloaded additional scripts and files from adversary-controlled servers.[280][118]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron has the ability to download and execute additional files.[281]"
    },
    {
        "uniqueId": "S0211",
        "target": "S0211 Linfo",
        "description": "Linfo creates a backdoor through which remote attackers can download files onto compromised hosts.[282]"
    },
    {
        "uniqueId": "S0513",
        "target": "S0513 LiteDuke",
        "description": "LiteDuke has the ability to download files.[283]"
    },
    {
        "uniqueId": "S0680",
        "target": "S0680 LitePower",
        "description": "LitePower has the ability to download payloads containing system commands to a compromised host.[284]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar can download additional plugins, files, and tools.[285]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot downloaded several staged items onto the victim's machine.[286]"
    },
    {
        "uniqueId": "S0451",
        "target": "S0451 LoudMiner",
        "description": "LoudMiner used SCP to update the miner from the C2.[287]"
    },
    {
        "uniqueId": "S0042",
        "target": "S0042 LOWBALL",
        "description": "LOWBALL uses the Dropbox API to request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the LOWBALL malware.[288]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can download and execute a replica of itself using certutil.[289]"
    },
    {
        "uniqueId": "G1014",
        "target": "G1014 LuminousMoth",
        "description": "LuminousMoth has downloaded additional malware and tools onto a compromised host.[290][291]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete can download additional files for execution on the victim\u2019s machine.[292]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa has downloaded additional files, including an exploit for used privilege escalation.[293][294]"
    },
    {
        "uniqueId": "S1048",
        "target": "S1048 macOS.OSAMiner",
        "description": "macOS.OSAMiner has used curl to download a Stripped Payloads from a public facing adversary-controlled webpage."
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can download additional files onto the compromised host.[295]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has downloaded additional code and files from servers onto victims.[296][297][298][299]"
    },
    {
        "uniqueId": "S0652",
        "target": "S0652 MarkiRAT",
        "description": "MarkiRAT can download additional files and tools from its C2 server, including through the use of BITSAdmin.[300]"
    },
    {
        "uniqueId": "S0500",
        "target": "S0500 MCMD",
        "description": "MCMD can upload additional files to a compromised host.[301]"
    },
    {
        "uniqueId": "S0459",
        "target": "S0459 MechaFlounder",
        "description": "MechaFlounder has the ability to upload and download files to and from a compromised host.[302]"
    },
    {
        "uniqueId": "S0530",
        "target": "S0530 Melcoz",
        "description": "Melcoz has the ability to download additional files to a compromised host.[47]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has installed updates and new malware on victims.[303][304]"
    },
    {
        "uniqueId": "G1013",
        "target": "G1013 Metador",
        "description": "Metador has downloaded tools and malware onto a compromised system.[305]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can download files onto compromised systems.[305][295]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo has used MSI files to download additional files to execute.[306][307][308][309]"
    },
    {
        "uniqueId": "S0688",
        "target": "S0688 Meteor",
        "description": "Meteor has the ability to download additional files for execution on the victim's machine.[310]"
    },
    {
        "uniqueId": "S0339",
        "target": "S0339 Micropsia",
        "description": "Micropsia can download and execute an executable from the C2 server.[311][312]"
    },
    {
        "uniqueId": "S1015",
        "target": "S1015 Milan",
        "description": "Milan has received files from C2 and stored them in log folders beginning with the character sequence a9850d2f.[313]"
    },
    {
        "uniqueId": "S0051",
        "target": "S0051 MiniDuke",
        "description": "MiniDuke can download additional encrypted backdoors onto the victim via GIF files.[314][283]"
    },
    {
        "uniqueId": "S0084",
        "target": "S0084 Mis-Type",
        "description": "Mis-Type has downloaded additional malware and files onto a compromised host.[315]"
    },
    {
        "uniqueId": "S0083",
        "target": "S0083 Misdat",
        "description": "Misdat is capable of downloading files from the C2.[315]"
    },
    {
        "uniqueId": "S0080",
        "target": "S0080 Mivast",
        "description": "Mivast has the capability to download and execute .exe files.[316]"
    },
    {
        "uniqueId": "S0079",
        "target": "S0079 MobileOrder",
        "description": "MobileOrder has a command to download a file from the C2 server to the victim mobile device's SD card.[102]"
    },
    {
        "uniqueId": "S0553",
        "target": "S0553 MoleNet",
        "description": "MoleNet can download additional payloads from the C2.[170]"
    },
    {
        "uniqueId": "G0021",
        "target": "G0021 Molerats",
        "description": "Molerats used executables to download malicious files from different sources.[317][318]"
    },
    {
        "uniqueId": "S1026",
        "target": "S1026 Mongall",
        "description": "Mongall can download files to targeted systems.[319]"
    },
    {
        "uniqueId": "S0284",
        "target": "S0284 More_eggs",
        "description": "More_eggs can download and launch additional payloads.[320][321]"
    },
    {
        "uniqueId": "G1009",
        "target": "G1009 Moses Staff",
        "description": "Moses Staff has downloaded and installed web shells to following path C:\\inetpub\\wwwroot\\aspnet_client\\system_web\\IISpool.aspx.[322]"
    },
    {
        "uniqueId": "S0256",
        "target": "S0256 Mosquito",
        "description": "Mosquito can upload and download files to the victim.[323]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used malware that can upload additional files to the victim\u2019s machine.[324][325][326][327]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has downloaded additional executables following the initial infection stage.[328]"
    },
    {
        "uniqueId": "G1020",
        "target": "G1020 Mustard Tempest",
        "description": "Mustard Tempest has deployed secondary payloads and third stage implants to compromised hosts.[329]"
    },
    {
        "uniqueId": "S0228",
        "target": "S0228 NanHaiShu",
        "description": "NanHaiShu can download additional files from URLs.[280]"
    },
    {
        "uniqueId": "S0336",
        "target": "S0336 NanoCore",
        "description": "NanoCore has the capability to download and activate additional modules for execution.[330][331]"
    },
    {
        "uniqueId": "S0247",
        "target": "S0247 NavRAT",
        "description": "NavRAT can download files remotely.[332]"
    },
    {
        "uniqueId": "S0272",
        "target": "S0272 NDiskMonitor",
        "description": "NDiskMonitor can download and execute a file from given URL.[62]"
    },
    {
        "uniqueId": "S0630",
        "target": "S0630 Nebulae",
        "description": "Nebulae can download files from C2.[333]"
    },
    {
        "uniqueId": "S0691",
        "target": "S0691 Neoichor",
        "description": "Neoichor can download additional files onto a compromised host.[259]"
    },
    {
        "uniqueId": "S0210",
        "target": "S0210 Nerex",
        "description": "Nerex creates a backdoor through which remote attackers can download files onto a compromised host.[179]"
    },
    {
        "uniqueId": "S0457",
        "target": "S0457 Netwalker",
        "description": "Operators deploying Netwalker have used psexec and certutil to retrieve the Netwalker payload.[334]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can downloaded payloads from C2 to the compromised host.[335][336]"
    },
    {
        "uniqueId": "S0118",
        "target": "S0118 Nidiran",
        "description": "Nidiran can download and execute files.[337]"
    },
    {
        "uniqueId": "C0002",
        "target": "C0002 Night Dragon",
        "description": "During Night Dragon, threat actors used administrative utilities to deliver Trojan components to remote systems.[338]"
    },
    {
        "uniqueId": "S1090",
        "target": "S1090 NightClub",
        "description": "NightClub can load multiple additional plugins on an infected host.[162]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT can download files to the victim\u2019s machine.[339][340]"
    },
    {
        "uniqueId": "S0353",
        "target": "S0353 NOKKI",
        "description": "NOKKI has downloaded a remote module for execution.[341]"
    },
    {
        "uniqueId": "G0133",
        "target": "G0133 Nomadic Octopus",
        "description": "Nomadic Octopus has used malicious macros to download additional files to the victim's machine.[342]"
    },
    {
        "uniqueId": "S0340",
        "target": "S0340 Octopus",
        "description": "Octopus can download additional files and tools onto the victim\u2019s machine.[343][344][342]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig can download remote files onto victims.[345]"
    },
    {
        "uniqueId": "S0439",
        "target": "S0439 Okrum",
        "description": "Okrum has built-in commands for uploading, downloading, and executing files to the system.[346]"
    },
    {
        "uniqueId": "S0264",
        "target": "S0264 OopsIE",
        "description": "OopsIE can download files from its C2 server to the victim's machine.[347][348]"
    },
    {
        "uniqueId": "C0022",
        "target": "C0022 Operation Dream Job",
        "description": "During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host.[169][349][350]"
    },
    {
        "uniqueId": "C0006",
        "target": "C0006 Operation Honeybee",
        "description": "During Operation Honeybee, the threat actors downloaded additional malware and malicious scripts onto a compromised host.[351]"
    },
    {
        "uniqueId": "C0013",
        "target": "C0013 Operation Sharpshooter",
        "description": "During Operation Sharpshooter, additional payloads were downloaded after a target was infected with a first-stage downloader.[352]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors downloaded additional files to the infected system.[353]"
    },
    {
        "uniqueId": "S0229",
        "target": "S0229 Orz",
        "description": "Orz can download files onto the victim.[280]"
    },
    {
        "uniqueId": "S0402",
        "target": "S0402 OSX/Shlayer",
        "description": "OSX/Shlayer can download payloads, and extract bytes from files. OSX/Shlayer uses the curl -fsL \"$url\" >$tmp_path command to download malicious payloads into a temporary directory.[354][355][356][357]"
    },
    {
        "uniqueId": "S0352",
        "target": "S0352 OSX_OCEANLOTUS.D",
        "description": "OSX_OCEANLOTUS.D has a command to download and execute a file on the victim\u2019s machine.[358][359]"
    },
    {
        "uniqueId": "S1017",
        "target": "S1017 OutSteel",
        "description": "OutSteel can download files from its C2 server.[181]"
    },
    {
        "uniqueId": "S0598",
        "target": "S0598 P.A.S. Webshell",
        "description": "P.A.S. Webshell can upload and download files to and from compromised hosts.[189]"
    },
    {
        "uniqueId": "S0626",
        "target": "S0626 P8RAT",
        "description": "P8RAT can download additional payloads to a target system.[176]"
    },
    {
        "uniqueId": "S0664",
        "target": "S0664 Pandora",
        "description": "Pandora can load additional drivers and files onto a victim machine.[360]"
    },
    {
        "uniqueId": "S0208",
        "target": "S0208 Pasam",
        "description": "Pasam creates a backdoor through which remote attackers can upload files.[361]"
    },
    {
        "uniqueId": "G0040",
        "target": "G0040 Patchwork",
        "description": "Patchwork payloads download additional files from the C2 server.[362][62]"
    },
    {
        "uniqueId": "S0587",
        "target": "S0587 Penquin",
        "description": "Penquin can execute the command code do_download to retrieve remote files from C2.[363]"
    },
    {
        "uniqueId": "S0643",
        "target": "S0643 Peppy",
        "description": "Peppy can download and execute remote files.[139]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon can install additional modules via C2 commands.[364]"
    },
    {
        "uniqueId": "S0124",
        "target": "S0124 Pisloader",
        "description": "Pisloader has a command to upload a file to the victim machine.[365]"
    },
    {
        "uniqueId": "S0254",
        "target": "S0254 PLAINTEE",
        "description": "PLAINTEE has downloaded and executed additional plugins.[157]"
    },
    {
        "uniqueId": "G0068",
        "target": "G0068 PLATINUM",
        "description": "PLATINUM has transferred files using the Intel\u00ae Active Management Technology (AMT) Serial-over-LAN (SOL) channel.[366]"
    },
    {
        "uniqueId": "S0435",
        "target": "S0435 PLEAD",
        "description": "PLEAD has the ability to upload and download files to and from an infected host.[367]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX has a module to download and execute files on the compromised machine.[368][369]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT has the ability to copy files and download/upload files into C2 channels using FTP and HTTPS.[370][371]"
    },
    {
        "uniqueId": "S0012",
        "target": "S0012 PoisonIvy",
        "description": "PoisonIvy creates a backdoor through which remote attackers can upload files.[372]"
    },
    {
        "uniqueId": "S0518",
        "target": "S0518 PolyglotDuke",
        "description": "PolyglotDuke can retrieve payloads from the C2 server.[283]"
    },
    {
        "uniqueId": "S0453",
        "target": "S0453 Pony",
        "description": "Pony can download additional files onto the infected system.[373]"
    },
    {
        "uniqueId": "S0150",
        "target": "S0150 POSHSPY",
        "description": "POSHSPY downloads and executes additional PowerShell code and Windows binaries.[374]"
    },
    {
        "uniqueId": "S0139",
        "target": "S0139 PowerDuke",
        "description": "PowerDuke has a command to download a file.[375]"
    },
    {
        "uniqueId": "S1012",
        "target": "S1012 PowerLess",
        "description": "PowerLess can download additional payloads to a compromised host.[376]"
    },
    {
        "uniqueId": "S0685",
        "target": "S0685 PowerPunch",
        "description": "PowerPunch can download payloads from adversary infrastructure.[213]"
    },
    {
        "uniqueId": "S0145",
        "target": "S0145 POWERSOURCE",
        "description": "POWERSOURCE has been observed being used to download TEXTMATE and the Cobalt Strike Beacon payload onto victims.[377]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS can retrieve and execute additional PowerShell payloads from the C2 server.[378]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER can download or upload files from its C2 server.[345]"
    },
    {
        "uniqueId": "S0613",
        "target": "S0613 PS1",
        "description": "CostaBricks can download additional payloads onto a compromised host.[137]"
    },
    {
        "uniqueId": "S0078",
        "target": "S0078 Psylo",
        "description": "Psylo has a command to download a file to the system from its C2 server.[102]"
    },
    {
        "uniqueId": "S0147",
        "target": "S0147 Pteranodon",
        "description": "Pteranodon can download and execute additional files.[210][379][380]"
    },
    {
        "uniqueId": "S0196",
        "target": "S0196 PUNCHBUGGY",
        "description": "PUNCHBUGGY can download additional files and payloads to compromised hosts.[381][382]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy can upload and download to/from a victim machine.[383]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot has the ability to download additional components and malware.[384][385][386][387][388][389]"
    },
    {
        "uniqueId": "S0262",
        "target": "S0262 QuasarRAT",
        "description": "QuasarRAT can download files to the victim\u2019s machine and execute them.[390][391]"
    },
    {
        "uniqueId": "S0686",
        "target": "S0686 QuietSieve",
        "description": "QuietSieve can download and execute payloads on a target host.[213]"
    },
    {
        "uniqueId": "S0629",
        "target": "S0629 RainyDay",
        "description": "RainyDay can download files to a compromised host.[333]"
    },
    {
        "uniqueId": "G0075",
        "target": "G0075 Rancor",
        "description": "Rancor has downloaded additional malware, including by using certutil.[157]"
    },
    {
        "uniqueId": "S0055",
        "target": "S0055 RARSTONE",
        "description": "RARSTONE downloads its backdoor component from a C2 server and loads it directly into memory.[392]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA uploads and downloads information.[393][394]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession has the ability to drop additional files to an infected machine.[395]"
    },
    {
        "uniqueId": "S0495",
        "target": "S0495 RDAT",
        "description": "RDAT can download files via DNS.[396]"
    },
    {
        "uniqueId": "S0153",
        "target": "S0153 RedLeaves",
        "description": "RedLeaves is capable of downloading a file from a specified URL.[397]"
    },
    {
        "uniqueId": "S0511",
        "target": "S0511 RegDuke",
        "description": "RegDuke can download files from C2.[283]"
    },
    {
        "uniqueId": "S0332",
        "target": "S0332 Remcos",
        "description": "Remcos can upload and download files to and from the victim\u2019s machine.[398]"
    },
    {
        "uniqueId": "S0166",
        "target": "S0166 RemoteCMD",
        "description": "RemoteCMD copies a file over to the remote system before execution.[399]"
    },
    {
        "uniqueId": "S0592",
        "target": "S0592 RemoteUtilities",
        "description": "RemoteUtilities can upload and download files to and from a target machine.[327]"
    },
    {
        "uniqueId": "S0125",
        "target": "S0125 Remsec",
        "description": "Remsec contains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.[400][401]"
    },
    {
        "uniqueId": "S0379",
        "target": "S0379 Revenge RAT",
        "description": "Revenge RAT has the ability to upload and download files.[402]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can download a copy of itself from an attacker controlled IP address to the victim machine.[403][404][405]"
    },
    {
        "uniqueId": "S0258",
        "target": "S0258 RGDoor",
        "description": "RGDoor uploads and downloads files to and from the victim\u2019s machine.[406]"
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke used malware to download additional malicious files to the target system.[407]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin can save a new file to the system from the C2 server.[408][409]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can retrieve additional malicious payloads from its C2 server.[410][411][35][412]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can download additional files.[413][414]"
    },
    {
        "uniqueId": "S0085",
        "target": "S0085 S-Type",
        "description": "S-Type can download additional files onto a compromised host.[315]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot can download additional files onto a compromised host.[181]"
    },
    {
        "uniqueId": "S0074",
        "target": "S0074 Sakula",
        "description": "Sakula has the capability to download files.[415]"
    },
    {
        "uniqueId": "S1099",
        "target": "S1099 Samurai",
        "description": "Samurai has been used to deploy other malware including Ninja.[122]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team has pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.[416][417]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has the ability to upload additional malicious files to a compromised machine.[418]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot has the ability to download a DLL from C2 to a compromised host.[419]"
    },
    {
        "uniqueId": "S0053",
        "target": "S0053 SeaDuke",
        "description": "SeaDuke is capable of uploading and downloading files.[420]"
    },
    {
        "uniqueId": "S0345",
        "target": "S0345 Seasalt",
        "description": "Seasalt has a command to download additional files.[71][71]"
    },
    {
        "uniqueId": "S0185",
        "target": "S0185 SEASHARPEE",
        "description": "SEASHARPEE can download remote files onto victims.[421]"
    },
    {
        "uniqueId": "S0382",
        "target": "S0382 ServHelper",
        "description": "ServHelper may download additional files to execute.[422][423]"
    },
    {
        "uniqueId": "S0639",
        "target": "S0639 Seth-Locker",
        "description": "Seth-Locker has the ability to download and execute files on a compromised host.[424]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has downloaded code from a C2 server.[425]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Shamoon can download an executable to run on the victim.[426]"
    },
    {
        "uniqueId": "S1019",
        "target": "S1019 Shark",
        "description": "Shark can download additional files from its C2 via HTTP or DNS.[313][427]"
    },
    {
        "uniqueId": "S1089",
        "target": "S1089 SharpDisco",
        "description": "SharpDisco has been used to download a Python interpreter to C:\\Users\\Public\\WinTN\\WinTN.exe as well as other plugins from external sources.[162]"
    },
    {
        "uniqueId": "S0546",
        "target": "S0546 SharpStage",
        "description": "SharpStage has the ability to download and execute additional payloads via a DropBox API.[170][171]"
    },
    {
        "uniqueId": "S0450",
        "target": "S0450 SHARPSTATS",
        "description": "SHARPSTATS has the ability to upload and download files.[428]"
    },
    {
        "uniqueId": "S0444",
        "target": "S0444 ShimRat",
        "description": "ShimRat can download additional files.[429]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter had the ability to download additional payloads.[429]"
    },
    {
        "uniqueId": "S0217",
        "target": "S0217 SHUTTERSPEED",
        "description": "SHUTTERSPEED can download and execute an arbitary executable.[32]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot can download and execute a payload onto a compromised system.[220]"
    },
    {
        "uniqueId": "G1008",
        "target": "G1008 SideCopy",
        "description": "SideCopy has delivered trojanized executables via spearphishing emails that contacts actor-controlled servers to download malicious payloads.[7]"
    },
    {
        "uniqueId": "S0610",
        "target": "S0610 SideTwist",
        "description": "SideTwist has the ability to download additional files.[430]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has used LNK files to download remote files to the victim's network.[431][432]"
    },
    {
        "uniqueId": "G0091",
        "target": "G0091 Silence",
        "description": "Silence has downloaded additional modules and malware to victim\u2019s machines.[433]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can load additional files and tools, including Mimikatz.[434]"
    },
    {
        "uniqueId": "S0468",
        "target": "S0468 Skidmap",
        "description": "Skidmap has the ability to download files on an infected host.[435]"
    },
    {
        "uniqueId": "S1110",
        "target": "S1110 SLIGHTPULSE",
        "description": "RAPIDPULSE can transfer files to and from compromised hosts.[436]"
    },
    {
        "uniqueId": "S0633",
        "target": "S0633 Sliver",
        "description": "Sliver can upload files from the C2 server to the victim machine using the upload command.[437]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA has downloaded files onto a victim machine.[438]"
    },
    {
        "uniqueId": "S0218",
        "target": "S0218 SLOWDRIFT",
        "description": "SLOWDRIFT downloads additional payloads.[32]"
    },
    {
        "uniqueId": "S1035",
        "target": "S1035 Small Sieve",
        "description": "Small Sieve has the ability to download files.[439]"
    },
    {
        "uniqueId": "S0226",
        "target": "S0226 Smoke Loader",
        "description": "Smoke Loader downloads a new version of itself once it has installed. It also downloads additional plugins.[440]"
    },
    {
        "uniqueId": "S0649",
        "target": "S0649 SMOKEDHAM",
        "description": "SMOKEDHAM has used Powershell to download UltraVNC and ngrok from third-party file sharing sites.[441]"
    },
    {
        "uniqueId": "S1086",
        "target": "S1086 Snip3",
        "description": "Snip3 can download additional payloads to compromised systems.[442][443]"
    },
    {
        "uniqueId": "S1124",
        "target": "S1124 SocGholish",
        "description": "SocGholish can download additional malware to infected hosts.[444][445]"
    },
    {
        "uniqueId": "S0627",
        "target": "S0627 SodaMaster",
        "description": "SodaMaster has the ability to download additional payloads from C2 to the targeted system.[176]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 downloaded additional malware, such as TEARDROP and Cobalt Strike, onto a compromised host following initial access.[446]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT has the ability to download and execute additional payloads.[137][158][447]"
    },
    {
        "uniqueId": "S0516",
        "target": "S0516 SoreFang",
        "description": "SoreFang can download additional payloads from C2.[448][449]"
    },
    {
        "uniqueId": "S0374",
        "target": "S0374 SpeakUp",
        "description": "SpeakUp downloads and executes additional files from a remote server. [450]"
    },
    {
        "uniqueId": "S0646",
        "target": "S0646 SpicyOmelette",
        "description": "SpicyOmelette can download malicious files from threat actor controlled AWS URL's.[451]"
    },
    {
        "uniqueId": "S0390",
        "target": "S0390 SQLRat",
        "description": "SQLRat can make a direct SQL connection to a Microsoft database controlled by the attackers, retrieve an item from the bindata table, then write and execute the file on disk.[452]"
    },
    {
        "uniqueId": "S1030",
        "target": "S1030 Squirrelwaffle",
        "description": "Squirrelwaffle has downloaded and executed additional encoded payloads.[453][454]"
    },
    {
        "uniqueId": "S1112",
        "target": "S1112 STEADYPULSE",
        "description": "STEADYPULSE can add lines to a Perl script on a targeted server to import additional Perl modules.[455]"
    },
    {
        "uniqueId": "S0380",
        "target": "S0380 StoneDrill",
        "description": "StoneDrill has downloaded and dropped temporary files containing scripts; it additionally has a function to upload files from the victims machine.[456]"
    },
    {
        "uniqueId": "S1034",
        "target": "S1034 StrifeWater",
        "description": "StrifeWater can download updates and auxiliary modules.[457]"
    },
    {
        "uniqueId": "S0491",
        "target": "S0491 StrongPity",
        "description": "StrongPity can download files to specified targets.[458]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST delivered different payloads, including TEARDROP in at least one instance.[446]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady has the ability to download additional tools such as the RedLine Stealer to an infected host.[459]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate has the ability to download files to a compromised host.[360][460]"
    },
    {
        "uniqueId": "G1018",
        "target": "G1018 TA2541",
        "description": "TA2541 has used malicious scripts and macros with the ability to download additional payloads.[461]"
    },
    {
        "uniqueId": "G0092",
        "target": "G0092 TA505",
        "description": "TA505 has downloaded additional malware to execute on victim systems.[462][423][463]"
    },
    {
        "uniqueId": "G0127",
        "target": "G0127 TA551",
        "description": "TA551 has retrieved DLLs and installer binaries for malware execution from C2.[464]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor has downloaded additional files onto a compromised host.[465]"
    },
    {
        "uniqueId": "S0586",
        "target": "S0586 TAINTEDSCRIBE",
        "description": "TAINTEDSCRIBE can download additional modules from its C2 server.[466]"
    },
    {
        "uniqueId": "S0164",
        "target": "S0164 TDTESS",
        "description": "TDTESS has a command to download and execute an additional file.[467]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has the curl and wget commands as well as batch scripts to download new tools.[468][469]"
    },
    {
        "uniqueId": "S0595",
        "target": "S0595 ThiefQuest",
        "description": "ThiefQuest can download and execute payloads in-memory or from disk.[470]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "Threat Group-3390 has downloaded additional malware and tools, including through the use of certutil, onto a compromised host .[238][471]"
    },
    {
        "uniqueId": "S0665",
        "target": "S0665 ThreatNeedle",
        "description": "ThreatNeedle can download additional tools to enable lateral movement.[275]"
    },
    {
        "uniqueId": "S0668",
        "target": "S0668 TinyTurla",
        "description": "TinyTurla has the ability to act as a second-stage dropper used to infect the system with additional malware.[472]"
    },
    {
        "uniqueId": "S0671",
        "target": "S0671 Tomiris",
        "description": "Tomiris can download files and execute them on a victim's system.[473]"
    },
    {
        "uniqueId": "G0131",
        "target": "G0131 Tonto Team",
        "description": "Tonto Team has downloaded malicious DLLs which served as a ShadowPad loader.[474]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot downloads several additional files and saves them to the victim's machine.[475][476]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can upload, download, and execute files on the victim.[477][478]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper has used a delivered trojan to download additional files.[479]"
    },
    {
        "uniqueId": "S0436",
        "target": "S0436 TSCookie",
        "description": "TSCookie has the ability to upload and download files to and from the infected host.[480]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian can download additional files and tools from its C2.[57]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla has used shellcode to download Meterpreter after compromising a victim.[481]"
    },
    {
        "uniqueId": "S0199",
        "target": "S0199 TURNEDUP",
        "description": "TURNEDUP is capable of downloading additional files.[482]"
    },
    {
        "uniqueId": "S0263",
        "target": "S0263 TYPEFRAME",
        "description": "TYPEFRAME can upload and download files to the victim\u2019s machine.[483]"
    },
    {
        "uniqueId": "S0333",
        "target": "S0333 UBoatRAT",
        "description": "UBoatRAT can upload and download files to the victim\u2019s machine.[484]"
    },
    {
        "uniqueId": "S0130",
        "target": "S0130 Unknown Logger",
        "description": "Unknown Logger is capable of downloading remote files.[60]"
    },
    {
        "uniqueId": "S0275",
        "target": "S0275 UPPERCUT",
        "description": "UPPERCUT can download and upload files to and from the victim\u2019s machine.[485]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can use a Put command to write files to an infected machine.[486]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has dropped payload and configuration files to disk. Ursnif has also been used to download and execute additional payloads.[487][488]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has downloaded a variety of modules and payloads to the compromised host, including IcedID and NetSupport Manager RAT-based malware.[489][490]"
    },
    {
        "uniqueId": "S0636",
        "target": "S0636 VaporRage",
        "description": "VaporRage has the ability to download malicious shellcode to compromised systems.[82]"
    },
    {
        "uniqueId": "S0207",
        "target": "S0207 Vasport",
        "description": "Vasport can download files.[491]"
    },
    {
        "uniqueId": "S0442",
        "target": "S0442 VBShower",
        "description": "VBShower has the ability to download VBS files to the target computer.[492]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN can download and upload files to the victim's machine.[493]"
    },
    {
        "uniqueId": "G0123",
        "target": "G0123 Volatile Cedar",
        "description": "Volatile Cedar can deploy additional tools.[109]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer can download remote files and additional payloads to the victim's machine.[494][495][496]"
    },
    {
        "uniqueId": "S0670",
        "target": "S0670 WarzoneRAT",
        "description": "WarzoneRAT can download and execute additional files.[497]"
    },
    {
        "uniqueId": "S0579",
        "target": "S0579 Waterbear",
        "description": "Waterbear can receive and load executables from remote C2 servers.[498]"
    },
    {
        "uniqueId": "S0109",
        "target": "S0109 WEBC2",
        "description": "WEBC2 can download and execute a file.[499]"
    },
    {
        "uniqueId": "S0515",
        "target": "S0515 WellMail",
        "description": "WellMail can receive data and executable scripts from C2.[500]"
    },
    {
        "uniqueId": "S0514",
        "target": "S0514 WellMess",
        "description": "WellMess can write files to a compromised host.[25][501]"
    },
    {
        "uniqueId": "S0689",
        "target": "S0689 WhisperGate",
        "description": "WhisperGate can download additional stages of malware from a Discord CDN channel.[502][503][504][505]"
    },
    {
        "uniqueId": "G0107",
        "target": "G0107 Whitefly",
        "description": "Whitefly has the ability to download additional tools from the C2.[506]"
    },
    {
        "uniqueId": "S0206",
        "target": "S0206 Wiarp",
        "description": "Wiarp creates a backdoor through which remote attackers can download files.[507]"
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift",
        "description": "Windshift has used tools to deploy additional payloads to compromised hosts.[508]"
    },
    {
        "uniqueId": "S0430",
        "target": "S0430 Winnti for Linux",
        "description": "Winnti for Linux has the ability to deploy modules directly from command and control (C2) servers, possibly for remote command execution, file exfiltration, and socks5 proxying on the infected host. [509]"
    },
    {
        "uniqueId": "S0141",
        "target": "S0141 Winnti for Windows",
        "description": "The Winnti for Windows dropper can place malicious payloads on targeted systems.[510]"
    },
    {
        "uniqueId": "G0044",
        "target": "G0044 Winnti Group",
        "description": "Winnti Group has downloaded an auxiliary program named ff.exe to infected machines.[511]"
    },
    {
        "uniqueId": "S1115",
        "target": "S1115 WIREFIRE",
        "description": "WIREFIRE has the ability to download files to compromised devices.[512]"
    },
    {
        "uniqueId": "G0090",
        "target": "G0090 WIRTE",
        "description": "WIRTE has downloaded PowerShell code from the C2 server to be executed.[513]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider can transfer malicious payloads such as ransomware to compromised machines.[514]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT can download files from its C2 server, including the .NET DLLs, WoodySharpExecutor and WoodyPowerSession.[515]"
    },
    {
        "uniqueId": "S0341",
        "target": "S0341 Xbash",
        "description": "Xbash can download additional malicious files from its C2 server.[516]"
    },
    {
        "uniqueId": "S0653",
        "target": "S0653 xCaon",
        "description": "xCaon has a command to download files to the victim's machine.[83]"
    },
    {
        "uniqueId": "S0658",
        "target": "S0658 XCSSET",
        "description": "XCSSET downloads browser specific AppleScript modules using a constructed URL with the curl command, https://\" & domain & \"/agent/scripts/\" & moduleName & \".applescript.[517]"
    },
    {
        "uniqueId": "S0388",
        "target": "S0388 YAHOYAH",
        "description": "YAHOYAH uses HTTP GET requests to download other files that are executed in memory.[518]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy obtains additional code to execute on the victim's machine, including the downloading of a secondary payload.[519][103][520][21]"
    },
    {
        "uniqueId": "S0230",
        "target": "S0230 ZeroT",
        "description": "ZeroT can download additional payloads onto the victim.[521]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda can download additional malware plug-in modules and execute them on the victim\u2019s machine.[522]"
    },
    {
        "uniqueId": "S1114",
        "target": "S1114 ZIPLINE",
        "description": "ZIPLINE can download files to be saved on the compromised system.[512][91]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has used tools to download malicious files to compromised hosts.[523]"
    },
    {
        "uniqueId": "S0086",
        "target": "S0086 ZLib",
        "description": "ZLib has the ability to download files.[315]"
    },
    {
        "uniqueId": "S0672",
        "target": "S0672 Zox",
        "description": "Zox can download files to a compromised machine.[234]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell has a command to transfer files from a remote host.[524]"
    },
    {
        "uniqueId": "S1013",
        "target": "S1013 ZxxZ",
        "description": "ZxxZ can download and execute additional files.[76]"
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[525]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for suspicious activity associated with downloading external content."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for file creation and files transferred into the network"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious."
    },
    {
        "uniqueId": "22",
        "target": "22 Chen, J. et al. (2019, November). Operation ENDTRADE: TICK\u2019s Multi-Stage Backdoors for Attacking Industries and Stealing Classified Data. Retrieved June 9, 2020.",
        "description": "Threat Intelligence Team. (2021, December 2). SideCopy APT: Connecting lures victims, payloads to infrastructure. Retrieved June 13, 2022."
    },
    {
        "uniqueId": "APT28",
        "target": "APT28 Under the Scope. Retrieved February 23, 2017.",
        "description": "Unit 42. (2017, December 15). Unit 42 Playbook Viewer. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "19",
        "target": "19 vaccines. Retrieved September 24, 2020.",
        "description": "F-Secure Labs. (2015, September 17). The Dukes: 7 years of Russian cyberespionage. Retrieved December 10, 2015."
    },
    {
        "uniqueId": "11",
        "target": "11 Identified in Targeted Attacks. Retrieved January 14, 2016.",
        "description": "Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017."
    },
    {
        "uniqueId": "APT37",
        "target": "APT37 (Reaper): The Overlooked North Korean Actor. Retrieved March 1, 2018.",
        "description": "GReAT. (2019, May 13). ScarCruft continues to evolve, introduces Bluetooth harvester. Retrieved June 4, 2019."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Initiates Global Intrusion Campaign Using Multiple Exploits. Retrieved April 28, 2020.",
        "description": "Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021.",
        "description": "Nikita Rostovcev. (2022, August 18). APT41 World Tour 2021 on a tight schedule. Retrieved February 22, 2024."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Accenture iDefense Unit. (2019, March 5). Mudcarp's Focus on Submarine Technologies. Retrieved August 24, 2021.",
        "description": "Savelesky, K., et al. (2019, July 23). ABADBABE 8BADFOOD: Discovering BADHATCH and a Detailed Look at FIN8's Tooling. Retrieved September 8, 2021."
    },
    {
        "uniqueId": "Team9",
        "target": "Team9 malware family. Retrieved December 1, 2020.",
        "description": "Podlosky, A., Hanel, A. et al. (2020, October 16). WIZARD SPIDER Update: Resilient, Reactive and Resolute. Retrieved June 15, 2021."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "Microsoft. (n.d.). BITSAdmin Tool. Retrieved January 12, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 North Korean Remote Access Trojan: BLINDINGCAN. Retrieved August 19, 2020.",
        "description": "Dumont, R., M.L\u00e9veill\u00e9, M., Porcher, H. (2018, December 1). THE DARK SIDE OF THE FORSSHE A landscape of OpenSSH backdoors. Retrieved July 16, 2020."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Venere, G. Neal, C. (2022, June 21). Avos ransomware group expands with new attack arsenal. Retrieved January 11, 2023."
    },
    {
        "uniqueId": "APT29",
        "target": "APT29 Phishing Campaign. Retrieved November 27, 2018.",
        "description": "Parisi, T. (2022, December 2). Not a SIMulation: CrowdStrike Investigations Reveal Intrusion Campaign Targeting Telco and BPO Companies. Retrieved June 30, 2023."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Miller-Osborn, J. and Grunzweig, J.. (2017, February 16). menuPass Returns with New Malware and New Attacks Against Japanese Academics and Organizations. Retrieved March 1, 2017."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 (MenuPass Group): New Tools, Global Campaign Latest Manifestation of Longstanding Threat. Retrieved June 29, 2017.",
        "description": "Cycraft. (2020, April 15). APT Group Chimera - APT Operation Skeleton key Targets Taiwan Semiconductor Vendors. Retrieved August 24, 2020."
    },
    {
        "uniqueId": "27",
        "target": "27 LYCEUM Takes Center Stage in Middle East Campaign Retrieved. 2019/11/19",
        "description": "TrendMicro. (2014, September 03). DARKCOMET. Retrieved November 6, 2018."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.",
        "description": "Department of Justice. (2018, August 01). HOW FIN7 ATTACKED AND STOLE DATA. Retrieved August 24, 2018."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7. Retrieved April 5, 2022.",
        "description": "Kizhakkinan, D., et al. (2016, May 11). Threat Actor Leverages Windows Zero-day Exploit in Payment Card Data Attacks. Retrieved February 12, 2018."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Attack - A Forensic Investigation. Retrieved September 1, 2021.",
        "description": "Hada, H. (2021, December 28). Flagpro The new malware used by BlackTech. Retrieved March 25, 2022."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022.",
        "description": "Ramin Nafisi. (2021, September 27). FoggyWeb: Targeted NOBELIUM malware leads to persistent backdoor. Retrieved October 4, 2021."
    },
    {
        "uniqueId": "19",
        "target": "19 Lure in Campaigns. Retrieved May 19, 2020.",
        "description": "Boutin, J. (2020, June 11). Gamaredon group grows its game. Retrieved June 16, 2020."
    },
    {
        "uniqueId": "3390",
        "target": "3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",
        "description": "Symantec Security Response. (2010, January 18). The Trojan.Hydraq Incident. Retrieved February 20, 2018."
    },
    {
        "uniqueId": "19",
        "target": "19 and FMLA Campaigns used to install new IcedID banking malware. Retrieved July 14, 2020.",
        "description": "Frankoff, S., Hartley, B. (2018, November 14). Big Game Hunting: The Evolution of INDRIK SPIDER From Dridex Wire Fraud to BitPaymer Targeted Ransomware. Retrieved January 6, 2021."
    },
    {
        "uniqueId": "17",
        "target": "17 \u2013 North Korean Trojan: KEYMARBLE. Retrieved August 16, 2018.",
        "description": "An, J and Malhotra, A. (2021, November 10). North Korean attackers use malicious blogs to deliver malware to high-profile South Korean targets. Retrieved December 29, 2021."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022.",
        "description": "Muhammad, I., Unterbrink, H.. (2021, January 6). A Deep Dive into Lokibot Infection Chain. Retrieved August 31, 2021."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "DFIR Report. (2021, November 15). Exchange Exploit Leads to Domain Wide Ransomware. Retrieved January 5, 2023."
    },
    {
        "uniqueId": "10",
        "target": "10 Years. Retrieved July 14, 2022.",
        "description": "Svajcer, V. (2018, July 31). Multiple Cobalt Personality Disorder. Retrieved September 5, 2018."
    },
    {
        "uniqueId": "ITG08",
        "target": "ITG08 Strikes Again. Retrieved September 16, 2019.",
        "description": "Checkpoint Research. (2021, November 15). Uncovering MosesStaff techniques: Ideology over Money. Retrieved August 11, 2022."
    },
    {
        "uniqueId": "11882",
        "target": "11882 Exploit. Retrieved December 20, 2017.",
        "description": "Hromcova, Z. (2019, July). OKRUM AND KETRICAN: AN OVERVIEW OF RECENT KE3CHANG GROUP ACTIVITY. Retrieved May 6, 2020."
    },
    {
        "uniqueId": "20",
        "target": "20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
        "description": "Patrick Wardle. (2020, August 30). Apple Approved Malware malicious code ...now notarized!? #2020. Retrieved September 13, 2021."
    },
    {
        "uniqueId": "TA416",
        "target": "TA416 Increases Operational Tempo Against European Governments as Conflict in Ukraine Escalates. Retrieved March 16, 2022.",
        "description": "Mercer, W, et al. (2020, April 16). PoetRAT: Python RAT uses COVID-19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Spear Phishing Campaign Targets Personnel Involved in SEC Filings. Retrieved March 8, 2017.",
        "description": "Singh, S. et al.. (2018, March 13). Iranian Threat Group Updates Tactics, Techniques and Procedures in Spear Phishing Campaign. Retrieved April 11, 2018."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 IS BACK IN BUSINESS, TARGETING THE HOSPITALITY INDUSTRY. Retrieved June 13, 2019.",
        "description": "Nicolas Verdier. (n.d.). Retrieved January 29, 2018."
    },
    {
        "uniqueId": "APT27",
        "target": "APT27 Turns to Ransomware. Retrieved November 12, 2021.",
        "description": "Falcone, R. (2020, July 22). OilRig Targets Middle Eastern Telecommunications Organization and Adds Novel C2 Channel with Steganography to Its Inventory. Retrieved July 28, 2020."
    },
    {
        "uniqueId": "C2",
        "target": "C2 communications. Retrieved April 17, 2019.",
        "description": "Mercer, W., Rascagneres, P. (2017, April 03). Introducing ROKRAT. Retrieved May 21, 2018."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Schwarz, D. et al. (2019, October 16). TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020."
    },
    {
        "uniqueId": "42",
        "target": "42 Technical Analysis: Seaduke. Retrieved August 3, 2016.",
        "description": "Davis, S. and Caban, D. (2017, December 19). APT34 - New Targeted Attack in the Middle East. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "V3",
        "target": "V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.",
        "description": "Yonathan Klijnsma. (2016, May 17). Mofang: A politically motivated information stealing adversary. Retrieved May 12, 2020."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021.",
        "description": "Hegel, T. (2021, January 13). A Global Perspective of the SideWinder APT. Retrieved January 27, 2021."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "NCSC GCHQ. (2022, January 27). Small Sieve Malware Analysis Report. Retrieved August 22, 2022."
    },
    {
        "uniqueId": "Snip3",
        "target": "Snip3 Crypter, a Highly Evasive RAT Loader. Retrieved September 13, 2023.",
        "description": "Jornet, A. (2021, December 23). Snip3, an investigation into malware. Retrieved September 19, 2023."
    },
    {
        "uniqueId": "2024",
        "target": "2024 Threat Detection Report: SocGholish. Retrieved March 22, 2024.",
        "description": "Secureworks. (n.d.). GOLD PRELUDE . Retrieved March 22, 2024."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 SOREFANG. Retrieved September 29, 2020.",
        "description": "National Cyber Security Centre. (2020, July 16). Advisory: APT29 targets COVID-19 vaccine development. Retrieved September 29, 2020."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Revisited: Inside Astra Panel and SQLRat Malware. Retrieved June 18, 2019.",
        "description": "Kumar, A., Stone-Gross, Brett. (2021, September 28). Squirrelwaffle: New Loader Delivering Cobalt Strike. Retrieved August 9, 2022."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Targets Financial Enterprises Using LOLBins and a New Backdoor Malware. Retrieved May 28, 2019.",
        "description": "Proofpoint Staff. (2018, July 19). TA505 Abusing SettingContent-ms within PDF files to Distribute FlawedAmmyy RAT. Retrieved April 19, 2019."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 North Korean Trojan: TAINTEDSCRIBE. Retrieved March 5, 2021.",
        "description": "ClearSky Cyber Security and Trend Micro. (2017, July). Operation Wilted Tulip: Exposing a cyber espionage apparatus. Retrieved August 21, 2017."
    },
    {
        "uniqueId": "10",
        "target": "10 APT groups. Retrieved May 21, 2021.",
        "description": "Antazo, F. (2016, October 31). TSPY_TRICKLOAD.N. Retrieved September 14, 2018."
    },
    {
        "uniqueId": "APT33",
        "target": "APT33 Targets Aerospace and Energy Sectors and has Ties to Destructive Malware. Retrieved February 15, 2018.",
        "description": "US-CERT. (2018, June 14). MAR-10135536-12 \u2013 North Korean Trojan: TYPEFRAME. Retrieved July 13, 2018."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018.",
        "description": "FBI et al. (2023, May 9). Hunting Russian Intelligence \u201cSnake\u201d Malware. Retrieved June 8, 2023."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "CISA. (2020, July 16). MAR-10296782-3.v1 \u2013 WELLMAIL. Retrieved September 29, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMESS. Retrieved September 24, 2020.",
        "description": "MSTIC. (2022, January 15). Destructive malware targeting Ukrainian organizations. Retrieved March 10, 2022."
    },
    {
        "uniqueId": "S2",
        "target": "S2 Grupo. (2019, April 2). WIRTE Group attacking the Middle East. Retrieved May 24, 2019.",
        "description": "Shilko, J., et al. (2021, October 7). FIN12: The Prolific Ransomware Intrusion Threat Actor That Has Aggressively Pursued Healthcare Targets. Retrieved June 15, 2023."
    },
    {
        "uniqueId": "31",
        "target": "31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021.",
        "description": "Allievi, A., et al. (2014, October 28). Threat Spotlight: Group 72, Opening the ZxShell. Retrieved September 24, 2019."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "RESOURCES"
    },
    {
        "uniqueId": "T1047",
        "target": "T1047 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "5985",
        "target": "5985 when using HTTP and 5986 for HTTPS.[1] [2]",
        "description": "An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as Execution of commands and payloads.[2] For example, wmic.exe can be abused by an adversary to delete shadow copies with the command wmic.exe Shadowcopy Delete (i.e., Inhibit System Recovery).[3]"
    },
    {
        "uniqueId": "T1047",
        "target": "T1047 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 11 April 2024"
    },
    {
        "uniqueId": "C0025",
        "target": "C0025 2016 Ukraine Electric Power Attack",
        "description": "During the 2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys. [5]"
    },
    {
        "uniqueId": "S1028",
        "target": "S1028 Action RAT",
        "description": "Action RAT can use WMI to gather AV products installed on an infected host.[6]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla has used wmi queries to gather information from the system.[7]"
    },
    {
        "uniqueId": "S1129",
        "target": "S1129 Akira",
        "description": "Akira will leverage COM objects accessed through WMI during execution to evade detection.[8]"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 used WMI to steal credentials and execute backdoors at a future time.[9]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 used WMI to deploy their tools on remote machines and to gather information about the Outlook process.[10]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence via PowerSploit.[11][12]"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth uses WMIC to execute payloads. [13]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon uses wmic.exe to delete shadow copies.[14]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can utilize WMI to collect system information, create new processes, and run malicious PowerShell scripts on a compromised machine.[15][16]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can execute a WMI query to gather information about the installed antivirus engine.[17][18]"
    },
    {
        "uniqueId": "S1070",
        "target": "S1070 Black Basta",
        "description": "Black Basta has used WMI to execute files over the network.[19]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat can use wmic.exe to delete shadow copies on compromised networks.[20]"
    },
    {
        "uniqueId": "S0089",
        "target": "S0089 BlackEnergy",
        "description": "A BlackEnergy 2 plug-in uses WMI to gather victim host details.[21]"
    },
    {
        "uniqueId": "G0108",
        "target": "G0108 Blue Mockingbird",
        "description": "Blue Mockingbird has used wmic.exe to set environment variables.[22]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 can use WMI to move laterally.[23]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can use WMI to gather system information and to spawn processes for code injection.[24][25][26]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors used wmic and rundll32 to load Cobalt Strike onto a target host.[27]"
    },
    {
        "uniqueId": "C0018",
        "target": "C0018 C0018",
        "description": "During C0018, the threat actors used WMIC to modify administrative settings on both a local and a remote host, likely as part of the first stages for their lateral movement; they also used WMI Provider Host (wmiprvse.exe) to execute a variety of encoded PowerShell scripts using the DownloadString method.[28][29]"
    },
    {
        "uniqueId": "C0027",
        "target": "C0027 C0027",
        "description": "During C0027, Scattered Spider used Windows Management Instrumentation (WMI) to move laterally via Impacket.[30]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower can use wmic to gather information from a system.[31]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used WMIC to execute remote commands.[32][33]"
    },
    {
        "uniqueId": "G1021",
        "target": "G1021 Cinnamon Tempest",
        "description": "Cinnamon Tempest has used Impacket for lateral movement via WMI.[34][35]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can use WMI to deliver a payload to a remote host.[36][37][27]"
    },
    {
        "uniqueId": "S0488",
        "target": "S0488 CrackMapExec",
        "description": "CrackMapExec can execute remote commands using Windows Management Instrumentation.[38]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla can use WMI queries to obtain system information.[39]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can use WMI to execute commands.[40]"
    },
    {
        "uniqueId": "S0616",
        "target": "S0616 DEATHRANSOM",
        "description": "DEATHRANSOM has the ability to use WMI to delete volume shadow copies.[41]"
    },
    {
        "uniqueId": "G0009",
        "target": "G0009 Deep Panda",
        "description": "The Deep Panda group is known to utilize WMI for lateral movement.[42]"
    },
    {
        "uniqueId": "S0062",
        "target": "S0062 DustySky",
        "description": "The DustySky dropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.[43]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca used a VBA script to execute WMI.[44]"
    },
    {
        "uniqueId": "S0605",
        "target": "S0605 EKANS",
        "description": "EKANS can use Windows Mangement Instrumentation (WMI) calls to execute operations.[45]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has used WMI to execute powershell.exe.[46]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can use WMI to deliver a payload to a remote host.[47]"
    },
    {
        "uniqueId": "S0396",
        "target": "S0396 EvilBunny",
        "description": "EvilBunny has used WMI to gather information about the system.[48]"
    },
    {
        "uniqueId": "S0568",
        "target": "S0568 EVILNUM",
        "description": "EVILNUM has used the Windows Management Instrumentation (WMI) tool to enumerate infected machines.[49]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT uses WMI to query the Windows Registry.[50]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has utilized WMI to execute commands and move laterally on compromised Windows machines.[51][52]"
    },
    {
        "uniqueId": "G0037",
        "target": "G0037 FIN6",
        "description": "FIN6 has used WMI to automate the remote execution of PowerShell scripts.[53]"
    },
    {
        "uniqueId": "G0046",
        "target": "G0046 FIN7",
        "description": "FIN7 has used WMI to install malware on targeted systems.[54]"
    },
    {
        "uniqueId": "G0061",
        "target": "G0061 FIN8",
        "description": "FIN8's malicious spearphishing payloads use WMI to launch malware and spawn cmd.exe execution. FIN8 has also used WMIC and the Impacket suite for lateral movement, as well as during and post compromise cleanup activities.[55][56][57][58]"
    },
    {
        "uniqueId": "S0618",
        "target": "S0618 FIVEHANDS",
        "description": "FIVEHANDS can use WMI to delete files on a target machine.[41][59]"
    },
    {
        "uniqueId": "S0381",
        "target": "S0381 FlawedAmmyy",
        "description": "FlawedAmmyy leverages WMI to enumerate anti-virus on the victim.[60]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors used WMI queries to check if various security applications were running as well as to determine the operating system version.[61]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can use WMI to open a Windows command shell on a remote machine.[62]"
    },
    {
        "uniqueId": "C0007",
        "target": "C0007 FunnyDream",
        "description": "During FunnyDream, the threat actors used wmiexec.vbs to run remote commands.[62]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM used WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.[63]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has used WMI to execute scripts used for discovery.[64]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT collects various information via WMI requests, including CPU information in the Win32_Processor entry (Processor ID, Name, Manufacturer and the clock speed).[65]"
    },
    {
        "uniqueId": "S0151",
        "target": "S0151 HALFBAKED",
        "description": "HALFBAKED can use WMI queries to gather system information.[66]"
    },
    {
        "uniqueId": "S0617",
        "target": "S0617 HELLOKITTY",
        "description": "HELLOKITTY can use WMI to delete volume shadow copies.[41]"
    },
    {
        "uniqueId": "S0698",
        "target": "S0698 HermeticWizard",
        "description": "HermeticWizard can use WMI to create a new process on a remote machine via C:\\windows\\system32\\cmd.exe /c start C:\\windows\\system32\\\\regsvr32.exe /s /iC:\\windows\\<filename>.dll.[67]"
    },
    {
        "uniqueId": "S0376",
        "target": "S0376 HOPLIGHT",
        "description": "HOPLIGHT has used WMI to recompile the Managed Object Format (MOF) files in the WMI repository.[68]"
    },
    {
        "uniqueId": "S0483",
        "target": "S0483 IcedID",
        "description": "IcedID has used WMI to execute binaries.[69]"
    },
    {
        "uniqueId": "S0357",
        "target": "S0357 Impacket",
        "description": "Impacket's wmiexec module can be used to execute commands through WMI.[70]"
    },
    {
        "uniqueId": "G0119",
        "target": "G0119 Indrik Spider",
        "description": "Indrik Spider has used WMIC to execute commands on remote computers.[71]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT uses WMIC to identify anti-virus products installed on the victim\u2019s machine and to obtain firewall details.[72]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar obtains a list of running processes through WMI querying.[73]"
    },
    {
        "uniqueId": "S0250",
        "target": "S0250 Koadic",
        "description": "Koadic can use WMI to execute commands.[74]"
    },
    {
        "uniqueId": "S0156",
        "target": "S0156 KOMPROGO",
        "description": "KOMPROGO is capable of running WMI queries.[75]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.[76][77][78][79]"
    },
    {
        "uniqueId": "G0065",
        "target": "G0065 Leviathan",
        "description": "Leviathan has used WMI for execution.[80]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can use WMI to log into remote machines for propagation.[81]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has used a tool to run cmd /c wmic computersystem get domain for discovery.[82]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has used WMI to attempt to delete the shadow volumes on a machine, and to connect a virtual machine to the network domain of the victim organization's network.[83][84]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.[85][86][87]"
    },
    {
        "uniqueId": "S0688",
        "target": "S0688 Meteor",
        "description": "Meteor can use wmic.exe as part of its effort to delete shadow copies.[88]"
    },
    {
        "uniqueId": "S0339",
        "target": "S0339 Micropsia",
        "description": "Micropsia searches for anti-virus software and firewall products installed on the victim\u2019s machine using WMI.[89][90]"
    },
    {
        "uniqueId": "S0553",
        "target": "S0553 MoleNet",
        "description": "MoleNet can perform WMI commands on the system.[91]"
    },
    {
        "uniqueId": "S0256",
        "target": "S0256 Mosquito",
        "description": "Mosquito's installer uses WMI to search for antivirus display names.[92]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used malware that leveraged WMI for execution and querying host information.[93][94][95][96]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has executed PowerShell scripts via WMI.[97][98]"
    },
    {
        "uniqueId": "G0019",
        "target": "G0019 Naikon",
        "description": "Naikon has used WMIC.exe for lateral movement.[99]"
    },
    {
        "uniqueId": "S0457",
        "target": "S0457 Netwalker",
        "description": "Netwalker can use WMI to delete Shadow Volumes.[100]"
    },
    {
        "uniqueId": "S0368",
        "target": "S0368 NotPetya",
        "description": "NotPetya can use wmic to help propagate itself across a network.[101][102]"
    },
    {
        "uniqueId": "S0340",
        "target": "S0340 Octopus",
        "description": "Octopus has used wmic.exe for local discovery information.[103]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used WMI for execution.[104]"
    },
    {
        "uniqueId": "S0365",
        "target": "S0365 Olympic Destroyer",
        "description": "Olympic Destroyer uses WMI to help propagate itself across a network.[105]"
    },
    {
        "uniqueId": "S0264",
        "target": "S0264 OopsIE",
        "description": "OopsIE uses WMI to perform discovery techniques.[106]"
    },
    {
        "uniqueId": "C0022",
        "target": "C0022 Operation Dream Job",
        "description": "During Operation Dream Job, Lazarus Group used WMIC to executed a remote XSL script.[107]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors has used WMI to execute commands.[108]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 has a number of modules that use WMI to execute tasks.[109]"
    },
    {
        "uniqueId": "S0194",
        "target": "S0194 PowerSploit",
        "description": "PowerSploit's Invoke-WmiCommand CodeExecution module uses WMI to execute and retrieve the output from a PowerShell payload.[110][111]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS can use WMI queries to retrieve data from compromised hosts.[112][94]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER may use WMI when collecting information about a victim.[113]"
    },
    {
        "uniqueId": "S0654",
        "target": "S0654 ProLock",
        "description": "ProLock can use WMIC to execute scripts on targeted hosts.[114]"
    },
    {
        "uniqueId": "S1032",
        "target": "S1032 PyDCrypt",
        "description": "PyDCrypt has attempted to execute with WMIC.[115]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can execute WMI queries to gather information.[116]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA uses WMI to perform process monitoring.[117][118]"
    },
    {
        "uniqueId": "S0375",
        "target": "S0375 Remexi",
        "description": "Remexi executes received commands with wmic.exe (for WMI commands). [119]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can use WMI to monitor for and kill specific processes listed in its configuration file.[120][121]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin uses various WMI queries to check if the sample is running in a sandbox.[122][123]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team has used Impacket\u2019s WMIexec module for remote code execution and VBScript to run WMI queries.[5][124]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic can use WMI to execute PowerShell commands on a compromised machine.[125]"
    },
    {
        "uniqueId": "S0546",
        "target": "S0546 SharpStage",
        "description": "SharpStage can use WMI for execution.[91][126]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot has used WMI to discover network connections and configurations. Sibot has also used the Win32_Process class to execute a malicious DLL.[127]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can use WMI for lateral movement.[128]"
    },
    {
        "uniqueId": "S1086",
        "target": "S1086 Snip3",
        "description": "Snip3 can query the WMI class Win32_ComputerSystem to gather information.[129]"
    },
    {
        "uniqueId": "S1124",
        "target": "S1124 SocGholish",
        "description": "SocGholish has used WMI calls for script execution and system profiling.[130]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 used WMI for the remote execution of files for lateral movement.[131][132]"
    },
    {
        "uniqueId": "G0038",
        "target": "G0038 Stealth Falcon",
        "description": "Stealth Falcon malware gathers system information via Windows Management Instrumentation (WMI).[133]"
    },
    {
        "uniqueId": "S0380",
        "target": "S0380 StoneDrill",
        "description": "StoneDrill has used the WMI command-line (WMIC) utility to run tasks.[134]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet used WMI with an explorer.exe token to execute on a remote share.[135]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST used the WMI query Select * From Win32_SystemDriver to retrieve a driver listing.[136]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can use WMI queries to detect the presence of a virtual machine environment.[137]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can use WMI for execution on a compromised host.[138]"
    },
    {
        "uniqueId": "G1018",
        "target": "G1018 TA2541",
        "description": "TA2541 has used WMI to query targeted systems for security products.[139]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "A Threat Group-3390 tool can use WMI to execute a binary.[140]"
    },
    {
        "uniqueId": "G1022",
        "target": "G1022 ToddyCat",
        "description": "ToddyCat has used WMI to execute scripts for post exploit document collection.[141]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif droppers have used WMI classes to execute PowerShell commands.[142]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak can use wmic process call create in a scheduled task to launch plugins and for execution.[143]"
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon",
        "description": "Volt Typhoon has leveraged WMIC including for execution and remote system discovery.[144][145][146]"
    },
    {
        "uniqueId": "S0366",
        "target": "S0366 WannaCry",
        "description": "WannaCry utilizes wmic to delete shadow copies.[147][148][149]"
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift",
        "description": "Windshift has used WMI to collect information about target machines.[150]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has used WMI and LDAP queries for network discovery and to move laterally. Wizard Spider has also used batch scripts to leverage WMIC to deploy ransomware.[151][152][153][154][155]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "One variant of Zebrocy uses WMI queries to gather information.[156]"
    },
    {
        "uniqueId": "M1040",
        "target": "M1040 Behavior Prevention on Endpoint",
        "description": "On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by WMI commands from running. Note: many legitimate tools and applications utilize WMI for command execution. [157]"
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Use application control configured to block execution of wmic.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the wmic.exe application and to prevent abuse.[158]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Prevent credential overlap across systems of administrator and privileged accounts. [159]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that are used to perform remote behavior"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor network traffic for WMI connections for potential use to remotely edit configuration, start services, or query files. When remote WMI requests are over RPC it connects to a DCOM interface within the RPC group netsvcs. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as Event Tracing for Windows. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected. Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts. More about RPCSS at : rpcss_dcom_interfaces.html"
    },
    {
        "uniqueId": "IRemUnknown2",
        "target": "IRemUnknown2 in different formats- UUID 00000143-0000-0000-c000-000000000046 (decoded)- Hex 43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46 (raw)- ASCII CF (printable text only)",
        "description": "This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic. The transfer syntax is- UUID 8a885d04-1ceb-11c9-9fe8-08002b104860 (decoded)- Hex 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 (raw)- ASCII `]+H`` (printable text only)"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly constructed processes and/or command-lines of \"wmic\". If the command line utility wmic.exe is used on the source host, then it can additionally be detected on an analytic. The command line on the source host is constructed into something like wmic.exe /node:\"\\<hostname>\" process call create \"\\<command line>\". It is possible to also connect via IP address, in which case the string \"\\<hostname>\" would instead look like IP Address. Processes can be created remotely via WMI in a few other ways, such as more direct API access or the built-in utility PowerShell."
    },
    {
        "uniqueId": "10",
        "target": "10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).",
        "description": "Besides executing arbitrary processes, wmic.exe can also be used to executed data stored in NTFS alternate data streams NTFS File Attributes.Looks for instances of wmic.exe as well as the substrings in the command line:- process call create- /node:"
    },
    {
        "uniqueId": "DS0005",
        "target": "DS0005 WMI WMI Creation",
        "description": "Monitor for newly constructed WMI objects that will execute malicious commands and payloads."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021.",
        "description": "Doaty, J., Garrett, P.. (2018, September 10). We\u2019re Seeing a Resurgence of the Demonic Astaroth WMIC Trojan. Retrieved April 17, 2019."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "Cybereason Nocturnus. (2020, July 16). A BAZAR OF TRICKS: FOLLOWING TEAM9\u2019S DEVELOPMENT CYCLES. Retrieved November 18, 2020."
    },
    {
        "uniqueId": "BE2",
        "target": "BE2 extraordinary plugins, Siemens targeting, dev fails. Retrieved March 24, 2016.",
        "description": "Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Cycraft. (2020, April 15). APT Group Chimera - APT Operation Skeleton key Targets Taiwan Semiconductor Vendors. Retrieved August 24, 2020."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "Alperovitch, D. (2014, July 7). Deep in Thought: Chinese Targeting of National Security Think Tanks. Retrieved November 12, 2014."
    },
    {
        "uniqueId": "ITG08",
        "target": "ITG08 Strikes Again. Retrieved September 16, 2019.",
        "description": "eSentire. (2021, July 21). Notorious Cybercrime Gang, FIN7, Lands Malware in Law Firm Using Fake Legal Complaint Against Jack Daniels\u2019 Owner, Brown-Forman Inc.. Retrieved September 20, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Attack - A Forensic Investigation. Retrieved September 1, 2021.",
        "description": "Elovitz, S. & Ahl, I. (2016, August 18). Know Your Enemy: New Financially-Motivated & Spear-Phishing Group. Retrieved February 26, 2018."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Uses Revamped Sardonic Backdoor to Deliver Noberus Ransomware. Retrieved August 9, 2023.",
        "description": "CISA. (2021, May 6). Analysis Report (AR21-126A) FiveHands Ransomware. Retrieved June 7, 2021."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.",
        "description": "ESET. (2022, March 1). IsaacWiper and HermeticWizard: New wiper and worm targetingUkraine. Retrieved April 10, 2022."
    },
    {
        "uniqueId": "19",
        "target": "19 and FMLA Campaigns used to install new IcedID banking malware. Retrieved July 14, 2020.",
        "description": "SecureAuth. (n.d.). Retrieved January 15, 2019."
    },
    {
        "uniqueId": "APT32",
        "target": "APT32 and the Threat to Global Corporations. Retrieved June 18, 2017.",
        "description": "Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "Mundo, A. (2020, March 26). Ransomware Maze. Retrieved May 18, 2020."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 - New Targeted Attack in the Middle East. Retrieved December 20, 2017.",
        "description": "Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019."
    },
    {
        "uniqueId": "11882",
        "target": "11882 Exploit. Retrieved December 20, 2017.",
        "description": "Group IB. (2020, September). LOCK LIKE A PRO. Retrieved September 27, 2021."
    },
    {
        "uniqueId": "C2",
        "target": "C2 communications. Retrieved April 17, 2019.",
        "description": "MSTIC. (2022, October 14). New \u201cPrestige\u201d ransomware impacts organizations in Ukraine and Poland. Retrieved January 19, 2023."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Ilascu, I. (2020, December 14). Hacking group\u2019s new malware abuses Google and Facebook services. Retrieved December 28, 2020."
    },
    {
        "uniqueId": "Snip3",
        "target": "Snip3 Crypter, a Highly Evasive RAT Loader. Retrieved September 13, 2023.",
        "description": "Andrew Northern. (2022, November 22). SocGholish, a very real threat from a very fake update. Retrieved February 13, 2024."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Team. (2020, December 28). Using Microsoft 365 Defender to protect against Solorigate. Retrieved January 7, 2021.",
        "description": "MSTIC, CDOC, 365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021."
    },
    {
        "uniqueId": "22",
        "target": "22 FireEye. (2020, December 13). Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor. Retrieved January 4, 2021.",
        "description": "Schlapfer, Patrick. (2022, June 6). A New Loader Gets Ready. Retrieved December 13, 2022."
    },
    {
        "uniqueId": "T1007",
        "target": "T1007 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1007",
        "target": "T1007 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 03 April 2023"
    },
    {
        "uniqueId": "G0018",
        "target": "G0018 admin@338",
        "description": "admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to obtain information about services: net start >> %temp%\\download[1]"
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1",
        "description": "APT1 used the commands net start and tasklist to get a listing of the services on the system.[2]"
    },
    {
        "uniqueId": "G0143",
        "target": "G0143 Aquatic Panda",
        "description": "Aquatic Panda has attempted to discover services for third party EDR products.[3]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk can enumerate all services running on a compromised host.[4]"
    },
    {
        "uniqueId": "S0127",
        "target": "S0127 BBSRAT",
        "description": "BBSRAT can query service configuration information.[5]"
    },
    {
        "uniqueId": "S0570",
        "target": "S0570 BitPaymer",
        "description": "BitPaymer can enumerate existing Windows services on the host that are configured to run as LocalSystem.[6]"
    },
    {
        "uniqueId": "S1070",
        "target": "S1070 Black Basta",
        "description": "Black Basta can check whether the service name FAX is present.[7]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has used TROJ_GETVERSION to discover system services.[8]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell can obtain a list of the services from a system.[9]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used net start and net use for system service discovery.[10]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can enumerate services on compromised hosts.[11]"
    },
    {
        "uniqueId": "S0244",
        "target": "S0244 Comnie",
        "description": "Comnie runs the command: net start >> %TEMP%\\info.dat on a victim.[12]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba can query service status using QueryServiceStatusEx function.[13]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla can retrieve information about a compromised system's running services.[14]"
    },
    {
        "uniqueId": "S0024",
        "target": "S0024 Dyre",
        "description": "Dyre has the ability to identify running services on a compromised host.[15]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca has used Tasklist to obtain information from a compromised host.[16]"
    },
    {
        "uniqueId": "S0081",
        "target": "S0081 Elise",
        "description": "Elise executes net start after initial communication is made to the remote server.[17]"
    },
    {
        "uniqueId": "S0082",
        "target": "S0082 Emissary",
        "description": "Emissary has the capability to execute the command net start to interact with services.[18]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic uses the tasklist /svc command to list the services on the system.[19]"
    },
    {
        "uniqueId": "S0049",
        "target": "S0049 GeminiDuke",
        "description": "GeminiDuke collects information on programs and services on the victim that are configured to automatically run at startup.[20]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT has a feature to list the available services on the system.[21]"
    },
    {
        "uniqueId": "S0342",
        "target": "S0342 GreyEnergy",
        "description": "GreyEnergy enumerates all Windows services.[22]"
    },
    {
        "uniqueId": "S1027",
        "target": "S1027 Heyoka Backdoor",
        "description": "Heyoka Backdoor can check if it is running as a service on a compromised host.[23]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to retrieve a list of services on the infected host.[24]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can monitor services.[25][26]"
    },
    {
        "uniqueId": "S0398",
        "target": "S0398 HyperBro",
        "description": "HyperBro can list all services and their configurations.[27]"
    },
    {
        "uniqueId": "G0119",
        "target": "G0119 Indrik Spider",
        "description": "Indrik Spider has used the win32_service WMI class to retrieve a list of services from the system.[28]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can obtain running services on the victim.[29]"
    },
    {
        "uniqueId": "S0015",
        "target": "S0015 Ixeshe",
        "description": "Ixeshe can list running services.[30]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "JPIN can list running services.[31]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can list local services.[32]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang performs service discovery using net start commands.[33]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used an instrumentor script to gather the names of all services running on a victim's system.[34]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs collects a list of running services with the command tasklist /svc.[35]"
    },
    {
        "uniqueId": "S0582",
        "target": "S0582 LookBack",
        "description": "LookBack can enumerate services on the victim machine.[36]"
    },
    {
        "uniqueId": "S0039",
        "target": "S0039 Net",
        "description": "The net start command can be used in Net to find information about Windows services.[37]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used sc query on a victim to gather information about services.[38]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the net start command as part of their initial reconnaissance.[39]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors used the tasklist command to search for one of its backdoors.[40]"
    },
    {
        "uniqueId": "G0033",
        "target": "G0033 Poseidon Group",
        "description": "After compromising a victim, Poseidon Group discovers all running services.[41]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 can enumerate service and service permission information.[42]"
    },
    {
        "uniqueId": "S0629",
        "target": "S0629 RainyDay",
        "description": "RainyDay can create and register a service for execution.[43]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA uses tasklist /svc to display running tasks.[44]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can enumerate active services.[45]"
    },
    {
        "uniqueId": "S0085",
        "target": "S0085 S-Type",
        "description": "S-Type runs the command net start on a victim.[46]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has the ability to execute the net start command.[47]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can search for modifiable services that could be used for privilege escalation.[48]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA has the capability to enumerate services.[49]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can enumerate services on a victim machine.[50]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST collected a list of service names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.[51]"
    },
    {
        "uniqueId": "S0018",
        "target": "S0018 Sykipot",
        "description": "Sykipot may use net start to display running services.[52]"
    },
    {
        "uniqueId": "S0242",
        "target": "S0242 SynAck",
        "description": "SynAck enumerates all running services.[53][54]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can collect a list of services on a victim machine.[55]"
    },
    {
        "uniqueId": "S0057",
        "target": "S0057 Tasklist",
        "description": "Tasklist can be used to discover services running on a system.[56]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has searched for services such as Alibaba Cloud Security's aliyun service and BMC Helix Cloud Security's bmc-agent service in order to disable them.[57]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot collects a list of install programs and services on the system\u2019s machine.[58]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover running services and associated processes using the tasklist /svc command.[19]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has gathered information about running services.[59]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer queries the system to identify existing services.[60]"
    },
    {
        "uniqueId": "S0219",
        "target": "S0219 WINERACK",
        "description": "WINERACK can enumerate services.[61]"
    },
    {
        "uniqueId": "S0086",
        "target": "S0086 ZLib",
        "description": "ZLib has the ability to discover and manipulate Windows services.[46]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell can check the services on the system.[62]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls associated with gathering information about registered local system services, such as QueryServiceStatusEx. Other Windows API calls worth monitoring include EnumServicesStatusExA, which can be used to enumerate services in the service control manager database."
    },
    {
        "uniqueId": "4688",
        "target": "4688 - a new process has been created). For event id 4688, depending on Windows version, you might need to enable Administrative Templates\\System\\Audit Process Creation\\Include command line in process creation events group policy to include command line in process creation events.",
        "description": "Analytic 1 - Suspicious Processes"
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Wiley, B. et al. (2021, December 29). OverWatch Exposes AQUATIC PANDA in Possession of Log4Shell Exploit Tools During Hands-on Intrusion Attempt. Retrieved January 18, 2022."
    },
    {
        "uniqueId": "10",
        "target": "10 Years. Retrieved July 14, 2022.",
        "description": "Knight, S.. (2020, April 16). VMware Carbon Black TAU Threat Analysis: The Evolution of Lazarus. Retrieved May 1, 2020."
    },
    {
        "uniqueId": "471",
        "target": "471 Malware Intelligence team. (2020, March 31). REvil Ransomware-as-a-Service \u2013 An analysis of a ransomware affiliate operation. Retrieved August 4, 2020.",
        "description": "Gross, J. (2016, February 23). Operation Dust Storm. Retrieved December 22, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Salvati, M. (2019, August 6). SILENTTRINITY Modules. Retrieved March 24, 2022."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "The BlackBerry Research and Intelligence Team. (2020, November 12). The CostaRicto Campaign: Cyber-Espionage Outsourced. Retrieved May 24, 2021."
    },
    {
        "uniqueId": "APT37",
        "target": "APT37 (Reaper): The Overlooked North Korean Actor. Retrieved March 1, 2018.",
        "description": "Allievi, A., et al. (2014, October 28). Threat Spotlight: Group 72, Opening the ZxShell. Retrieved September 24, 2019."
    },
    {
        "uniqueId": "T1011",
        "target": "T1011 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1011",
        "target": "T1011 Sub-techniques:  T1011.001",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 11 September 2023"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Disable WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel in local computer security settings or by group policy if it is not needed within an environment."
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Prevent the creation of new network adapters where possible.[1][2]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious."
    },
    {
        "uniqueId": "T1562",
        "target": "T1562 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1562",
        "target": "T1562 Sub-techniques:  T1562.001, T1562.002, T1562.003, T1562.004, T1562.006, T1562.007, T1562.008, T1562.009, T1562.010, T1562.011, T1562.012",
        "description": "\u24d8"
    },
    {
        "uniqueId": "21",
        "target": "21 February 2020",
        "description": "Last Modified: 20 October 2023"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has disabled LSA protection on compromised hosts using \"reg\" add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f.[2]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet reduces the integrity level of objects to allow write actions.[3]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Routinely check account role permissions to ensure only expected users and roles have permission to modify defensive tools and settings."
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Use application control where appropriate, especially regarding the execution of tools outside of the organization's security policies (such as rootkit removal tools) that have been abused to impair system defenses. Ensure that only approved security applications are used and running on enterprise systems."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security/logging services."
    },
    {
        "uniqueId": "M1024",
        "target": "M1024 Restrict Registry Permissions",
        "description": "Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering with security/logging services."
    },
    {
        "uniqueId": "M1054",
        "target": "M1054 Software Configuration",
        "description": "Consider implementing policies on internal web servers, such HTTP Strict Transport Security, that enforce the use of HTTPS/network traffic encryption to prevent insecure connections.[4]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services."
    },
    {
        "uniqueId": "DS0025",
        "target": "DS0025 Cloud Service Cloud Service Disable",
        "description": "Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging and DeleteTrail.[5] In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink.[6] In Azure, monitor for az monitor diagnostic-settings delete.[7] Additionally, a sudden loss of a log source may indicate that it has been disabled."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
    },
    {
        "uniqueId": "DS0027",
        "target": "DS0027 Driver Driver Load",
        "description": "Monitor for unusual/suspicious driver activity, especially regarding EDR and drivers associated with security tools as well as those that may be abused to disable security products."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Deletion",
        "description": "Monitor for missing log files hosts and services with known active periods."
    },
    {
        "uniqueId": "DS0018",
        "target": "DS0018 Firewall Firewall Disable",
        "description": "Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for the abnormal execution of API functions associated with system logging."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "DS0013",
        "target": "DS0013 Sensor Health Host Status",
        "description": "Monitor logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Lack of log events may be suspicious."
    },
    {
        "uniqueId": "DS0019",
        "target": "DS0019 Service Service Metadata",
        "description": "Monitor contextual data about a service/daemon, which may include information such as name, service executable, start type that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Modification",
        "description": "Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as the Update User and Change User License events in the Azure AD audit log.[8]"
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Deletion",
        "description": "Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "Nicolas Falliere, Liam O Murchu, Eric Chien 2011, February W32.Stuxnet Dossier (Version 1.4) Retrieved. 2017/09/22"
    },
    {
        "uniqueId": "365",
        "target": "365 to Defend Against UNC2452. Retrieved January 22, 2021.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "TA0002",
        "target": "TA0002 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TACTICS"
    },
    {
        "uniqueId": "TA0002",
        "target": "TA0002 Created: 17 October 2018",
        "description": "Last Modified: 19 July 2019"
    },
    {
        "uniqueId": "14",
        "target": "14 ID Name Description",
        "description": "T1651 Cloud Administration Command Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents."
    },
    {
        "uniqueId": "T1059",
        "target": "T1059 Command and Scripting Interpreter Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.",
        "description": ".001 PowerShell Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems)."
    },
    {
        "uniqueId": "002",
        "target": "002 AppleScript Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.",
        "description": ".003 Windows Command Shell Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH."
    },
    {
        "uniqueId": "004",
        "target": "004 Unix Shell Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.",
        "description": ".005 Visual Basic Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core."
    },
    {
        "uniqueId": "006",
        "target": "006 Python Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.",
        "description": ".007 JavaScript Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser."
    },
    {
        "uniqueId": "008",
        "target": "008 Network Device CLI Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands.",
        "description": ".009 Cloud API Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, PowerShell modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such as Python."
    },
    {
        "uniqueId": "010",
        "target": "010 AutoHotKey & AutoIT Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.",
        "description": "T1609 Container Administration Command Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment."
    },
    {
        "uniqueId": "T1610",
        "target": "T1610 Deploy Container Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to Escape to Host and access other containers running on the node.",
        "description": "T1203 Exploitation for Client Execution Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility."
    },
    {
        "uniqueId": "T1559",
        "target": "T1559 Inter-Process Communication Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern.",
        "description": ".001 Component Object Model Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as Distributed Component Object Model (DCOM)."
    },
    {
        "uniqueId": "002",
        "target": "002 Dynamic Data Exchange Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.",
        "description": ".003 XPC Services Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service C API or the high level NSXPCConnection API in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon."
    },
    {
        "uniqueId": "T1106",
        "target": "T1106 Native API Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.",
        "description": "T1053 Scheduled Task/Job Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system."
    },
    {
        "uniqueId": "002",
        "target": "002 At Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of Scheduled Task's schtasks in Windows environments, using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.",
        "description": ".003 Cron Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code. The cron utility is a time-based job scheduler for Unix-like operating systems. The crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths."
    },
    {
        "uniqueId": "005",
        "target": "005 Scheduled Task Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.",
        "description": ".006 Systemd Timers Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension .timer that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to Cron in Linux environments. Systemd timers may be activated remotely via the systemctl command line utility, which operates over SSH."
    },
    {
        "uniqueId": "007",
        "target": "007 Container Orchestration Job Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.",
        "description": "T1648 Serverless Execution Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers."
    },
    {
        "uniqueId": "T1129",
        "target": "T1129 Shared Modules Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).",
        "description": "T1072 Software Deployment Tools Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager."
    },
    {
        "uniqueId": "T1569",
        "target": "T1569 System Services Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence (Create or Modify System Process), but adversaries can also abuse services for one-time or temporary execution.",
        "description": ".001 Launchctl Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input."
    },
    {
        "uniqueId": "002",
        "target": "002 Service Execution Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.",
        "description": "T1204 User Execution An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of Phishing."
    },
    {
        "uniqueId": "001",
        "target": "001 Malicious Link An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File.",
        "description": ".002 Malicious File An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl."
    },
    {
        "uniqueId": "003",
        "target": "003 Malicious Image Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.",
        "description": "T1047 Windows Management Instrumentation Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems. WMI is an administration feature that provides a uniform environment to access Windows system components."
    },
    {
        "uniqueId": "T1014",
        "target": "T1014 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1014",
        "target": "T1014 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 30 March 2023"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has used a UEFI (Unified Extensible Firmware Interface) rootkit known as LoJax.[5][6]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 deployed rootkits on Linux systems.[7][8]"
    },
    {
        "uniqueId": "S0484",
        "target": "S0484 Carberp",
        "description": "Carberp has used user mode rootkit techniques to remain hidden on the system.[9]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell has a module to use a rootkit on a system.[10]"
    },
    {
        "uniqueId": "S1105",
        "target": "S1105 COATHANGER",
        "description": "COATHANGER hooks or replaces multiple legitimate processes and other functions on victim devices.[11]"
    },
    {
        "uniqueId": "S0502",
        "target": "S0502 Drovorub",
        "description": "Drovorub has used a kernel module rootkit to hide processes, files, executables, and network artifacts from user space view.[12]"
    },
    {
        "uniqueId": "S0377",
        "target": "S0377 Ebury",
        "description": "Ebury has used user mode rootkit techniques to remain hidden on the system.[13]"
    },
    {
        "uniqueId": "S0047",
        "target": "S0047 Hacking Team UEFI Rootkit",
        "description": "Hacking Team UEFI Rootkit is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.[14]"
    },
    {
        "uniqueId": "S0394",
        "target": "S0394 HiddenWasp",
        "description": "HiddenWasp uses a rootkit to hook and implement functions on the system.[15]"
    },
    {
        "uniqueId": "S0135",
        "target": "S0135 HIDEDRV",
        "description": "HIDEDRV is a rootkit that hides certain operating system artifacts.[16]"
    },
    {
        "uniqueId": "S0009",
        "target": "S0009 Hikit",
        "description": "Hikit is a Rootkit that has been used by Axiom.[17] [18]"
    },
    {
        "uniqueId": "S0601",
        "target": "S0601 Hildegard",
        "description": "Hildegard has modified /etc/ld.so.preload to overwrite readdir() and readdir64().[19]"
    },
    {
        "uniqueId": "S0040",
        "target": "S0040 HTRAN",
        "description": "HTRAN can install a rootkit to hide network connections from the host OS.[20]"
    },
    {
        "uniqueId": "S0397",
        "target": "S0397 LoJax",
        "description": "LoJax is a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.[6]"
    },
    {
        "uniqueId": "S0012",
        "target": "S0012 PoisonIvy",
        "description": "PoisonIvy starts a rootkit from a malicious file dropped to disk.[21]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay has included a rootkit to evade defenses.[22]"
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.[23]"
    },
    {
        "uniqueId": "S0468",
        "target": "S0468 Skidmap",
        "description": "Skidmap is a kernel-mode rootkit that has the ability to hook system calls to hide specific files and fake network and CPU-related statistics to make the CPU load of the infected machine always appear low.[24]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet uses a Windows rootkit to mask its binaries and other relevant files.[25]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has used rootkits such as the open-source Diamorphine rootkit and their custom bots to hide cryptocurrency mining activities on the machine.[26] [27]"
    },
    {
        "uniqueId": "S0221",
        "target": "S0221 Umbreon",
        "description": "Umbreon hides from defenders by hooking libc function calls, hiding artifacts that would reveal its presence, such as the user account it creates to provide access and undermining strace, a tool often used to identify malware.[28]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can use its kernel module to prevent its host components from being listed by the targeted system's OS and to mediate requests between user mode and concealed components.[29][30]"
    },
    {
        "uniqueId": "S0670",
        "target": "S0670 WarzoneRAT",
        "description": "WarzoneRAT can include a rootkit to hide processes, files, and startup.[31]"
    },
    {
        "uniqueId": "S0430",
        "target": "S0430 Winnti for Linux",
        "description": "Winnti for Linux has used a modified copy of the open-source userland rootkit Azazel, named libxselinux.so, to hide the malware's operations and network activity.[32]"
    },
    {
        "uniqueId": "G0044",
        "target": "G0044 Winnti Group",
        "description": "Winnti Group used a rootkit to modify typical server functionality.[33]"
    },
    {
        "uniqueId": "S0027",
        "target": "S0027 Zeroaccess",
        "description": "Zeroaccess is a kernel-mode rootkit.[34]"
    },
    {
        "uniqueId": "DS0016",
        "target": "DS0016 Drive Drive Modification",
        "description": "Monitor for changes made to drive letters or mount points of data storage devices for unexpected modifications that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Modification",
        "description": "Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. [2]"
    },
    {
        "uniqueId": "DS0001",
        "target": "DS0001 Firmware Firmware Modification",
        "description": "Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior."
    },
    {
        "uniqueId": "2020",
        "target": "2020 Global Threat Report. Retrieved December 11, 2020.",
        "description": "Giuliani, M., Allievi, A. (2011, February 28). Carberp - a modular information stealing trojan. Retrieved July 15, 2020."
    },
    {
        "uniqueId": "22",
        "target": "22 Fiser, D. Oliveira, A. (n.d.). Tracking the Activities of TeamTNT A Closer Look at a Cloud-Focused Malicious Actor Group. Retrieved September 22, 2021.",
        "description": "Darin Smith. (2022, April 21). TeamTNT targeting AWS, Alibaba. Retrieved August 4, 2022."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "RESOURCES"
    },
    {
        "uniqueId": "2021",
        "target": "2021 The MITRE Corporation (\"MITRE\") respects the privacy of its website users.",
        "description": "This Privacy Policy explains the types of information collected by MITRE ATT&CK\u00ae from website visitors (\"User\") or that you provide to MITRE through other means, such as via e-mail and web forms (collectively \"Site\"), and how MITRE uses, shares, protects, and retains that information. By visiting the Site, you understand and agree to terms outlined in this Privacy Policy."
    },
    {
        "uniqueId": "T1578",
        "target": "T1578 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1578",
        "target": "T1578 Sub-techniques:  T1578.001, T1578.002, T1578.003, T1578.004, T1578.005",
        "description": "\u24d8"
    },
    {
        "uniqueId": "30",
        "target": "30 August 2019",
        "description": "Last Modified: 05 September 2023"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components."
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.[1]"
    },
    {
        "uniqueId": "DS0025",
        "target": "DS0025 Cloud Service Cloud Service Metadata",
        "description": "Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.[2]"
    },
    {
        "uniqueId": "DS0030",
        "target": "DS0030 Instance Instance Creation",
        "description": "The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.[3] [4] Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.[5]"
    },
    {
        "uniqueId": "DS0020",
        "target": "DS0020 Snapshot Snapshot Creation",
        "description": "Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    },
    {
        "uniqueId": "DS0034",
        "target": "DS0034 Volume Volume Creation",
        "description": "Monitor for the unexpected creation or presence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    },
    {
        "uniqueId": "EC2",
        "target": "EC2 Instances. Retrieved June 17, 2020.",
        "description": "Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020."
    },
    {
        "uniqueId": "T1614",
        "target": "T1614 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1614",
        "target": "T1614 Sub-techniques:  T1614.001",
        "description": "\u24d8"
    },
    {
        "uniqueId": "01",
        "target": "01 April 2021",
        "description": "Last Modified: 15 October 2021"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey does not run any tasks or install additional malware if the victim machine is based in Russia.[7]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson can identify the geographical location of a victim host.[8]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate queries system locale information during execution.[9] Later versions of DarkGate query GetSystemDefaultLCID for locale information to determine if the malware is executing in Russian-speaking countries.[10]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can identity the OS locale of a compromised host.[11]"
    },
    {
        "uniqueId": "S0632",
        "target": "S0632 GrimAgent",
        "description": "GrimAgent can identify the country code on a compromised host.[12]"
    },
    {
        "uniqueId": "S0262",
        "target": "S0262 QuasarRAT",
        "description": "QuasarRAT can determine the country a victim host is located in.[13]"
    },
    {
        "uniqueId": "S0481",
        "target": "S0481 Ragnar Locker",
        "description": "Before executing malicious code, Ragnar Locker checks the Windows API GetLocaleInfoW and doesn't encrypt files if it finds a former Soviet country.[1]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot has conducted system locale checks to see if the compromised host is in Russia, Ukraine, Belarus, Armenia, Kazakhstan, or Moldova.[14][15]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot can collected the country code of a compromised machine.[16]"
    },
    {
        "uniqueId": "G1008",
        "target": "G1008 SideCopy",
        "description": "SideCopy has identified the country location of a compromised host.[17]"
    },
    {
        "uniqueId": "S1124",
        "target": "S1124 SocGholish",
        "description": "SocGholish can use IP-based geolocation to limit infections to victims in North America, Europe, and a small number of Asian-Pacific nations.[18]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Remote access tools with built-in features may interact directly with the Windows API, such as calling GetLocaleInfoW to gather information.[1]"
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022.",
        "description": "Threat Intelligence Team. (2021, December 2). SideCopy APT: Connecting lures victims, payloads to infrastructure. Retrieved June 13, 2022."
    },
    {
        "uniqueId": "T1615",
        "target": "T1615 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1615",
        "target": "T1615 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "Rapid7",
        "target": "Rapid7 Version: 1.1",
        "description": "Created: 06 August 2021"
    },
    {
        "uniqueId": "06",
        "target": "06 January 2023",
        "description": "Version Permalink"
    },
    {
        "uniqueId": "S0521",
        "target": "S0521 BloodHound",
        "description": "BloodHound has the ability to collect local admin information via GPO.[5]"
    },
    {
        "uniqueId": "S0082",
        "target": "S0082 Emissary",
        "description": "Emissary has the capability to execute gpresult.[6]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire includes various modules for enumerating Group Policy.[4]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover Group Policy details using the gpresult command.[7]"
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Object Access",
        "description": "Monitor for abnormal LDAP queries with filters for groupPolicyContainer and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor for suspicious use of gpresult. Monitor for the use of PowerShell functions such as Get-DomainGPO and Get-DomainGPOLocalGroup and processes spawning with command-line arguments containing GPOLocalGroup."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "T1092",
        "target": "T1092 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1092",
        "target": "T1092 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 31 January 2024"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.[2]"
    },
    {
        "uniqueId": "S0023",
        "target": "S0023 CHOPSTICK",
        "description": "Part of APT28's operation involved using CHOPSTICK modules to copy itself to air-gapped machines, using files written to USB sticks to transfer data and command traffic.[3][4][2]"
    },
    {
        "uniqueId": "S0136",
        "target": "S0136 USBStealer",
        "description": "USBStealer drops commands for a second victim onto a removable media drive inserted into the first victim, and commands are executed when the drive is inserted into the second victim.[1]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Disable Autoruns if it is unnecessary.[5]"
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[6]"
    },
    {
        "uniqueId": "DS0016",
        "target": "DS0016 Drive Drive Access",
        "description": "Monitor for unexpected file access on removable media"
    },
    {
        "uniqueId": "T1584",
        "target": "T1584 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1584",
        "target": "T1584 Sub-techniques:  T1584.001, T1584.002, T1584.003, T1584.004, T1584.005, T1584.006, T1584.007, T1584.008",
        "description": "\u24d8"
    },
    {
        "uniqueId": "01",
        "target": "01 October 2020",
        "description": "Last Modified: 28 March 2024"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls."
    },
    {
        "uniqueId": "DS0038",
        "target": "DS0038 Domain Name Active DNS",
        "description": "Monitor for queried domain name system (DNS) registry data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    {
        "uniqueId": "DS0035",
        "target": "DS0035 Internet Scan Response Content",
        "description": "Once adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[9][10][11]"
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "ICANN Security and Stability Advisory Committee. (2005, July 12). Domain Name Hijacking: Incidents, Threats, Risks and Remediation. Retrieved March 6, 2017."
    },
    {
        "uniqueId": "C2",
        "target": "C2 with Shodan. Retrieved October 12, 2021.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1490",
        "target": "T1490 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1490",
        "target": "T1490 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "02",
        "target": "02 April 2019",
        "description": "Last Modified: 12 April 2024"
    },
    {
        "uniqueId": "S1129",
        "target": "S1129 Akira",
        "description": "Akira will delete system volume shadow copies via PowerShell commands.[9]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon deletes backups and shadow copies using native system tools.[10][11]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk has the ability to delete shadow volumes using vssadmin.exe delete shadows /all /quiet.[12][13]"
    },
    {
        "uniqueId": "S0570",
        "target": "S0570 BitPaymer",
        "description": "BitPaymer attempts to remove the backup shadow files from the host using vssadmin.exe Delete Shadows /All /Quiet.[14]"
    },
    {
        "uniqueId": "S1070",
        "target": "S1070 Black Basta",
        "description": "Black Basta can delete shadow copies using vssadmin.exe.[15][16][17][18][19][20][21][22][22][23]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat can delete shadow copies using vssadmin.exe delete shadows /all /quiet and wmic.exe Shadowcopy Delete; it can also modify the boot loader using bcdedit /set {default} recoveryenabled No.[24]"
    },
    {
        "uniqueId": "S0611",
        "target": "S0611 Clop",
        "description": "Clop can delete the shadow volumes with vssadmin Delete Shadows /all /quiet and can use bcdedit to disable recovery options.[25]"
    },
    {
        "uniqueId": "S0608",
        "target": "S0608 Conficker",
        "description": "Conficker resets system restore points and deletes backup files.[26]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can delete Windows Volume Shadow Copies using vssadmin.[27]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate can delete system restore points through the command cmd.exe /c vssadmin delete shadows /for=c: /all /quiet\".[28]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can delete shadow volumes using vssadmin.exe.[29]"
    },
    {
        "uniqueId": "S0616",
        "target": "S0616 DEATHRANSOM",
        "description": "DEATHRANSOM can delete volume shadow copies on compromised hosts.[30]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol can delete shadow copies using the IVssBackupComponents COM object to call the DeleteSnapshots method.[31]"
    },
    {
        "uniqueId": "S0605",
        "target": "S0605 EKANS",
        "description": "EKANS removes backups of Volume Shadow Copies to disable any restoration capabilities.[32][33]"
    },
    {
        "uniqueId": "S0618",
        "target": "S0618 FIVEHANDS",
        "description": "FIVEHANDS has the ability to delete volume shadow copies on compromised hosts.[30][34]"
    },
    {
        "uniqueId": "S0132",
        "target": "S0132 H1N1",
        "description": "H1N1 disable recovery options and deletes shadow copies from the victim.[35]"
    },
    {
        "uniqueId": "S0617",
        "target": "S0617 HELLOKITTY",
        "description": "HELLOKITTY can delete volume shadow copies on compromised hosts.[30]"
    },
    {
        "uniqueId": "S0697",
        "target": "S0697 HermeticWiper",
        "description": "HermeticWiper can disable the VSS service on a compromised host using the service control manager.[36][37][38]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can can remove all system restore points.[39]"
    },
    {
        "uniqueId": "S0389",
        "target": "S0389 JCry",
        "description": "JCry has been observed deleting shadow copies to ensure that data cannot be restored easily.[40]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has attempted to delete the shadow volumes of infected machines, once before and once after the encryption process.[41][42]"
    },
    {
        "uniqueId": "S0576",
        "target": "S0576 MegaCortex",
        "description": "MegaCortex has deleted volume shadow copies using vssadmin.exe.[43]"
    },
    {
        "uniqueId": "S0688",
        "target": "S0688 Meteor",
        "description": "Meteor can use bcdedit to delete different boot identifiers on a compromised host; it can also use vssadmin.exe delete shadows /all /quiet and C:\\\\Windows\\\\system32\\\\wbem\\\\wmic.exe shadowcopy delete.[44]"
    },
    {
        "uniqueId": "S0457",
        "target": "S0457 Netwalker",
        "description": "Netwalker can delete the infected system's Shadow Volumes to prevent recovery.[45][46]"
    },
    {
        "uniqueId": "S0365",
        "target": "S0365 Olympic Destroyer",
        "description": "Olympic Destroyer uses the native Windows utilities vssadmin, wbadmin, and bcdedit to delete and disable operating system recovery features such as the Windows backup catalog and Windows Automatic Repair.[1]"
    },
    {
        "uniqueId": "S1058",
        "target": "S1058 Prestige",
        "description": "Prestige can delete the backup catalog from the target system using: c:\\Windows\\System32\\wbadmin.exe delete catalog -quiet and can also delete volume shadow copies using: \\Windows\\System32\\vssadmin.exe delete shadows /all /quiet.[47]"
    },
    {
        "uniqueId": "S0654",
        "target": "S0654 ProLock",
        "description": "ProLock can use vssadmin.exe to remove volume shadow copies.[48]"
    },
    {
        "uniqueId": "S0583",
        "target": "S0583 Pysa",
        "description": "Pysa has the functionality to delete shadow copies.[49]"
    },
    {
        "uniqueId": "S0481",
        "target": "S0481 Ragnar Locker",
        "description": "Ragnar Locker can delete volume shadow copies using vssadmin delete shadows /all /quiet.[50]"
    },
    {
        "uniqueId": "S0496",
        "target": "S0496 REvil",
        "description": "REvil can use vssadmin to delete volume shadow copies and bcdedit to disable recovery features.[51][52][53][54][55][56][57][58][59]"
    },
    {
        "uniqueId": "S0400",
        "target": "S0400 RobbinHood",
        "description": "RobbinHood deletes shadow copies to ensure that all the data cannot be restored easily.[60]"
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal can delete shadow copy backups with vssadmin.exe using the command delete shadows /all /quiet.[61][62][63]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk has used vssadmin Delete Shadows /all /quiet to to delete volume shadow copies and vssadmin resize shadowstorage to force deletion of shadow copies created by third-party applications.[64]"
    },
    {
        "uniqueId": "S0366",
        "target": "S0366 WannaCry",
        "description": "WannaCry uses vssadmin, wbadmin, bcdedit, and wmic to delete and disable operating system recovery features.[65][2][66]"
    },
    {
        "uniqueId": "S0612",
        "target": "S0612 WastedLocker",
        "description": "WastedLocker can delete shadow volumes.[67][68][69]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has used WMIC and vssadmin to manually delete volume shadow copies. Wizard Spider has also used Conti ransomware to delete volume shadow copies automatically with the use of vssadmin.[70]"
    },
    {
        "uniqueId": "M1053",
        "target": "M1053 Data Backup",
        "description": "Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data.[71] Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery. In cloud environments, enable versioning on storage objects where possible, and copy backups to other accounts or regions to isolate them from the original copies.[72]"
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Consider using application control configured to block execution of utilities such as diskshadow.exe that may not be required for a given system or network to prevent potential misuse by adversaries."
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "Consider technical controls to prevent the disabling of services or deletion of files involved in system recovery. Additionally, ensure that WinRE is enabled using the following command: reagentc /enable.[73]"
    },
    {
        "uniqueId": "M1018",
        "target": "M1018 User Account Management",
        "description": "Limit the user accounts that have access to backups to only those required."
    },
    {
        "uniqueId": "DS0010",
        "target": "DS0010 Cloud Storage Cloud Storage Deletion",
        "description": "Monitor for unexpected deletion of a cloud storage objects (ex: AWS delete-object), especially those associated with cloud backups."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Deletion",
        "description": "The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. After compromising a network of systems, threat actors often try to delete/resize Shadow Copy in an attempt to prevent administrators from restoring the systems to versions present before the attack. This is often done via vssadmin, a legitimate Windows tool to interact with shadow copies. This action is often employed by ransomware, may lead to a failure in recovering systems after an attack. The pseudo code detection focus on Windows Security and Sysmon process creation (4688 and 1). The use of wmic to delete shadow copy generates WMI-Activity Operationnal 5857 event and could generate 5858 (if the operation fails). These 2 EventIDs could be interesting when attackers use wmic without process creation and/or for forensics."
    },
    {
        "uniqueId": "DS0019",
        "target": "DS0019 Service Service Metadata",
        "description": "Monitor the status of services involved in system recovery."
    },
    {
        "uniqueId": "7040",
        "target": "7040 can be used to alert on changes to the start type of a service (e.g., going from enabled at startup to disabled) associated with system recovery.",
        "description": "DS0020 Snapshot Snapshot Deletion"
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Modification",
        "description": "Monitor the registry for changes associated with system recovery features (ex: the creation of HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage)."
    },
    {
        "uniqueId": "S3",
        "target": "S3 Ransomware Part 2: Prevention and Defense. Retrieved March 21, 2023.",
        "description": "Max Kersten & Alexandre Mundo. (2023, November 29). Akira Ransomware. Retrieved April 4, 2024."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "Neeamni, D., Rubinfeld, A.. (2021, July 1). Diavol - A New Ransomware Used By Wizard Spider?. Retrieved November 12, 2021."
    },
    {
        "uniqueId": "471",
        "target": "471 Malware Intelligence team. (2020, March 31). REvil Ransomware-as-a-Service \u2013 An analysis of a ransomware affiliate operation. Retrieved August 4, 2020.",
        "description": "Ozarslan, S. (2020, January 15). A Brief History of Sodinokibi. Retrieved August 5, 2020."
    },
    {
        "uniqueId": "181",
        "target": "181 Windows Services Before Encryption. Retrieved July 29, 2019.",
        "description": "Cybereason Global SOC and Cybereason Security Research Teams. (2022, December 14). Royal Rumble: Analysis of Royal Ransomware. Retrieved March 30, 2023."
    },
    {
        "uniqueId": "T1033",
        "target": "T1033 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1033",
        "target": "T1033 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 29 September 2023"
    },
    {
        "uniqueId": "S1028",
        "target": "S1028 Action RAT",
        "description": "Action RAT has the ability to collect the username from an infected host.[3]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can collect the username from the victim\u2019s machine.[4][5][6]"
    },
    {
        "uniqueId": "S0092",
        "target": "S0092 Agent.btz",
        "description": "Agent.btz obtains the victim username and saves it to a file.[7]"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey has collected the user name from a compromised host using GetUserNameA.[8]"
    },
    {
        "uniqueId": "G0073",
        "target": "G0073 APT19",
        "description": "APT19 used an HTTP malware variant and a Port 22 malware variant to collect the victim\u2019s username.[9]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "An APT3 downloader uses the Windows command \"cmd.exe\" /C whoami to verify that it is running with the elevated privileges of \"System.\"[10]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 collected the victim's username and executed the whoami command on the victim's machine. APT32 executed shellcode to collect the username on the victim's machine. [11][12][13]"
    },
    {
        "uniqueId": "G0067",
        "target": "G0067 APT37",
        "description": "APT37 identifies the victim username.[14]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 has identified primary users, currently logged in users, sets of users that commonly use a system, or inactive users.[15]"
    },
    {
        "uniqueId": "G0087",
        "target": "G0087 APT39",
        "description": "APT39 used Remexi to collect usernames from the system.[16]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 has executed whoami commands, including using the WMIEXEC utility to execute this on remote machines.[17][18]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to identify the username on a compromised host.[19]"
    },
    {
        "uniqueId": "S1087",
        "target": "S1087 AsyncRAT",
        "description": "AsyncRAT can check if the current user of a compromised system is an administrator. [20]"
    },
    {
        "uniqueId": "S1029",
        "target": "S1029 AuTo Stealer",
        "description": "AuTo Stealer has the ability to collect the username from an infected host.[3]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can collect the username from the victim\u2019s machine.[21]"
    },
    {
        "uniqueId": "S0414",
        "target": "S0414 BabyShark",
        "description": "BabyShark has executed the whoami command.[22]"
    },
    {
        "uniqueId": "S0093",
        "target": "S0093 Backdoor.Oldrea",
        "description": "Backdoor.Oldrea collects the current username from the victim.[23]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can obtain logged user information from a compromised machine and can execute the command whoami.exe.[24]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can identify the username of the infected user.[25]"
    },
    {
        "uniqueId": "S0017",
        "target": "S0017 BISCUIT",
        "description": "BISCUIT has a command to gather the username from the system.[26]"
    },
    {
        "uniqueId": "S1068",
        "target": "S1068 BlackCat",
        "description": "BlackCat can utilize net use commands to discover the user name on a compromised host.[27]"
    },
    {
        "uniqueId": "S0521",
        "target": "S0521 BloodHound",
        "description": "BloodHound can collect information on user sessions.[28]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT can collect the username on a compromised host.[29]"
    },
    {
        "uniqueId": "S0486",
        "target": "S0486 Bonadan",
        "description": "Bonadan has discovered the username of the user running the backdoor.[30]"
    },
    {
        "uniqueId": "S0635",
        "target": "S0635 BoomBox",
        "description": "BoomBox can enumerate the username on a compromised host.[31]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee has the ability to identify the user name.[32]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 used whoami to gather information from victim machines.[33]"
    },
    {
        "uniqueId": "C0018",
        "target": "C0018 C0018",
        "description": "During C0018, the threat actors collected whoami information via PowerShell scripts.[34]"
    },
    {
        "uniqueId": "S0351",
        "target": "S0351 Cannon",
        "description": "Cannon can gather the username from the system.[35]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT can collect the username from a victim machine.[36]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell can obtain a list of user accounts from a victim's machine.[37]"
    },
    {
        "uniqueId": "S0631",
        "target": "S0631 Chaes",
        "description": "Chaes has collected the username and UID from the infected machine.[38]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used the quser command to show currently logged on users.[39]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme can retrieve the username from a targeted system.[40]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling can identify the username on a compromised host.[41][42]"
    },
    {
        "uniqueId": "S1024",
        "target": "S1024 CreepySnail",
        "description": "CreepySnail can execute getUsername on compromised systems.[43]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson can identify the user on a targeted system.[44][45][46]"
    },
    {
        "uniqueId": "S0498",
        "target": "S0498 Cryptoistic",
        "description": "Cryptoistic can gather data on the user of a compromised host.[47]"
    },
    {
        "uniqueId": "S0334",
        "target": "S0334 DarkComet",
        "description": "DarkComet gathers the username from the victim\u2019s machine.[48]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman has collected the username from a victim machine.[49]"
    },
    {
        "uniqueId": "S0354",
        "target": "S0354 Denis",
        "description": "Denis enumerates and collects the username from the victim\u2019s machine.[50][13]"
    },
    {
        "uniqueId": "S0021",
        "target": "S0021 Derusbi",
        "description": "A Linux version of Derusbi checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges. Derusbi also gathers the username of the victim.[51]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol can collect the username from a compromised host.[52]"
    },
    {
        "uniqueId": "S1021",
        "target": "S1021 DnsSystem",
        "description": "DnsSystem can use the Windows user name to create a unique identification for infected users and systems.[53]"
    },
    {
        "uniqueId": "S0186",
        "target": "S0186 DownPaper",
        "description": "DownPaper collects the victim username and sends it to the C2 server.[54]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly used the command query user on victim hosts.[55]"
    },
    {
        "uniqueId": "S0694",
        "target": "S0694 DRATzarus",
        "description": "DRATzarus can obtain a list of users from an infected machine.[56]"
    },
    {
        "uniqueId": "S0024",
        "target": "S0024 Dyre",
        "description": "Dyre has the ability to identify the users on a compromised host.[57]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca collected information on user accounts via the whoami command.[58]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor has used tools to gather information about users.[59]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has enumerated all users connected to network shares."
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can enumerate the username on targeted hosts.[60]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic collects the user name from the victim\u2019s machine.[61]"
    },
    {
        "uniqueId": "S0568",
        "target": "S0568 EVILNUM",
        "description": "EVILNUM can obtain the username from the victim's machine.[62]"
    },
    {
        "uniqueId": "S0401",
        "target": "S0401 Exaramel for Linux",
        "description": "Exaramel for Linux can run whoami to identify the system owner.[63]"
    },
    {
        "uniqueId": "S0569",
        "target": "S0569 Explosive",
        "description": "Explosive has collected the username from the infected host.[64]"
    },
    {
        "uniqueId": "S0171",
        "target": "S0171 Felismus",
        "description": "Felismus collects the current username and sends it to the C2 server.[65]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT collects the username from the victim\u2019s machine.[66][67]"
    },
    {
        "uniqueId": "G0051",
        "target": "G0051 FIN10",
        "description": "FIN10 has used Meterpreter to enumerate users on remote systems.[68]"
    },
    {
        "uniqueId": "G0046",
        "target": "G0046 FIN7",
        "description": "FIN7 has used the command cmd.exe /C quser to collect user session information.[69]"
    },
    {
        "uniqueId": "G0061",
        "target": "G0061 FIN8",
        "description": "FIN8 has executed the command quser to display the session details of a compromised machine.[70]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has been used to run the whoami command on the system.[71]"
    },
    {
        "uniqueId": "S0381",
        "target": "S0381 FlawedAmmyy",
        "description": "FlawedAmmyy enumerates the current user during the initial infection.[72][73]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors used Empire to enumerate hosts and gather username, machine name, and administrative permissions information.[60]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream has the ability to gather user information from the targeted system using whoami/upn&whoami/fqdn&whoami/logonid&whoami/all.[74]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM used whoami and query user to obtain information about the victim user.[75]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "A Gamaredon Group file stealer can gather the victim's username to send to a C2 server.[76]"
    },
    {
        "uniqueId": "S0168",
        "target": "S0168 Gazer",
        "description": "Gazer obtains the current user's security identifier.[77]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium has the ability to distinguish between a standard user and an administrator on a compromised host.[40]"
    },
    {
        "uniqueId": "S0460",
        "target": "S0460 Get2",
        "description": "Get2 has the ability to identify the current username of an infected host.[78]"
    },
    {
        "uniqueId": "S0249",
        "target": "S0249 Gold Dragon",
        "description": "Gold Dragon collects the endpoint victim's username and uses it as a basis for downloading additional components from the C2 server.[79]"
    },
    {
        "uniqueId": "S0477",
        "target": "S0477 Goopy",
        "description": "Goopy has the ability to enumerate the infected system's user name.[13]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can collect the username from the victim's machine.[80]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT collects the victim username along with other account information (account type, description, full name, SID and status).[81]"
    },
    {
        "uniqueId": "S0632",
        "target": "S0632 GrimAgent",
        "description": "GrimAgent can identify the user id on a target machine.[82]"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM has used whoami to gather user information.[83]"
    },
    {
        "uniqueId": "S0214",
        "target": "S0214 HAPPYWORK",
        "description": "can collect the victim user name.[84]"
    },
    {
        "uniqueId": "S0391",
        "target": "S0391 HAWKBALL",
        "description": "HAWKBALL can collect the user name of the system.[85]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has run whoami on compromised machines to identify the current user.[86]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to collect the username on the infected host.[87]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole lists local users and session information.[88]"
    },
    {
        "uniqueId": "S0015",
        "target": "S0015 Ixeshe",
        "description": "Ixeshe collects the username from the victim\u2019s machine.[89]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "JPIN can obtain the victim user name.[90]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar gathers information on users.[91]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has used implants capable of collecting the signed-in username.[92]"
    },
    {
        "uniqueId": "S0250",
        "target": "S0250 Koadic",
        "description": "Koadic can identify logged in users across the domain and views user sessions.[93][94]"
    },
    {
        "uniqueId": "S0162",
        "target": "S0162 Komplex",
        "description": "The OsInfo function in Komplex collects the current running username.[95]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI can collect the username from the victim\u2019s machine.[96]"
    },
    {
        "uniqueId": "S1075",
        "target": "S1075 KOPILUWAK",
        "description": "KOPILUWAK can conduct basic network reconnaissance on the victim machine with whoami, to get user details.[97]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs collects registered owner details by using the commands systeminfo and net config workstation.[98]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Various Lazarus Group malware enumerates logged-on users.[99][100][101][102][103][47][104]"
    },
    {
        "uniqueId": "S0362",
        "target": "S0362 Linux Rabbit",
        "description": "Linux Rabbit opens a socket on port 22 and if it receives a response it attempts to obtain the machine's hostname and Top-Level Domain. [105]"
    },
    {
        "uniqueId": "S0513",
        "target": "S0513 LiteDuke",
        "description": "LiteDuke can enumerate the account name on a targeted system.[106]"
    },
    {
        "uniqueId": "S0680",
        "target": "S0680 LitePower",
        "description": "LitePower can determine if the current user has admin privileges.[107]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar can collect the username from the system.[108]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot has the ability to discover the username on the infected host.[109]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer has the ability to identify the username on a compromised host.[110]"
    },
    {
        "uniqueId": "G1014",
        "target": "G1014 LuminousMoth",
        "description": "LuminousMoth has used a malicious DLL to collect the username from compromised hosts.[111]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa can collect the username from the compromised machine.[112]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can collect the username from a compromised host.[113]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound malware has obtained the victim username and sent it to the C2 server.[114][115][116]"
    },
    {
        "uniqueId": "S0652",
        "target": "S0652 MarkiRAT",
        "description": "MarkiRAT can retrieve the victim\u2019s username.[117]"
    },
    {
        "uniqueId": "S0459",
        "target": "S0459 MechaFlounder",
        "description": "MechaFlounder has the ability to identify the username and hostname on a compromised host.[118]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can collect the username from a compromised host.[113]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo has collected the username from the victim's machine.[119]"
    },
    {
        "uniqueId": "S0339",
        "target": "S0339 Micropsia",
        "description": "Micropsia collects the username from the victim\u2019s machine.[120]"
    },
    {
        "uniqueId": "S1015",
        "target": "S1015 Milan",
        "description": "Milan can identify users registered to a targeted machine.[121]"
    },
    {
        "uniqueId": "S0280",
        "target": "S0280 MirageFox",
        "description": "MirageFox can gather the username from the victim\u2019s machine.[122]"
    },
    {
        "uniqueId": "S0084",
        "target": "S0084 Mis-Type",
        "description": "Mis-Type runs tests to determine the privilege level of the compromised user.[123]"
    },
    {
        "uniqueId": "S0149",
        "target": "S0149 MoonWind",
        "description": "MoonWind obtains the victim username.[124]"
    },
    {
        "uniqueId": "S0284",
        "target": "S0284 More_eggs",
        "description": "More_eggs has the capability to gather the username from the victim's machine.[125][126]"
    },
    {
        "uniqueId": "S0256",
        "target": "S0256 Mosquito",
        "description": "Mosquito runs whoami on the victim\u2019s machine.[127]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used malware that can collect the victim\u2019s username.[128][129]"
    },
    {
        "uniqueId": "S0228",
        "target": "S0228 NanHaiShu",
        "description": "NanHaiShu collects the username from the victim.[130]"
    },
    {
        "uniqueId": "S0590",
        "target": "S0590 NBTscan",
        "description": "NBTscan can list active users on the system.[131][132]"
    },
    {
        "uniqueId": "S0272",
        "target": "S0272 NDiskMonitor",
        "description": "NDiskMonitor obtains the victim username and encrypts the information to send over its C2 channel.[133]"
    },
    {
        "uniqueId": "S0691",
        "target": "S0691 Neoichor",
        "description": "Neoichor can collect the user name from a victim's machine.[92]"
    },
    {
        "uniqueId": "S1106",
        "target": "S1106 NGLite",
        "description": "NGLite will run the whoami command to gather system information and return this to the command and control server.[134]"
    },
    {
        "uniqueId": "C0002",
        "target": "C0002 Night Dragon",
        "description": "During Night Dragon, threat actors used password cracking and pass-the-hash tools to discover usernames and passwords.[135]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT enumerates the current user during the initial infection.[136]"
    },
    {
        "uniqueId": "S0353",
        "target": "S0353 NOKKI",
        "description": "NOKKI can collect the username from the victim\u2019s machine.[137]"
    },
    {
        "uniqueId": "S0644",
        "target": "S0644 ObliqueRAT",
        "description": "ObliqueRAT can check for blocklisted usernames on infected endpoints.[138]"
    },
    {
        "uniqueId": "S0340",
        "target": "S0340 Octopus",
        "description": "Octopus can collect the username from the victim\u2019s machine.[139]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has run whoami on a victim.[140][141][142]"
    },
    {
        "uniqueId": "S0439",
        "target": "S0439 Okrum",
        "description": "Okrum can collect the victim username.[143]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the query user and whoami commands as part of their advanced reconnaissance.[144]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors enumerated sessions and users on a remote host, and identified privileged users logged into a targeted system.[145]"
    },
    {
        "uniqueId": "G0040",
        "target": "G0040 Patchwork",
        "description": "Patchwork collected the victim username and whether it was running as admin, then sent the information to its C2 server.[146][133]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT sent username, computer name, and the previously generated UUID in reply to a \"who\" command from C2.[147]"
    },
    {
        "uniqueId": "S0139",
        "target": "S0139 PowerDuke",
        "description": "PowerDuke has commands to get the current user's name and SID.[148]"
    },
    {
        "uniqueId": "S0441",
        "target": "S0441 PowerShower",
        "description": "PowerShower has the ability to identify the current user on the infected host.[149]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS has the ability to identify the username on the compromised host.[150]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER may collect information about the currently logged in user by running whoami on a victim.[151]"
    },
    {
        "uniqueId": "S0113",
        "target": "S0113 Prikormka",
        "description": "A module in Prikormka collects information from the victim about the current user name.[152]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy can enumerate local information for Linux hosts and find currently logged on users for Windows hosts.[153]"
    },
    {
        "uniqueId": "S1032",
        "target": "S1032 PyDCrypt",
        "description": "PyDCrypt has probed victim machines with whoami and has collected the username from the machine.[154]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can identify the user name on a compromised system.[155][156]"
    },
    {
        "uniqueId": "S0269",
        "target": "S0269 QUADAGENT",
        "description": "QUADAGENT gathers the victim username.[157]"
    },
    {
        "uniqueId": "S0262",
        "target": "S0262 QuasarRAT",
        "description": "QuasarRAT can enumerate the username and account type.[158]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA runs the whoami and query user commands.[159]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession can gather system owner information, including user and administrator privileges.[160]"
    },
    {
        "uniqueId": "S0172",
        "target": "S0172 Reaver",
        "description": "Reaver collects the victim's username.[161]"
    },
    {
        "uniqueId": "S0153",
        "target": "S0153 RedLeaves",
        "description": "RedLeaves can obtain information about the logged on user both locally and for Remote Desktop sessions.[162]"
    },
    {
        "uniqueId": "S0125",
        "target": "S0125 Remsec",
        "description": "Remsec can obtain information about the current user.[163]"
    },
    {
        "uniqueId": "S0379",
        "target": "S0379 Revenge RAT",
        "description": "Revenge RAT gathers the username from the system.[164]"
    },
    {
        "uniqueId": "S0258",
        "target": "S0258 RGDoor",
        "description": "RGDoor executes the whoami on the victim\u2019s machine.[165]"
    },
    {
        "uniqueId": "S0433",
        "target": "S0433 Rifdoor",
        "description": "Rifdoor has the ability to identify the username on the compromised host.[87]"
    },
    {
        "uniqueId": "S0448",
        "target": "S0448 Rising Sun",
        "description": "Rising Sun can detect the username of the infected host.[166]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin collects the victim\u2019s username and whether that user is an admin.[167]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can collect the username from a compromised host.[168]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can obtain the victim username and permissions.[169]"
    },
    {
        "uniqueId": "S0085",
        "target": "S0085 S-Type",
        "description": "S-Type has run tests to determine the privilege level of the compromised user.[123]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot can collect the username from a compromised host.[170]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team has collected the username from a compromised host.[171]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot has the ability to identify the user on a compromised host.[78]"
    },
    {
        "uniqueId": "S0382",
        "target": "S0382 ServHelper",
        "description": "ServHelper will attempt to enumerate the username of the victim.[172]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has collected the username of the victim system.[173]"
    },
    {
        "uniqueId": "S0450",
        "target": "S0450 SHARPSTATS",
        "description": "SHARPSTATS has the ability to identify the username on the compromised host.[150]"
    },
    {
        "uniqueId": "S0610",
        "target": "S0610 SideTwist",
        "description": "SideTwist can collect the username on a targeted system.[142]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has used tools to identify the user of a compromised host.[174]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can gather a list of logged on users.[175]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA has collected the username from a victim machine.[176]"
    },
    {
        "uniqueId": "S1035",
        "target": "S1035 Small Sieve",
        "description": "Small Sieve can obtain the id of a logged in user.[177]"
    },
    {
        "uniqueId": "S0649",
        "target": "S0649 SMOKEDHAM",
        "description": "SMOKEDHAM has used whoami commands to identify system owners.[178]"
    },
    {
        "uniqueId": "S1124",
        "target": "S1124 SocGholish",
        "description": "SocGholish can use whoami to obtain the username from a compromised host.[179][180][181]"
    },
    {
        "uniqueId": "S0627",
        "target": "S0627 SodaMaster",
        "description": "SodaMaster can identify the username on a compromised host.[182]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can execute getinfo to identify the username on a compromised host.[183][184]"
    },
    {
        "uniqueId": "S0543",
        "target": "S0543 Spark",
        "description": "Spark has run the whoami command and has a built-in command to identify the user logged in.[185]"
    },
    {
        "uniqueId": "S0374",
        "target": "S0374 SpeakUp",
        "description": "SpeakUp uses the whoami command. [186]"
    },
    {
        "uniqueId": "S1030",
        "target": "S1030 Squirrelwaffle",
        "description": "Squirrelwaffle can collect the user name from a compromised host.[187]"
    },
    {
        "uniqueId": "S0058",
        "target": "S0058 SslMM",
        "description": "SslMM sends the logged-on username to its hard-coded C2.[188]"
    },
    {
        "uniqueId": "S1037",
        "target": "S1037 STARWHALE",
        "description": "STARWHALE can gather the username from an infected host.[189][190]"
    },
    {
        "uniqueId": "G0038",
        "target": "G0038 Stealth Falcon",
        "description": "Stealth Falcon malware gathers the registered user and primary owner name via WMI.[191]"
    },
    {
        "uniqueId": "S1034",
        "target": "S1034 StrifeWater",
        "description": "StrifeWater can collect the user name from the victim's machine.[192]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST collected the username from a compromised host.[193][194]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can collect the username from an infected host.[195]"
    },
    {
        "uniqueId": "S0242",
        "target": "S0242 SynAck",
        "description": "SynAck gathers user names from infected hosts.[196]"
    },
    {
        "uniqueId": "S0060",
        "target": "S0060 Sys10",
        "description": "Sys10 collects the account name of the logged-in user and sends it to the C2.[188]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can collect the username from a compromised host.[197]"
    },
    {
        "uniqueId": "S0098",
        "target": "S0098 T9000",
        "description": "T9000 gathers and beacons the username of the logged in account during installation. It will also gather the username of running processes to determine if it is running as SYSTEM.[198]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "Threat Group-3390 has used whoami to collect system user information.[41]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot can identify the user and groups the user belongs to on a compromised host.[199]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can gather information about the user on a compromised host.[200]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper used letmein to scan for saved usernames on the target system.[201]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian can retrieve usernames.[202]"
    },
    {
        "uniqueId": "S0130",
        "target": "S0130 Unknown Logger",
        "description": "Unknown Logger can obtain information about the victim usernames.[203]"
    },
    {
        "uniqueId": "S0275",
        "target": "S0275 UPPERCUT",
        "description": "UPPERCUT has the capability to collect the current logged on user\u2019s username from a machine.[204]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak can gather information regarding the user.[205]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN gathers the username from the victim\u2019s machine.[206]"
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon",
        "description": "Volt Typhoon has executed the PowerShell command Get-EventLog security -instanceid 4624 to identify associated user and computer account names.[207][208]"
    },
    {
        "uniqueId": "S0515",
        "target": "S0515 WellMail",
        "description": "WellMail can identify the current username on the victim system.[209]"
    },
    {
        "uniqueId": "S0514",
        "target": "S0514 WellMess",
        "description": "WellMess can collect the username on the victim machine to send to C2.[210]"
    },
    {
        "uniqueId": "S0155",
        "target": "S0155 WINDSHIELD",
        "description": "WINDSHIELD can gather the victim user name.[211]"
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift",
        "description": "Windshift has used malware to identify the username on a compromised host.[212]"
    },
    {
        "uniqueId": "S0219",
        "target": "S0219 WINERACK",
        "description": "WINERACK can gather information on the victim username.[84]"
    },
    {
        "uniqueId": "S0059",
        "target": "S0059 WinMM",
        "description": "WinMM uses NetUser-GetInfo to identify that it is running under an \"Admin\" account on the local system.[188]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has used \"whoami\" to identify the local user and their privileges.[213]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT can retrieve a list of user accounts and usernames from an infected machine.[214]"
    },
    {
        "uniqueId": "S0161",
        "target": "S0161 XAgentOSX",
        "description": "XAgentOSX contains the getInfoOSX function to return the OS X version as well as the current user.[215]"
    },
    {
        "uniqueId": "S0248",
        "target": "S0248 yty",
        "description": "yty collects the victim\u2019s username.[216]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy gets the username from the system.[217][218]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has used a tool to capture the username on a compromised host in order to register it with C2.[219]"
    },
    {
        "uniqueId": "S0350",
        "target": "S0350 zwShell",
        "description": "zwShell can obtain the name of the logged-in user on the victim.[135]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell can collect the owner and organization information from the target workstation.[220]"
    },
    {
        "uniqueId": "S1013",
        "target": "S1013 ZxxZ",
        "description": "ZxxZ can collect the username from a compromised host.[221]"
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Object Access",
        "description": "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. [222] [223] [224] Note: Domain controllers may not log replication requests originating from the default domain controller account. [225]. Monitor for replication requests [226] from IPs not associated with known domain controllers. [227]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, [228] which may require additional logging features to be configured in the operating system to collect necessary information for analysis."
    },
    {
        "uniqueId": "4104",
        "target": "4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.",
        "description": "DS0022 File File Access"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s))."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software."
    },
    {
        "uniqueId": "2012",
        "target": "2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.",
        "description": "Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances of at being created, therefore implying the querying or creation of tasks. If this tools is commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Access",
        "description": "Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software."
    },
    {
        "uniqueId": "C0d0so0",
        "target": "C0d0so0 Group. Retrieved August 2, 2018.",
        "description": "Moran, N., et al. (2014, November 21). Operation Double Tap. Retrieved January 14, 2016."
    },
    {
        "uniqueId": "APT32",
        "target": "APT32 Targeting Wuhan Government and Chinese Ministry of Emergency Management in Latest Example of COVID-19 Related Espionage. Retrieved April 28, 2020.",
        "description": "Folt\u00fdn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 World Tour 2021 on a tight schedule. Retrieved February 22, 2024.",
        "description": "CheckPoint. (2020, May 7). Naikon APT: Cyber Espionage Reloaded. Retrieved May 26, 2020."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "Pantazopoulos, N. (2020, June 2). In-depth analysis of the new Team9 malware family. Retrieved December 1, 2020."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Costa, F. (2022, May 1). RaaS AvosLocker Incident Response Analysis. Retrieved January 11, 2023."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7. Retrieved April 5, 2022.",
        "description": "Symantec Threat Hunter Team. (2023, July 18). FIN8 Uses Revamped Sardonic Backdoor to Deliver Noberus Ransomware. Retrieved August 9, 2023."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022.",
        "description": "Vrabie, V. (2020, November). Dissecting a Chinese APT Targeting South Eastern Asian Government Institutions. Retrieved September 19, 2022."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020.",
        "description": "Sherstobitoff, R., Saavedra-Morales, J. (2018, February 02). Gold Dragon Widens Olympics Malware Attacks, Gains Permanent Presence on Victims\u2019 Systems. Retrieved June 6, 2018."
    },
    {
        "uniqueId": "APT37",
        "target": "APT37 (Reaper): The Overlooked North Korean Actor. Retrieved March 1, 2018.",
        "description": "Patil, S. and Williams, M.. (2019, June 5). Government Sector in Central Asia Targeted With New HAWKBALL Backdoor Delivered via Microsoft Office Vulnerabilities. Retrieved June 20, 2019."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022.",
        "description": "Kazem, M. (2019, November 25). Trojan:W32/Lokibot. Retrieved May 15, 2020."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "DFIR Report. (2021, November 15). Exchange Exploit Leads to Domain Wide Ransomware. Retrieved January 5, 2023."
    },
    {
        "uniqueId": "APT15",
        "target": "APT15 Resurfaces With New Tools Based On Old Ones. Retrieved September 21, 2018.",
        "description": "Gross, J. (2016, February 23). Operation Dust Storm. Retrieved December 22, 2021."
    },
    {
        "uniqueId": "ITG08",
        "target": "ITG08 Strikes Again. Retrieved September 16, 2019.",
        "description": "ESET, et al. (2018, January). Diplomats in Eastern Europe bitten by a Turla mosquito. Retrieved July 3, 2018."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021.",
        "description": "Hromcova, Z. (2019, July). OKRUM AND KETRICAN: AN OVERVIEW OF RECENT KE3CHANG GROUP ACTIVITY. Retrieved May 6, 2020."
    },
    {
        "uniqueId": "19",
        "target": "19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020.",
        "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017."
    },
    {
        "uniqueId": "V3",
        "target": "V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.",
        "description": "Sardiwal, M, et al. (2017, December 7). New Targeted Attack in the Middle East by APT34, a Suspected Iranian Threat Group, Using CVE-2017-11882 Exploit. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "APT27",
        "target": "APT27 Turns to Ransomware. Retrieved November 12, 2021.",
        "description": "Grunzweig, J. and Miller-Osborn, J. (2017, November 10). New Malware with Ties to SunOrcal Discovered. Retrieved November 16, 2017."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "NCSC GCHQ. (2022, January 27). Small Sieve Malware Analysis Report. Retrieved August 22, 2022."
    },
    {
        "uniqueId": "2024",
        "target": "2024 Threat Detection Report: SocGholish. Retrieved March 22, 2024.",
        "description": "Secureworks. (n.d.). GOLD PRELUDE . Retrieved March 22, 2024."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Settle, A., et al. (2016, August 8). MONSOON - Analysis Of An APT Campaign. Retrieved September 22, 2016.",
        "description": "Matsuda, A., Muhammad I. (2018, September 13). APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMAIL. Retrieved September 29, 2020.",
        "description": "CISA. (2020, July 16). MAR-10296782-2.v1 \u2013 WELLMESS. Retrieved September 24, 2020."
    },
    {
        "uniqueId": "APT32",
        "target": "APT32 and the Threat to Global Corporations. Retrieved June 18, 2017.",
        "description": "The BlackBerry Research & Intelligence Team. (2020, October). BAHAMUT: Hack-for-Hire Masters of Phishing, Fake News, and Fake Apps. Retrieved February 8, 2021."
    },
    {
        "uniqueId": "31",
        "target": "31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021.",
        "description": "Allievi, A., et al. (2014, October 28). Threat Spotlight: Group 72, Opening the ZxShell. Retrieved September 24, 2019."
    },
    {
        "uniqueId": "T1027",
        "target": "T1027 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1027",
        "target": "T1027 Sub-techniques:  T1027.001, T1027.002, T1027.003, T1027.004, T1027.005, T1027.006, T1027.007, T1027.008, T1027.009, T1027.010, T1027.011, T1027.012, T1027.013",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 16 April 2024"
    },
    {
        "uniqueId": "C0025",
        "target": "C0025 2016 Ukraine Electric Power Attack",
        "description": "During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor.[7]"
    },
    {
        "uniqueId": "S1028",
        "target": "S1028 Action RAT",
        "description": "Action RAT's commands, strings, and domains can be Base64 encoded within the payload.[8]"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "Most of the strings in ADVSTORESHELL are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.[9][10]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla has had its code obfuscated in an apparent attempt to make analysis difficult.[11] Agent Tesla has used the Rijndael symmetric encryption algorithm to encrypt strings.[12]"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey has obfuscated strings such as antivirus vendor names, domains, files, and others.[13]"
    },
    {
        "uniqueId": "S0504",
        "target": "S0504 Anchor",
        "description": "Anchor has obfuscated code with stack strings and string encryption.[14]"
    },
    {
        "uniqueId": "S0584",
        "target": "S0584 AppleJeus",
        "description": "AppleJeus has XOR-encrypted collected system information prior to sending to a C2. AppleJeus has also used the open source ADVObfuscation library for its components.[15]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed has the ability to Base64 encode its payload and custom encrypt API calls.[16]"
    },
    {
        "uniqueId": "G0099",
        "target": "G0099 APT-C-36",
        "description": "APT-C-36 has used ConfuserEx to obfuscate its variant of Imminent Monitor, compressed payload and RAT packages, and password protected encrypted email attachments to avoid detection.[17]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "APT3 obfuscates files or information to help evade defensive measures.[18]"
    },
    {
        "uniqueId": "G0067",
        "target": "G0067 APT37",
        "description": "APT37 obfuscates strings and payloads.[19][20][21]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 used VMProtected binaries in multiple intrusions.[22]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon has used encrypted strings.[23]"
    },
    {
        "uniqueId": "S1053",
        "target": "S1053 AvosLocker",
        "description": "AvosLocker has used XOR-encoded strings.[24]"
    },
    {
        "uniqueId": "G0135",
        "target": "G0135 BackdoorDiplomacy",
        "description": "BackdoorDiplomacy has obfuscated tools and malware it uses with VMProtect.[25]"
    },
    {
        "uniqueId": "G0063",
        "target": "G0063 BlackOasis",
        "description": "BlackOasis's first stage shellcode contains a NOP sled with alternative instructions that was likely designed to bypass antivirus tools.[26]"
    },
    {
        "uniqueId": "S0635",
        "target": "S0635 BoomBox",
        "description": "BoomBox can encrypt data using AES prior to exfiltration.[27]"
    },
    {
        "uniqueId": "S0651",
        "target": "S0651 BoxCaon",
        "description": "BoxCaon used the \"StackStrings\" obfuscation technique to hide malicious functionalities.[28]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 has used encrypted payload files and maintains an encrypted configuration structure in memory.[29][30]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee has been delivered as password-protected zipped ISO files and used control-flow-flattening to obfuscate the flow of functions.[31][32][33]"
    },
    {
        "uniqueId": "S0482",
        "target": "S0482 Bundlore",
        "description": "Bundlore has obfuscated data with base64, AES, RC4, and bz2.[34]"
    },
    {
        "uniqueId": "S1118",
        "target": "S1118 BUSHWALK",
        "description": "BUSHWALK can encrypt the resulting data generated from C2 commands with RC4.[35]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors used Base64-encoded strings.[36]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 broke malicious binaries, including DEADEYE and KEYPLUG, into multiple sections on disk to evade detection.[37]"
    },
    {
        "uniqueId": "S0030",
        "target": "S0030 Carbanak",
        "description": "Carbanak encrypts strings to make analysis more difficult.[38]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon encrypts configuration files and tasks for the malware to complete using CAST-128 algorithm.[39][40]"
    },
    {
        "uniqueId": "S0465",
        "target": "S0465 CARROTBALL",
        "description": "CARROTBALL has used a custom base64 alphabet to decode files.[41]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "The Clambling executable has been obfuscated when dropped on a compromised host.[42]"
    },
    {
        "uniqueId": "S1105",
        "target": "S1105 COATHANGER",
        "description": "COATHANGER can store obfuscated configuration information in the last 56 bytes of the file /date/.bd.key/preload.so.[43]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can hash functions to obfuscate calls to the Windows API and use a public/private key pair to encrypt Beacon session metadata.[44][45]"
    },
    {
        "uniqueId": "S0369",
        "target": "S0369 CoinTicker",
        "description": "CoinTicker initially downloads a hidden encoded file.[46]"
    },
    {
        "uniqueId": "S0244",
        "target": "S0244 Comnie",
        "description": "Comnie uses RC4 and Base64 to obfuscate strings.[47]"
    },
    {
        "uniqueId": "S0126",
        "target": "S0126 ComRAT",
        "description": "ComRAT has encrypted its virtual file system using AES-256 in XTS mode.[48][49]"
    },
    {
        "uniqueId": "S0608",
        "target": "S0608 Conficker",
        "description": "Conficker has obfuscated its code to prevent its removal from host machines.[50]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can use compiler-based obfuscation for its code, encrypt DLLs, and hide Windows API calls.[51][52][53]"
    },
    {
        "uniqueId": "S0137",
        "target": "S0137 CORESHELL",
        "description": "CORESHELL obfuscates strings using a custom stream cipher.[54]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba has used multiple layers of obfuscation to avoid analysis, including its Base64 encoded payload.[55]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate uses a hard-coded string as a seed, along with the victim machine hardware identifier and input text, to generate a unique string used as an internal mutex value to evade static detection based on mutexes.[56]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla has been obfuscated with the DeepSea .NET and ConfuserEx code obfuscators.[57]"
    },
    {
        "uniqueId": "S0187",
        "target": "S0187 Daserf",
        "description": "Daserf uses encrypted Windows APIs and also encrypts data using the alternative base64+RC4 or the Caesar cipher.[58]"
    },
    {
        "uniqueId": "S0354",
        "target": "S0354 Denis",
        "description": "Denis obfuscates its code and encrypts the API names.[59]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol has Base64 encoded the RSA public key used for encrypting files.[60]"
    },
    {
        "uniqueId": "S0695",
        "target": "S0695 Donut",
        "description": "Donut can generate encrypted, compressed/encoded, or otherwise obfuscated code modules.[61]"
    },
    {
        "uniqueId": "S0694",
        "target": "S0694 DRATzarus",
        "description": "DRATzarus can be partly encrypted with XOR.[62]"
    },
    {
        "uniqueId": "S0384",
        "target": "S0384 Dridex",
        "description": "Dridex's strings are obfuscated using RC4.[63]"
    },
    {
        "uniqueId": "S0502",
        "target": "S0502 Drovorub",
        "description": "Drovorub has used XOR encrypted payloads in WebSocket client to server messages.[64]"
    },
    {
        "uniqueId": "S0062",
        "target": "S0062 DustySky",
        "description": "The DustySky dropper uses a function to obfuscate the name of functions and other parts of the malware.[65]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca used Base64 to encode strings.[66]"
    },
    {
        "uniqueId": "S0377",
        "target": "S0377 Ebury",
        "description": "Ebury has obfuscated its strings with a simple XOR encryption with a static key.[67]"
    },
    {
        "uniqueId": "S0593",
        "target": "S0593 ECCENTRICBANDWAGON",
        "description": "ECCENTRICBANDWAGON has encrypted strings with RC4.[68]"
    },
    {
        "uniqueId": "S0624",
        "target": "S0624 Ecipekac",
        "description": "Ecipekac can use XOR, AES, and DES to encrypt loader shellcode.[69]"
    },
    {
        "uniqueId": "S0605",
        "target": "S0605 EKANS",
        "description": "EKANS uses encoded strings in its process kill list.[70]"
    },
    {
        "uniqueId": "G1003",
        "target": "G1003 Ember Bear",
        "description": "Ember Bear has obfuscated malware to help avoid detection.[71]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic heavily obfuscates its code to make analysis more difficult.[72]"
    },
    {
        "uniqueId": "S0512",
        "target": "S0512 FatDuke",
        "description": "FatDuke can use base64 encoding, string stacking, and opaque predicates for obfuscation.[73]"
    },
    {
        "uniqueId": "S0355",
        "target": "S0355 Final1stspy",
        "description": "Final1stspy obfuscates strings with base64 encoding.[74]"
    },
    {
        "uniqueId": "S0182",
        "target": "S0182 FinFisher",
        "description": "FinFisher is heavily obfuscated in many ways, including through the use of spaghetti code in its functions in an effort to confuse disassembly programs. It also uses a custom XOR algorithm to obfuscate code.[75][76]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has been delivered within ZIP or RAR password-protected archived files.[77]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM used a modified version of HTRAN in which they obfuscated strings such as debug messages in an apparent attempt to evade detection.[78]"
    },
    {
        "uniqueId": "G0084",
        "target": "G0084 Gallmaker",
        "description": "Gallmaker obfuscated shellcode used during execution.[79]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has delivered self-extracting 7z archive files within malicious document attachments.[80]"
    },
    {
        "uniqueId": "S0477",
        "target": "S0477 Goopy",
        "description": "Goopy's decrypter have been inflated with junk code in between legitimate API functions, and also included infinite loops to avoid analysis.[59]"
    },
    {
        "uniqueId": "S0690",
        "target": "S0690 Green Lambert",
        "description": "Green Lambert has encrypted strings.[81][82]"
    },
    {
        "uniqueId": "S0632",
        "target": "S0632 GrimAgent",
        "description": "GrimAgent has used Rotate on Right (RoR) and Rotate on Left (RoL) functionality to encrypt strings.[83]"
    },
    {
        "uniqueId": "S0132",
        "target": "S0132 H1N1",
        "description": "H1N1 uses multiple techniques to obfuscate strings, including XOR.[84]"
    },
    {
        "uniqueId": "S0499",
        "target": "S0499 Hancitor",
        "description": "Hancitor has used Base64 to encode malicious links. Hancitor has also delivered compressed payloads in ZIP files to victims.[85][86]"
    },
    {
        "uniqueId": "S0070",
        "target": "S0070 HTTPBrowser",
        "description": "HTTPBrowser's code may be obfuscated through structured exception handling and return-oriented programming.[87]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq uses basic obfuscation in the form of spaghetti code.[88][89]"
    },
    {
        "uniqueId": "S0434",
        "target": "S0434 Imminent Monitor",
        "description": "Imminent Monitor has encrypted the spearphish attachments to avoid detection from email gateways; the debugger also encrypts information before sending to the C2.[17]"
    },
    {
        "uniqueId": "S0604",
        "target": "S0604 Industroyer",
        "description": "Industroyer uses heavily obfuscated code in its Windows Notepad backdoor.[7]"
    },
    {
        "uniqueId": "S0259",
        "target": "S0259 InnaputRAT",
        "description": "InnaputRAT uses an 8-byte XOR key to obfuscate API names and other strings contained in the payload.[90]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole avoids analysis by encrypting all strings, internal files, configuration data and by using a custom executable format.[91][92]"
    },
    {
        "uniqueId": "S0189",
        "target": "S0189 ISMInjector",
        "description": "ISMInjector is obfuscated with the off-the-shelf SmartAssembly .NET obfuscator created by red-gate.com.[93]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "A JPIN uses a encrypted and compressed payload that is disguised as a bitmap within the resource section of the installer.[94]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT\u2019s Java payload is encrypted with AES.[95] Additionally, backdoor files are encrypted using DES as a stream cipher. Later variants of jRAT also incorporated AV evasion methods such as Java bytecode obfuscation via the commercial Allatori obfuscation tool.[96]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar is obfuscated using the open source ConfuserEx protector. Kazuar also obfuscates the name of created files/folders/mutexes and encrypts debug messages written to log files using the Rijndael cipher.[97]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has used Base64-encoded shellcode strings.[98]"
    },
    {
        "uniqueId": "S0585",
        "target": "S0585 Kerrdown",
        "description": "Kerrdown can encrypt, encode, and compress multiple layers of shellcode.[99]"
    },
    {
        "uniqueId": "S0607",
        "target": "S0607 KillDisk",
        "description": "KillDisk uses VMProtect to make reverse engineering the malware more difficult.[100]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has obfuscated binary strings including the use of XOR encryption and Base64 encoding.[101][102] Kimsuky has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format.[103]"
    },
    {
        "uniqueId": "S0641",
        "target": "S0641 Kobalos",
        "description": "Kobalos encrypts all strings using RC4 and bundles all functionality into a single function call.[104]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot has obfuscated strings with base64 encoding.[105]"
    },
    {
        "uniqueId": "S0167",
        "target": "S0167 Matryoshka",
        "description": "Matryoshka obfuscates API function names using a substitute cipher combined with Base64 encoding.[106]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has decrypted strings and other important information during the encryption process. Maze also calls certain functions dynamically to hinder analysis.[107]"
    },
    {
        "uniqueId": "S0500",
        "target": "S0500 MCMD",
        "description": "MCMD can Base64 encode output strings prior to sending to C2.[108]"
    },
    {
        "uniqueId": "S0051",
        "target": "S0051 MiniDuke",
        "description": "MiniDuke can use control flow flattening to obscure code.[73]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has delivered initial payloads hidden using archives and encoding measures.[109][110][111][112][113][114]"
    },
    {
        "uniqueId": "S0336",
        "target": "S0336 NanoCore",
        "description": "NanoCore\u2019s plugins were obfuscated with Eazfuscater.NET 3.3.[115]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE has used a custom obfuscation algorithm to hide strings including Registry keys, APIs, and DLL names.[116]"
    },
    {
        "uniqueId": "S1090",
        "target": "S1090 NightClub",
        "description": "NightClub can obfuscate strings using the congruential generator (LCG): staten+1 = (690069 \u00d7 staten + 1) mod 232.[117]"
    },
    {
        "uniqueId": "S0353",
        "target": "S0353 NOKKI",
        "description": "NOKKI uses Base64 encoding for strings.[118]"
    },
    {
        "uniqueId": "S0138",
        "target": "S0138 OLDBAIT",
        "description": "OLDBAIT obfuscates internal strings and unpacks them at startup.[54]"
    },
    {
        "uniqueId": "S0264",
        "target": "S0264 OopsIE",
        "description": "OopsIE uses the Confuser protector to obfuscate an embedded .Net Framework assembly used for C2. OopsIE also encodes collected data in hexadecimal format before writing to files on disk and obfuscates strings.[119][120]"
    },
    {
        "uniqueId": "S0229",
        "target": "S0229 Orz",
        "description": "Some Orz strings are base64 encoded, such as the embedded DLL known as MockDll.[121]"
    },
    {
        "uniqueId": "S0594",
        "target": "S0594 Out1",
        "description": "Out1 has the ability to encode data.[122]"
    },
    {
        "uniqueId": "S0598",
        "target": "S0598 P.A.S. Webshell",
        "description": "P.A.S. Webshell can use encryption and base64 encoding to hide strings and to enforce access control once deployed.[123]"
    },
    {
        "uniqueId": "S0664",
        "target": "S0664 Pandora",
        "description": "Pandora has the ability to compress stings with QuickLZ.[124]"
    },
    {
        "uniqueId": "S0517",
        "target": "S0517 Pillowmint",
        "description": "Pillowmint has been compressed and stored within a registry key. Pillowmint has also obfuscated the AES key used for encryption.[125]"
    },
    {
        "uniqueId": "S0124",
        "target": "S0124 Pisloader",
        "description": "Pisloader obfuscates files by splitting strings into smaller sub-strings and including \"garbage\" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.[126]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX can use API hashing and modify the names of strings to evade detection.[42][114]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT has used a custom encryption scheme for communication between scripts.[127]"
    },
    {
        "uniqueId": "S0012",
        "target": "S0012 PoisonIvy",
        "description": "PoisonIvy hides any strings related to its own indicators of compromise.[128]"
    },
    {
        "uniqueId": "S0518",
        "target": "S0518 PolyglotDuke",
        "description": "PolyglotDuke can custom encrypt strings.[73]"
    },
    {
        "uniqueId": "S0453",
        "target": "S0453 Pony",
        "description": "Pony attachments have been delivered via compressed archive files. Pony also obfuscates the memory flow by adding junk instructions when executing to make analysis more difficult.[129]"
    },
    {
        "uniqueId": "S0150",
        "target": "S0150 POSHSPY",
        "description": "POSHSPY appends a file signature header (randomly selected from six file types) to encrypted data prior to upload or download.[130]"
    },
    {
        "uniqueId": "S0393",
        "target": "S0393 PowerStallion",
        "description": "PowerStallion uses a XOR cipher to encrypt command output written to its OneDrive C2 server.[131]"
    },
    {
        "uniqueId": "S0196",
        "target": "S0196 PUNCHBUGGY",
        "description": "PUNCHBUGGY has hashed most its code's functions and encrypted payloads with base64 and XOR.[132]"
    },
    {
        "uniqueId": "S0197",
        "target": "S0197 PUNCHTRACK",
        "description": "PUNCHTRACK is loaded and executed by a highly obfuscated launcher.[133]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot has hidden code within Excel spreadsheets by turning the font color to white and splitting it across multiple cells.[134]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay has base64-encoded its portable executable and hidden itself under a JPG header. Ramsay can also embed information within document footers.[135]"
    },
    {
        "uniqueId": "S0511",
        "target": "S0511 RegDuke",
        "description": "RegDuke can use control-flow flattening or the commercially available .NET Reactor for obfuscation.[73]"
    },
    {
        "uniqueId": "S0332",
        "target": "S0332 Remcos",
        "description": "Remcos uses RC4 and base64 to obfuscate data, including Registry entries and file paths.[136]"
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke has modified UPX headers after packing files to break unpackers.[137]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can encrypt data prior to exfiltration by using an RSA public key.[21][138]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM strings, network data, configuration, and modules are encrypted with a modified RC4 algorithm. RTM has also been delivered to targets as various archive files including ZIP, 7-ZIP, and RAR.[139][140]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk can use anti-disassembly and code transformation obfuscation techniques.[53]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot has been obfuscated to help avoid detection.[71]"
    },
    {
        "uniqueId": "S1099",
        "target": "S1099 Samurai",
        "description": "Samurai can encrypt the names of requested APIs and deliver its final payload as a compressed, encrypted and base64 encoded blob.[141]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team has used Base64 encoding within malware variants.[142]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic can use certain ConfuserEx features for obfuscation and can be encoded in a base64 string.[143]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot has the ability to XOR the strings for its installer component with a hardcoded 128 byte key.[144]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has encrypted its payload, a virtual file system, and various files.[145][66]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Shamoon contains base64-encoded strings.[146]"
    },
    {
        "uniqueId": "S0444",
        "target": "S0444 ShimRat",
        "description": "ShimRat has been delivered as a package that includes compressed DLL and shellcode payloads within a .dat file.[147]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter encrypted gathered information with a combination of shifting and XOR using a static key.[147]"
    },
    {
        "uniqueId": "S0063",
        "target": "S0063 SHOTPUT",
        "description": "SHOTPUT is obscured using XOR encoding and appended to a valid GIF file.[148][149]"
    },
    {
        "uniqueId": "S0623",
        "target": "S0623 Siloscape",
        "description": "Siloscape itself is obfuscated and uses obfuscated API calls.[150]"
    },
    {
        "uniqueId": "S1104",
        "target": "S1104 SLOWPULSE",
        "description": "SLOWPULSE can hide malicious code in the padding regions between legitimate functions in the Pulse Secure libdsplibs.so file.[151]"
    },
    {
        "uniqueId": "S1035",
        "target": "S1035 Small Sieve",
        "description": "Small Sieve has the ability to use a custom hex byte swapping encoding scheme combined with an obfuscated Base64 function to protect program strings and Telegram credentials.[152]"
    },
    {
        "uniqueId": "S1086",
        "target": "S1086 Snip3",
        "description": "Snip3 has the ability to obfuscate strings using XOR encryption.[153]"
    },
    {
        "uniqueId": "S0627",
        "target": "S0627 SodaMaster",
        "description": "SodaMaster can use \"stackstrings\" for obfuscation.[69]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can encrypt strings with XOR-based routines and use a custom AES storage format for plugins, configuration, C2 domains, and harvested data.[154][155][156]"
    },
    {
        "uniqueId": "S0516",
        "target": "S0516 SoreFang",
        "description": "SoreFang has the ability to encode and RC6 encrypt data sent to C2.[157]"
    },
    {
        "uniqueId": "S0142",
        "target": "S0142 StreamEx",
        "description": "StreamEx obfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.[158]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST strings were compressed and encoded in Base64.[159] SUNBURST also obfuscated collected system information using a FNV-1a + XOR algorithm.[160]"
    },
    {
        "uniqueId": "S0562",
        "target": "S0562 SUNSPOT",
        "description": "SUNSPOT encrypted log entries it collected with the stream cipher RC4 using a hard-coded key. It also uses AES128-CBC encrypted blobs for SUNBURST source code and data extracted from the SolarWinds Orion <MsBuild.exe process.[161]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can encrypt victim data with an RC4 cipher.[162]"
    },
    {
        "uniqueId": "S0242",
        "target": "S0242 SynAck",
        "description": "SynAck payloads are obfuscated prior to compilation to inhibit analysis and/or reverse engineering.[163][164]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has used an encrypted Virtual File System to store plugins.[165]"
    },
    {
        "uniqueId": "S0560",
        "target": "S0560 TEARDROP",
        "description": "TEARDROP created and read from a file with a fake JPG header, and its payload was encrypted with a simple rotating XOR cipher.[160][166][167]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot uses non-descriptive names to hide functionality.[168]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can base64 encode and AES-128-CBC encrypt data prior to transmission.[169]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian can use VMProtect for obfuscation.[25]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has the ability to base64 encode and XOR encrypt strings.[170][171][172]"
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift",
        "description": "Windshift has used string encoding with floating point calculations.[173]"
    },
    {
        "uniqueId": "S0117",
        "target": "S0117 XTunnel",
        "description": "A version of XTunnel introduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.[174]"
    },
    {
        "uniqueId": "M1049",
        "target": "M1049 Antivirus/Antimalware",
        "description": "Anti-virus can be used to automatically detect and quarantine suspicious files. Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10+ to analyze commands after being processed/interpreted. [175]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Consider periodic review of common fileless storage locations (such as the Registry or WMI repository) to potentially identify abnormal and malicious data."
    },
    {
        "uniqueId": "M1040",
        "target": "M1040 Behavior Prevention on Endpoint",
        "description": "On Windows 10+, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated payloads. [176]"
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Ensure that a finite amount of ingress points to a software deployment system exist with restricted access for those required to allow and enable newly deployed software."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g., ^)."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system)."
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated code functionality. Dynamic malware analysis may also expose signs of code obfuscation.[178]"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor and analyze calls to functions such as GetProcAddress() that are associated with malicious code obfuscation.[177]"
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g., ^)."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Creation",
        "description": "Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads."
    },
    {
        "uniqueId": "DS0005",
        "target": "DS0005 WMI WMI Creation",
        "description": "Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads."
    },
    {
        "uniqueId": "APT28",
        "target": "APT28 Under the Scope. Retrieved February 23, 2017.",
        "description": "Zhang, X. (2018, April 05). Analysis of New Agent Tesla Spyware Variant. Retrieved November 5, 2018."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Initiates Global Intrusion Campaign Using Multiple Exploits. Retrieved April 28, 2020.",
        "description": "Yuste, J. Pastrana, S. (2021, February 9). Avaddon ransomware: an in-depth analysis and decryption of infected systems. Retrieved August 19, 2021."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Kaspersky Lab's Global Research & Analysis Team. (2017, October 16). BlackOasis APT and new targeted attacks leveraging zero-day exploit. Retrieved February 15, 2018.",
        "description": "MSTIC. (2021, May 28). Breaking down NOBELIUM\u2019s latest early-stage toolset. Retrieved August 4, 2021."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Bennett, J., Vengerik, B. (2017, June 12). Behind the CARBANAK Backdoor. Retrieved June 11, 2018."
    },
    {
        "uniqueId": "v1",
        "target": "v1 - North Korean Remote Access Tool: ECCENTRICBANDWAGON. Retrieved March 18, 2021.",
        "description": "GREAT. (2021, March 30). APT10: sophisticated multi-layered loader Ecipekac discovered in A41APT campaign. Retrieved June 17, 2021."
    },
    {
        "uniqueId": "3390",
        "target": "3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",
        "description": "O'Gorman, G., and McDonald, G.. (2012, September 6). The Elderwood Project. Retrieved February 15, 2018."
    },
    {
        "uniqueId": "TA416",
        "target": "TA416 Goes to Ground and Returns with a Golang PlugX Malware Loader. Retrieved April 13, 2021.",
        "description": "Raggi, M. et al. (2022, March 7). The Good, the Bad, and the Web Bug: TA416 Increases Operational Tempo Against European Governments as Conflict in Ukraine Escalates. Retrieved March 16, 2022."
    },
    {
        "uniqueId": "19",
        "target": "19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020.",
        "description": "Hayashi, K. (2005, August 18). Backdoor.Darkmoon. Retrieved February 23, 2018."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 IS BACK IN BUSINESS, TARGETING THE HOSPITALITY INDUSTRY. Retrieved June 13, 2019.",
        "description": "Kizhakkinan, D., et al. (2016, May 11). Threat Actor Leverages Windows Zero-day Exploit in Payment Card Data Attacks. Retrieved February 12, 2018."
    },
    {
        "uniqueId": "4114",
        "target": "4114 used in Russian cyber-espionage campaign. Retrieved June 10, 2020.",
        "description": "Symantec Threat Hunter Team. (2023, July 18). FIN8 Uses Revamped Sardonic Backdoor to Deliver Noberus Ransomware. Retrieved August 9, 2023."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020.",
        "description": "GReAT. (2017, August 15). ShadowPad in corporate networks. Retrieved March 22, 2021."
    },
    {
        "uniqueId": "APT3",
        "target": "APT3 Phishing Campaign. Retrieved January 14, 2016.",
        "description": "Falcone, R. and Wartell, R.. (2015, July 27). Observations on CVE-2015-3113, Prior Zero-Days and the Pirpi Payload. Retrieved January 22, 2016."
    },
    {
        "uniqueId": "Snip3",
        "target": "Snip3 Crypter, a Highly Evasive RAT Loader. Retrieved September 13, 2023.",
        "description": "The BlackBerry Research and Intelligence Team. (2020, November 12). The CostaRicto Campaign: Cyber-Espionage Outsourced. Retrieved May 24, 2021."
    },
    {
        "uniqueId": "UNC2447",
        "target": "UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021.",
        "description": "CISA. (2021, May 6). Analysis Report (AR21-126A) FiveHands Ransomware. Retrieved June 7, 2021."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 SOREFANG. Retrieved September 29, 2020.",
        "description": "Cylance SPEAR Team. (2017, February 9). Shell Crew Variants Continue to Fly Under Big AV\u2019s Radar. Retrieved February 15, 2017."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021.",
        "description": "Salinas, M., Holguin, J. (2017, June). Evolution of Trickbot. Retrieved July 31, 2018."
    },
    {
        "uniqueId": "10",
        "target": "10 to offer application developers new malware defenses. Retrieved February 12, 2018.",
        "description": "Microsoft. (2021, July 2). Use attack surface reduction rules to prevent malware infection. Retrieved June 24, 2021."
    },
    {
        "uniqueId": "T1111",
        "target": "T1111 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1111",
        "target": "T1111 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 14 April 2023"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS.[4]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used a proprietary tool to intercept one time passwords required for two-factor authentication.[5]"
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$",
        "description": "LAPSUS$ has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval.[6]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors used a custom collection method to intercept two-factor authentication soft tokens.[7]"
    },
    {
        "uniqueId": "S1104",
        "target": "S1104 SLOWPULSE",
        "description": "SLOWPULSE can log credentials on compromised Pulse Secure VPNs during the DSAuth::AceAuthServer::checkUsernamePasswordACE-2FA authentication procedure.[8]"
    },
    {
        "uniqueId": "S0018",
        "target": "S0018 Sykipot",
        "description": "Sykipot is known to contain functionality that enables targeting of smart card technologies to proxy authentication for connections to restricted network resources using detected hardware tokens.[9]"
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Remove smart cards when not in use."
    },
    {
        "uniqueId": "DS0027",
        "target": "DS0027 Driver Driver Load",
        "description": "Monitor for use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior. Similar to Input Capture, keylogging activity can take various forms but can may be detected via installation of a driver."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls associated with polling to intercept keystrokes."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Modification",
        "description": "Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources."
    },
    {
        "uniqueId": "M365",
        "target": "M365 Defender. (2022, March 24). DEV-0537 Criminal Actor Targeting Organizations for Data Exfiltration and Destruction. Retrieved May 17, 2022.",
        "description": "Dantzig, M. v., Schamper, E. (2019, December 19). Operation Wocao: Shining a light on one of China\u2019s hidden hacking groups. Retrieved October 8, 2020."
    },
    {
        "uniqueId": "T1037",
        "target": "T1037 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1037",
        "target": "T1037 Sub-techniques:  T1037.001, T1037.002, T1037.003, T1037.004, T1037.005",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 16 April 2024"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup.[1]"
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke has installed an \"init.d\" startup script to maintain persistence.[2]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "Depending on the Linux distribution and when executing with root permissions, RotaJakiro may install persistence using a .conf file in the /etc/init/ folder.[3]"
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Restrict write access to logon scripts to specific administrators."
    },
    {
        "uniqueId": "M1024",
        "target": "M1024 Restrict Registry Permissions",
        "description": "Ensure proper permissions are set for Registry hives to prevent users from modifying keys for logon scripts that may lead to persistence."
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Object Modification",
        "description": "Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence. Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry key HKEY_CURRENT_USER\\EnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Creation",
        "description": "Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence."
    },
    {
        "uniqueId": "T1036",
        "target": "T1036 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1036",
        "target": "T1036 Sub-techniques:  T1036.001, T1036.002, T1036.003, T1036.004, T1036.005, T1036.006, T1036.007, T1036.008, T1036.009",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 08 March 2024"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can disguise JavaScript files as PDFs.[2]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has renamed the WinRAR utility to avoid detection.[3]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 has disguised a Cobalt Strike beacon as a Flash Installer.[4]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal dropped a decoy payload with a .jpg extension that contained a malicious Visual Basic script.[5]"
    },
    {
        "uniqueId": "S0635",
        "target": "S0635 BoomBox",
        "description": "BoomBox has the ability to mask malicious data strings as PDF files.[6]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has masked executables with document file icons including Word and Adobe PDF.[7]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors named a binary file compareForfor.jpg to disguise it as a JPG file.[8]"
    },
    {
        "uniqueId": "C0018",
        "target": "C0018 C0018",
        "description": "During C0018, AvosLocker was disguised using the victim company name as the filename.[9]"
    },
    {
        "uniqueId": "S0497",
        "target": "S0497 Dacls",
        "description": "The Dacls Mach-O binary has been disguised as a .nib file.[10]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate can masquerade as pirated media content for initial delivery to victims.[11]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla's payload has been renamed PowerShellInfo.exe.[12]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman has used an icon mimicking a text file to mask a malicious executable.[13]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has created accounts disguised as legitimate backup and service accounts as well as an email administration account.[14]"
    },
    {
        "uniqueId": "S0634",
        "target": "S0634 EnvyScout",
        "description": "EnvyScout has used folder icons for malicious files to lure victims into opening them.[6]"
    },
    {
        "uniqueId": "S0512",
        "target": "S0512 FatDuke",
        "description": "FatDuke has attempted to mimic a compromised user's traffic by using the same user agent as the installed browser.[15]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has masqueraded staged data by using the Windows certutil utility to generate fake Base64 encoded certificates with the input file.[16][17]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro can download malicious files with a .tmp extension and append them with .exe prior to execution.[18]"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb can masquerade the output of C2 commands as a fake, but legitimately formatted WebP file.[19]"
    },
    {
        "uniqueId": "G0140",
        "target": "G0140 LazyScripter",
        "description": "LazyScripter has used several different security software icons to disguise executables.[20]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has used esentutl to change file extensions to their true type that were masquerading as .txt files.[21]"
    },
    {
        "uniqueId": "S1015",
        "target": "S1015 Milan",
        "description": "Milan has used an executable named companycatalogue to appear benign.[22]"
    },
    {
        "uniqueId": "S0637",
        "target": "S0637 NativeZone",
        "description": "NativeZone has, upon execution, displayed a message box that appears to be related to a Ukrainian electronic document management system.[23]"
    },
    {
        "uniqueId": "G0133",
        "target": "G0133 Nomadic Octopus",
        "description": "Nomadic Octopus attempted to make Octopus appear as a Telegram Messenger with a Russian interface.[24]"
    },
    {
        "uniqueId": "S0368",
        "target": "S0368 NotPetya",
        "description": "NotPetya drops PsExec with the filename dllhost.dat.[25]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used .doc file extensions to mask malicious executables.[26]"
    },
    {
        "uniqueId": "C0016",
        "target": "C0016 Operation Dust Storm",
        "description": "For Operation Dust Storm, the threat actors disguised some executables as JPG files.[27]"
    },
    {
        "uniqueId": "C0006",
        "target": "C0006 Operation Honeybee",
        "description": "During Operation Honeybee, the threat actors modified the MaoCheng dropper so its icon appeared as a Word document.[28]"
    },
    {
        "uniqueId": "G0068",
        "target": "G0068 PLATINUM",
        "description": "PLATINUM has renamed rar.exe to avoid detection.[29]"
    },
    {
        "uniqueId": "S1046",
        "target": "S1046 PowGoop",
        "description": "PowGoop has disguised a PowerShell script as a .dat file (goopdate.dat).[30]"
    },
    {
        "uniqueId": "S0565",
        "target": "S0565 Raindrop",
        "description": "Raindrop was built to include a modified version of 7-Zip source code (including associated export names) and Far Manager source code.[31][32]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay has masqueraded as a JPG image file.[33]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession has used a file named English.rtf to appear benign on victim hosts.[34][35]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM has been delivered as archived Windows executable files masquerading as PDF documents.[36]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk can create .dll files that actually contain a Rich Text File format document.[37]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot has renamed malicious binaries as wallpaper.mp4 and slideshow.mp4 to avoid detection.[38][39]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries.[40]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can use a legitimate process name to hide itself.[41]"
    },
    {
        "uniqueId": "G0127",
        "target": "G0127 TA551",
        "description": "TA551 has masked malware DLLs as dat and jpg files.[42]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has disguised their scripts with docker-related file names.[43]"
    },
    {
        "uniqueId": "S0682",
        "target": "S0682 TrailBlazer",
        "description": "TrailBlazer has used filenames that match the name of the compromised system in attempt to avoid detection.[44]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "The TrickBot downloader has used an icon to appear as a Microsoft Word document.[45]"
    },
    {
        "uniqueId": "S0689",
        "target": "S0689 WhisperGate",
        "description": "WhisperGate has been disguised as a JPG extension to avoid detection as a malicious PE file.[46]"
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift",
        "description": "Windshift has used icons mimicking MS Office files to mask malicious executables.[47] Windshift has also attempted to hide executables by changing the file extension to \".scr\" to mimic Windows screensavers.[48]"
    },
    {
        "uniqueId": "S0466",
        "target": "S0466 WindTail",
        "description": "WindTail has used icons mimicking MS Office files to mask payloads.[47]"
    },
    {
        "uniqueId": "S0658",
        "target": "S0658 XCSSET",
        "description": "XCSSET builds a malicious application bundle to resemble Safari through using the Safari icon and Info.plist. [49]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has spoofed legitimate applications in phishing lures and changed file extensions to conceal installation of malware.[50][51]"
    },
    {
        "uniqueId": "M1049",
        "target": "M1049 Antivirus/Antimalware",
        "description": "Anti-virus can be used to automatically quarantine suspicious files."
    },
    {
        "uniqueId": "M1040",
        "target": "M1040 Behavior Prevention on Endpoint",
        "description": "Implement security controls on the endpoint, such as a Host Intrusion Prevention System (HIPS), to identify and prevent execution of potentially malicious files (such as those with mismatching file signatures)."
    },
    {
        "uniqueId": "M1045",
        "target": "M1045 Code Signing",
        "description": "Require signed binaries."
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Use file system access controls to protect folders such as C:\\Windows\\System32."
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Train users not to open email attachments or click unknown links (URLs). Such training fosters more secure habits within your organization and will limit many of the risks."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. [52]"
    },
    {
        "uniqueId": "4104",
        "target": "4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Masquerading.",
        "description": "DS0022 File File Metadata"
    },
    {
        "uniqueId": "4663",
        "target": "4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted file accesses that may be associate with Masquerading.",
        "description": "DS0007 Image Image Metadata"
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls such as fork() which can be abused to masquerade or manipulate process metadata."
    },
    {
        "uniqueId": "DS0003",
        "target": "DS0003 Scheduled Job Scheduled Job Metadata",
        "description": "Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc."
    },
    {
        "uniqueId": "4698",
        "target": "4698 (Security Log - A scheduled task was created) can be used to alert on the creation of scheduled tasks and provides metadata including the task name and task content (as XML).",
        "description": "On Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on invocations of cron, and provides the metadata included when executing the command."
    },
    {
        "uniqueId": "DS0019",
        "target": "DS0019 Service Service Creation",
        "description": "Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "MSTIC. (2021, May 28). Breaking down NOBELIUM\u2019s latest early-stage toolset. Retrieved August 4, 2021."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018.",
        "description": "ClearSky Cyber Security . (2021, August). New Iranian Espionage Campaign By \u201cSiamesekitten\u201d - Lyceum. Retrieved June 6, 2022."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021.",
        "description": "Gross, J. (2016, February 23). Operation Dust Storm. Retrieved December 22, 2021."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021.",
        "description": "Sanmillan, I.. (2020, May 13). Ramsay: A cyber\u2011espionage toolkit tailored for air\u2011gapped networks. Retrieved May 27, 2020."
    },
    {
        "uniqueId": "31",
        "target": "31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021.",
        "description": "Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved April 22, 2019."
    },
    {
        "uniqueId": "T1039",
        "target": "T1039 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1039",
        "target": "T1039 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 11 August 2023"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has collected files from network shared drives.[1]"
    },
    {
        "uniqueId": "S0128",
        "target": "S0128 BADNEWS",
        "description": "When it first starts, BADNEWS crawls the victim's mapped drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.[2]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has exfiltrated files stolen from file shares.[3]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors collected files from network shared drives prior to network encryption.[4]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has collected data of interest from network shares.[5]"
    },
    {
        "uniqueId": "S0050",
        "target": "S0050 CosmicDuke",
        "description": "CosmicDuke steals user files from network shared drives with file extensions and keywords that match a predefined list.[6]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor can collect any files found in the enumerated drivers before sending it to its C2 channel.[7]"
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten",
        "description": "Fox Kitten has searched network shares to access sensitive documents.[8]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group malware has collected Microsoft Office documents from mapped network drives.[9]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has collected data from remote systems by mounting network shares with net use and using Robocopy to transfer data.[10]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can collect data from network drives and stage it for exfiltration.[11]"
    },
    {
        "uniqueId": "G0054",
        "target": "G0054 Sowbug",
        "description": "Sowbug extracted Word documents from a file server on a victim network.[12]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) interacting with network shares."
    },
    {
        "uniqueId": "DS0033",
        "target": "DS0033 Network Share Network Share Access",
        "description": "Monitor for unexpected and abnormal accesses to network shares."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that may search network shares on computers they have compromised to find files of interest. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares."
    },
    {
        "uniqueId": "445",
        "target": "445 traffic can be filtered and even the file path (relative to the share) can be retrieved.",
        "description": "Looking at this activity more closely to obtain an adequate sense of situational awareness may make it possible to detect adversaries moving between hosts in a way that deviates from normal activity. Because SMB traffic is heavy in many environments, this analytic may be difficult to turn into something that can be used to quickly detect an APT. In some cases, it may make more sense to run this analytic in a forensic fashion. Looking through and filtering its output after an intrusion has been discovered may be helpful in identifying the scope of compromise."
    },
    {
        "uniqueId": "T1546",
        "target": "T1546 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1546",
        "target": "T1546 Sub-techniques:  T1546.001, T1546.002, T1546.003, T1546.004, T1546.005, T1546.006, T1546.007, T1546.008, T1546.009, T1546.010, T1546.011, T1546.012, T1546.013, T1546.014, T1546.015, T1546.016",
        "description": "\u24d8"
    },
    {
        "uniqueId": "22",
        "target": "22 January 2020",
        "description": "Last Modified: 01 March 2024"
    },
    {
        "uniqueId": "S1091",
        "target": "S1091 Pacu",
        "description": "Pacu can set up S3 bucket notifications to trigger a malicious Lambda function when a CloudFormation template is uploaded to the bucket. It can also create Lambda functions that trigger upon the creation of users, roles, and groups.[7]"
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root."
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "Perform regular software updates to mitigate exploitation risk."
    },
    {
        "uniqueId": "DS0025",
        "target": "DS0025 Cloud Service Cloud Service Modification",
        "description": "Monitor the creation and modification of cloud resources that may be abused for persistence, such as functions and workflows monitoring cloud events."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Modification",
        "description": "Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
    },
    {
        "uniqueId": "DS0005",
        "target": "DS0005 WMI WMI Creation",
        "description": "Monitor for newly constructed WMI Objects that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events."
    },
    {
        "uniqueId": "T1057",
        "target": "T1057 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1057",
        "target": "T1057 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 16 April 2024"
    },
    {
        "uniqueId": "S0065",
        "target": "S0065 4H RAT",
        "description": "4H RAT has the capability to obtain a listing of running processes (including loaded modules).[3]"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "ADVSTORESHELL can list running processes.[4]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can list the current running processes on the system.[5]"
    },
    {
        "uniqueId": "S1129",
        "target": "S1129 Akira",
        "description": "Akira verifies the deletion of volume shadow copies by checking for the existence of the process ID related to the process created to delete these items.[6]"
    },
    {
        "uniqueId": "G0138",
        "target": "G0138 Andariel",
        "description": "Andariel has used tasklist to enumerate processes and find a specific string.[7]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can enumerate the current process on a compromised host.[8]"
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1",
        "description": "APT1 gathered a list of running processes on the system using tasklist /v.[9]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "An APT28 loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions.[10]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "APT3 has a tool that can list out currently running processes.[11][12]"
    },
    {
        "uniqueId": "G0067",
        "target": "G0067 APT37",
        "description": "APT37's Freenki malware lists running processes using the Microsoft Windows API.[13]"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 leveraged Sysmon to understand the processes, services in the organization.[14]"
    },
    {
        "uniqueId": "G1023",
        "target": "G1023 APT5",
        "description": "APT5 has used Windows-based utilities to carry out tasks including tasklist.exe. [15]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to enumerate loaded modules for a process.[16]."
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth searches for different processes on the system.[17]"
    },
    {
        "uniqueId": "S1087",
        "target": "S1087 AsyncRAT",
        "description": "AsyncRAT can examine running processes to determine if a debugger is present.[18]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon has collected information about running processes.[19]"
    },
    {
        "uniqueId": "S0473",
        "target": "S0473 Avenger",
        "description": "Avenger has the ability to use Tasklist to identify running processes.[20]"
    },
    {
        "uniqueId": "S1053",
        "target": "S1053 AvosLocker",
        "description": "AvosLocker has discovered system processes by calling RmGetList.[21]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can collect a list of running processes by calling CreateToolhelp32Snapshot.[22][23]"
    },
    {
        "uniqueId": "S0638",
        "target": "S0638 Babuk",
        "description": "Babuk has the ability to check running processes on a targeted system.[24][25][26]"
    },
    {
        "uniqueId": "S0414",
        "target": "S0414 BabyShark",
        "description": "BabyShark has executed the tasklist command.[27]"
    },
    {
        "uniqueId": "S0093",
        "target": "S0093 Backdoor.Oldrea",
        "description": "Backdoor.Oldrea collects information about running processes.[28]"
    },
    {
        "uniqueId": "S0031",
        "target": "S0031 BACKSPACE",
        "description": "BACKSPACE may collect information about running processes.[29]"
    },
    {
        "uniqueId": "S0606",
        "target": "S0606 Bad Rabbit",
        "description": "Bad Rabbit can enumerate all running processes to compare hashes.[30]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can retrieve a list of running processes from a compromised machine.[31]"
    },
    {
        "uniqueId": "S0239",
        "target": "S0239 Bankshot",
        "description": "Bankshot identifies processes and collects the process ids.[32]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can identity the current process on a compromised host.[33]"
    },
    {
        "uniqueId": "S0127",
        "target": "S0127 BBSRAT",
        "description": "BBSRAT can list running processes.[34]"
    },
    {
        "uniqueId": "S0017",
        "target": "S0017 BISCUIT",
        "description": "BISCUIT has a command to enumerate running processes and identify their owners.[35]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal can obtain a list of running processes on the victim\u2019s machine.[36][37][38]"
    },
    {
        "uniqueId": "S0069",
        "target": "S0069 BLACKCOFFEE",
        "description": "BLACKCOFFEE has the capability to discover processes.[39]"
    },
    {
        "uniqueId": "S0089",
        "target": "S0089 BlackEnergy",
        "description": "BlackEnergy has gathered a process list by using Tasklist.exe.[40][41][42]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT can collect process filenames and SID authority level.[43]"
    },
    {
        "uniqueId": "S0486",
        "target": "S0486 Bonadan",
        "description": "Bonadan can use the ps command to discover other cryptocurrency miners active on the system.[44]"
    },
    {
        "uniqueId": "S0252",
        "target": "S0252 Brave Prince",
        "description": "Brave Prince lists the running processes.[45]"
    },
    {
        "uniqueId": "S1063",
        "target": "S1063 Brute Ratel C4",
        "description": "Brute Ratel C4 can enumerate all processes and locate specific process IDs (PIDs).[46]"
    },
    {
        "uniqueId": "S1039",
        "target": "S1039 Bumblebee",
        "description": "Bumblebee can identify processes associated with analytical tools.[47][48][49]"
    },
    {
        "uniqueId": "S0482",
        "target": "S0482 Bundlore",
        "description": "Bundlore has used the ps command to list processes.[50]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors used the tasklist /s command as well as taskmanager to obtain a list of running processes.[51]"
    },
    {
        "uniqueId": "S0693",
        "target": "S0693 CaddyWiper",
        "description": "CaddyWiper can obtain a list of current processes.[52]"
    },
    {
        "uniqueId": "S0351",
        "target": "S0351 Cannon",
        "description": "Cannon can obtain a list of processes running on the system.[53][54]"
    },
    {
        "uniqueId": "S0030",
        "target": "S0030 Carbanak",
        "description": "Carbanak lists running processes.[55]"
    },
    {
        "uniqueId": "S0484",
        "target": "S0484 Carberp",
        "description": "Carberp has collected a list of running processes.[56]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon can list the processes on the victim\u2019s machine.[57]"
    },
    {
        "uniqueId": "S0348",
        "target": "S0348 Cardinal RAT",
        "description": "Cardinal RAT contains watchdog functionality that ensures its process is always running, else spawns a new instance.[58]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell can gather a list of processes running on the machine.[59]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower has the ability to list running processes through the use of tasklist.[60]"
    },
    {
        "uniqueId": "S0144",
        "target": "S0144 ChChes",
        "description": "ChChes collects its process identifier (PID) on the victim.[61]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used tasklist to enumerate processes.[62]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling can enumerate processes on a targeted system.[63]"
    },
    {
        "uniqueId": "S0611",
        "target": "S0611 Clop",
        "description": "Clop can enumerate all processes on the victim's machine.[64]"
    },
    {
        "uniqueId": "S1105",
        "target": "S1105 COATHANGER",
        "description": "COATHANGER will query running process information to determine subsequent program execution flow.[65]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike's Beacon payload can collect information on process details.[66][67][68]"
    },
    {
        "uniqueId": "S0244",
        "target": "S0244 Comnie",
        "description": "Comnie uses the tasklist to view running processes on the victim\u2019s machine.[69]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can enumerate through all open processes to search for any that have the string \"sql\" in their process name.[70]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson contains a command to list processes.[71][72][73]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba can enumerate processes running on a victim's machine.[74]"
    },
    {
        "uniqueId": "S0687",
        "target": "S0687 Cyclops Blink",
        "description": "Cyclops Blink can enumerate the process it is currently running under.[75]"
    },
    {
        "uniqueId": "S0497",
        "target": "S0497 Dacls",
        "description": "Dacls can collect data on running and parent processes.[76]"
    },
    {
        "uniqueId": "S0334",
        "target": "S0334 DarkComet",
        "description": "DarkComet can list active processes running on the victim\u2019s machine.[77]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate performs various checks for running processes, including security software by looking for hard-coded process name values.[78]"
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel",
        "description": "Darkhotel malware can collect a list of running processes on a system.[79]"
    },
    {
        "uniqueId": "S1066",
        "target": "S1066 DarkTortilla",
        "description": "DarkTortilla can enumerate a list of running processes on a compromised system.[80]"
    },
    {
        "uniqueId": "G0009",
        "target": "G0009 Deep Panda",
        "description": "Deep Panda uses the Microsoft Tasklist utility to list processes running on systems.[81]"
    },
    {
        "uniqueId": "S0021",
        "target": "S0021 Derusbi",
        "description": "Derusbi collects current and parent process IDs.[82][83]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol has used CreateToolhelp32Snapshot, Process32First, and Process32Next API calls to enumerate the running processes in the system.[84]"
    },
    {
        "uniqueId": "S0600",
        "target": "S0600 Doki",
        "description": "Doki has searched for the current process\u2019s PID.[85]"
    },
    {
        "uniqueId": "S0695",
        "target": "S0695 Donut",
        "description": "Donut includes subprojects that enumerate and identify information about Process Injection candidates.[86]"
    },
    {
        "uniqueId": "S0472",
        "target": "S0472 down_new",
        "description": "down_new has the ability to list running processes on a compromised host.[20]"
    },
    {
        "uniqueId": "S0694",
        "target": "S0694 DRATzarus",
        "description": "DRATzarus can enumerate and examine running processes to determine if a debugger is present.[87]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack\u2019s dropper can list all running processes.[88][89]"
    },
    {
        "uniqueId": "S0038",
        "target": "S0038 Duqu",
        "description": "The discovery modules used with Duqu can collect information on process details.[90]"
    },
    {
        "uniqueId": "S0062",
        "target": "S0062 DustySky",
        "description": "DustySky collects information about running processes from victims.[91][92]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca has used Tasklist to obtain information from a compromised host.[93]"
    },
    {
        "uniqueId": "S0605",
        "target": "S0605 EKANS",
        "description": "EKANS looks for processes from a hard-coded list.[94][95][96]"
    },
    {
        "uniqueId": "S0081",
        "target": "S0081 Elise",
        "description": "Elise enumerates processes via the tasklist command.[97]"
    },
    {
        "uniqueId": "S0064",
        "target": "S0064 ELMER",
        "description": "ELMER is capable of performing process listings.[98]"
    },
    {
        "uniqueId": "S0367",
        "target": "S0367 Emotet",
        "description": "Emotet has been observed enumerating local processes.[99]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can find information about processes running on local and remote systems.[100][101]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic uses the tasklist /v command to obtain a list of processes.[102][103]"
    },
    {
        "uniqueId": "S0396",
        "target": "S0396 EvilBunny",
        "description": "EvilBunny has used EnumProcesses() to identify how many process are running in the environment.[104]"
    },
    {
        "uniqueId": "S0512",
        "target": "S0512 FatDuke",
        "description": "FatDuke can list running processes on the localhost.[105]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT collects a list of running processes.[106]"
    },
    {
        "uniqueId": "S0355",
        "target": "S0355 Final1stspy",
        "description": "Final1stspy obtains a list of running processes.[107]"
    },
    {
        "uniqueId": "S0182",
        "target": "S0182 FinFisher",
        "description": "FinFisher checks its parent process for indications that it is running in a sandbox setup.[108][109]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has been used to run the tasklist command on a compromised system.[110]"
    },
    {
        "uniqueId": "S0661",
        "target": "S0661 FoggyWeb",
        "description": "FoggyWeb's loader can enumerate all Common Language Runtimes (CLRs) and running Application Domains in the compromised AD FS server's Microsoft.IdentityServer.ServiceHost.exe process.[111]"
    },
    {
        "uniqueId": "S0503",
        "target": "S0503 FrameworkPOS",
        "description": "FrameworkPOS can enumerate and exclude selected processes on a compromised host to speed execution of memory scraping.[112]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors used Empire to obtain a list of all running processes.[101]"
    },
    {
        "uniqueId": "S0277",
        "target": "S0277 FruitFly",
        "description": "FruitFly has the ability to list processes on the system.[113]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream has the ability to discover processes, including Bka.exe and BkavUtil.exe.[114]"
    },
    {
        "uniqueId": "C0007",
        "target": "C0007 FunnyDream",
        "description": "During FunnyDream, the threat actors used Tasklist on targeted systems.[114]"
    },
    {
        "uniqueId": "S0410",
        "target": "S0410 Fysbis",
        "description": "Fysbis can collect information about running processes.[115]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has used tools to enumerate processes on target hosts including Process Explorer.[116][117]"
    },
    {
        "uniqueId": "S0666",
        "target": "S0666 Gelsemium",
        "description": "Gelsemium can enumerate running processes.[118]"
    },
    {
        "uniqueId": "S0049",
        "target": "S0049 GeminiDuke",
        "description": "GeminiDuke collects information on running processes and environment variables from the victim.[119]"
    },
    {
        "uniqueId": "S0460",
        "target": "S0460 Get2",
        "description": "Get2 has the ability to identify running processes on an infected host.[120]"
    },
    {
        "uniqueId": "S0032",
        "target": "S0032 gh0st RAT",
        "description": "gh0st RAT has the capability to list processes.[121]"
    },
    {
        "uniqueId": "S0249",
        "target": "S0249 Gold Dragon",
        "description": "Gold Dragon checks the running processes on the victim\u2019s machine.[45]"
    },
    {
        "uniqueId": "S0477",
        "target": "S0477 Goopy",
        "description": "Goopy has checked for the Google Updater process to ensure Goopy was loaded properly.[122]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can identify installed security tools based on process names.[123]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT lists the running processes on the system.[124]"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM has used tasklist to enumerate processes.[125]"
    },
    {
        "uniqueId": "S0151",
        "target": "S0151 HALFBAKED",
        "description": "HALFBAKED can obtain information about running processes on the victim.[126]"
    },
    {
        "uniqueId": "S0617",
        "target": "S0617 HELLOKITTY",
        "description": "HELLOKITTY can search for specific processes to terminate.[127]"
    },
    {
        "uniqueId": "S0170",
        "target": "S0170 Helminth",
        "description": "Helminth has used Tasklist to get information on processes.[10]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has enumerated processes on targeted systems.[128]"
    },
    {
        "uniqueId": "S1027",
        "target": "S1027 Heyoka Backdoor",
        "description": "Heyoka Backdoor can gather process information.[129]"
    },
    {
        "uniqueId": "G0126",
        "target": "G0126 Higaisa",
        "description": "Higaisa\u2019s shellcode attempted to find the process ID of the current process.[130]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to list running processes on the infected host.[131]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can monitor processes.[132][133]"
    },
    {
        "uniqueId": "S0278",
        "target": "S0278 iKitten",
        "description": "iKitten lists the current processes running.[113]"
    },
    {
        "uniqueId": "S0434",
        "target": "S0434 Imminent Monitor",
        "description": "Imminent Monitor has a \"Process Watcher\" feature to monitor processes in case the client ever crashes or gets closed.[134]"
    },
    {
        "uniqueId": "G0100",
        "target": "G0100 Inception",
        "description": "Inception has used a reconnaissance module to identify active processes and other associated loaded modules.[135]"
    },
    {
        "uniqueId": "S1072",
        "target": "S1072 Industroyer2",
        "description": "Industroyer2 has the ability to cyclically enumerate running processes such as PServiceControl.exe, PService_PDD.exe, and other targets supplied through a hardcoded configuration.[136]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can obtain a list of running processes.[137][138]"
    },
    {
        "uniqueId": "S0581",
        "target": "S0581 IronNetInjector",
        "description": "IronNetInjector can identify processes via C# methods such as GetProcessesByName and running Tasklist with the Python os.popen function.[139]"
    },
    {
        "uniqueId": "S0015",
        "target": "S0015 Ixeshe",
        "description": "Ixeshe can list running processes.[140]"
    },
    {
        "uniqueId": "S0528",
        "target": "S0528 Javali",
        "description": "Javali can monitor processes for open browsers and custom banking applications.[141]"
    },
    {
        "uniqueId": "S0044",
        "target": "S0044 JHUHUGIT",
        "description": "JHUHUGIT obtains a list of running processes on the victim.[142][143]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "JPIN can list running processes.[144]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can query and kill system processes.[145]"
    },
    {
        "uniqueId": "S0088",
        "target": "S0088 Kasidet",
        "description": "Kasidet has the ability to search for a given process name in processes currently running in the system.[146]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar obtains a list of running processes through WMI querying and the ps command.[147]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang performs process discovery using tasklist commands.[148][149]"
    },
    {
        "uniqueId": "S0271",
        "target": "S0271 KEYMARBLE",
        "description": "KEYMARBLE can obtain a list of running processes on the system.[150]"
    },
    {
        "uniqueId": "S0607",
        "target": "S0607 KillDisk",
        "description": "KillDisk has called GetCurrentProcess.[151]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky can gather a list of all processes running on a victim's machine.[152]"
    },
    {
        "uniqueId": "S0599",
        "target": "S0599 Kinsing",
        "description": "Kinsing has used ps to list processes.[153]"
    },
    {
        "uniqueId": "S0162",
        "target": "S0162 Komplex",
        "description": "The OsInfo function in Komplex collects a running process list.[154]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI has used the command cmd /c tasklist to get a snapshot of the current processes on the target machine.[155][156]"
    },
    {
        "uniqueId": "S1075",
        "target": "S1075 KOPILUWAK",
        "description": "KOPILUWAK can enumerate current running processes on the targeted machine.[157]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs collects a list of running services with the command tasklist /v.[158]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Several Lazarus Group malware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used by Lazarus Group also gathers process times.[159][160][161][162][76][163]"
    },
    {
        "uniqueId": "S0211",
        "target": "S0211 Linfo",
        "description": "Linfo creates a backdoor through which remote attackers can retrieve a list of running processes.[164]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar has a plugin designed to obtain a list of processes.[165][166]"
    },
    {
        "uniqueId": "S0582",
        "target": "S0582 LookBack",
        "description": "LookBack can list running processes.[167]"
    },
    {
        "uniqueId": "S0451",
        "target": "S0451 LoudMiner",
        "description": "LoudMiner used the ps command to monitor the running processes on the system.[168]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can identify the process that owns remote connections.[169]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete has a component to check for running processes to look for web browsers.[170]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa can enumerate running processes.[171]"
    },
    {
        "uniqueId": "S1048",
        "target": "S1048 macOS.OSAMiner",
        "description": "macOS.OSAMiner has used ps ax | grep <name> | grep -v grep | ... and ps ax | grep -E... to conduct process discovery.[172]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can enumerate running processes on a machine.[173]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound malware can list running processes.[174]"
    },
    {
        "uniqueId": "S0652",
        "target": "S0652 MarkiRAT",
        "description": "MarkiRAT can search for different processes on a system.[175]"
    },
    {
        "uniqueId": "S0449",
        "target": "S0449 Maze",
        "description": "Maze has gathered all of the running system processes.[176]"
    },
    {
        "uniqueId": "S1059",
        "target": "S1059 metaMain",
        "description": "metaMain can enumerate the processes that run on the platform.[173][177]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo has performed process name checks and has monitored applications.[178]"
    },
    {
        "uniqueId": "S0688",
        "target": "S0688 Meteor",
        "description": "Meteor can check if a specific process is running, such as Kaspersky's avp.exe.[179]"
    },
    {
        "uniqueId": "S1122",
        "target": "S1122 Mispadu",
        "description": "Mispadu can enumerate the running processes on a compromised host.[180]"
    },
    {
        "uniqueId": "S0079",
        "target": "S0079 MobileOrder",
        "description": "MobileOrder has a command to upload information about all running processes to its C2 server.[181]"
    },
    {
        "uniqueId": "G0021",
        "target": "G0021 Molerats",
        "description": "Molerats actors obtained a list of active processes on the victim and sent them to C2 servers.[91]"
    },
    {
        "uniqueId": "S0149",
        "target": "S0149 MoonWind",
        "description": "MoonWind has a command to return a list of running processes.[182]"
    },
    {
        "uniqueId": "S0256",
        "target": "S0256 Mosquito",
        "description": "Mosquito runs tasklist to obtain running processes.[183]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used malware to obtain a list of running processes on the system.[184][185]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has used tasklist /v to determine active process information.[186]"
    },
    {
        "uniqueId": "S0247",
        "target": "S0247 NavRAT",
        "description": "NavRAT uses tasklist /v to check running processes.[187]"
    },
    {
        "uniqueId": "S0630",
        "target": "S0630 Nebulae",
        "description": "Nebulae can enumerate processes on a target system.[188]"
    },
    {
        "uniqueId": "S0034",
        "target": "S0034 NETEAGLE",
        "description": "NETEAGLE can send process listings over the C2 channel.[29]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can discover processes on compromised hosts.[189]"
    },
    {
        "uniqueId": "S1090",
        "target": "S1090 NightClub",
        "description": "NightClub has the ability to use GetWindowThreadProcessId to identify the process behind a specified window.[190]"
    },
    {
        "uniqueId": "S1100",
        "target": "S1100 Ninja",
        "description": "Ninja can enumerate processes on a targeted host.[191][192]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT can search a list of running processes for Tr.exe.[193]"
    },
    {
        "uniqueId": "S1107",
        "target": "S1107 NKAbuse",
        "description": "NKAbuse will check victim systems to ensure only one copy of the malware is running.[194]"
    },
    {
        "uniqueId": "S0644",
        "target": "S0644 ObliqueRAT",
        "description": "ObliqueRAT can check for blocklisted process names on a compromised host.[195]"
    },
    {
        "uniqueId": "S0346",
        "target": "S0346 OceanSalt",
        "description": "OceanSalt can collect the name and ID for every process running on the system.[196]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has run tasklist on a victim's machine.[197]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the tasklist command as part of their advanced reconnaissance.[198]"
    },
    {
        "uniqueId": "C0006",
        "target": "C0006 Operation Honeybee",
        "description": "During Operation Honeybee, the threat actors obtained a list of running processes on a victim machine using cmd /c tasklist > %temp%\\temp.ini.[199]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, the threat actors used tasklist to collect a list of running processes on an infected system.[200]"
    },
    {
        "uniqueId": "S0229",
        "target": "S0229 Orz",
        "description": "Orz can gather a process list from the victim.[201]"
    },
    {
        "uniqueId": "S1017",
        "target": "S1017 OutSteel",
        "description": "OutSteel can identify running processes on a compromised host.[202]"
    },
    {
        "uniqueId": "S0626",
        "target": "S0626 P8RAT",
        "description": "P8RAT can check for specific processes associated with virtual environments.[203]"
    },
    {
        "uniqueId": "S0664",
        "target": "S0664 Pandora",
        "description": "Pandora can monitor processes on a compromised host.[204]"
    },
    {
        "uniqueId": "S0208",
        "target": "S0208 Pasam",
        "description": "Pasam creates a backdoor through which remote attackers can retrieve lists of running processes.[205]"
    },
    {
        "uniqueId": "S1050",
        "target": "S1050 PcShare",
        "description": "PcShare can obtain a list of running processes on a compromised host.[114]"
    },
    {
        "uniqueId": "S0517",
        "target": "S0517 Pillowmint",
        "description": "Pillowmint can iterate through running processes every six seconds collecting a list of processes to capture from later.[206]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon can iterate over the running processes to find a suitable injection target.[207]"
    },
    {
        "uniqueId": "S0254",
        "target": "S0254 PLAINTEE",
        "description": "PLAINTEE performs the tasklist command to list running processes.[208]"
    },
    {
        "uniqueId": "S0435",
        "target": "S0435 PLEAD",
        "description": "PLEAD has the ability to list processes on the compromised host.[209]"
    },
    {
        "uniqueId": "S0013",
        "target": "S0013 PlugX",
        "description": "PlugX has a module to list the processes running on a machine.[210]"
    },
    {
        "uniqueId": "S0428",
        "target": "S0428 PoetRAT",
        "description": "PoetRAT has the ability to list all running processes.[211]"
    },
    {
        "uniqueId": "S0216",
        "target": "S0216 POORAIM",
        "description": "POORAIM can enumerate processes.[212]"
    },
    {
        "uniqueId": "G0033",
        "target": "G0033 Poseidon Group",
        "description": "After compromising a victim, Poseidon Group lists all running processes.[213]"
    },
    {
        "uniqueId": "S0139",
        "target": "S0139 PowerDuke",
        "description": "PowerDuke has a command to list the victim's processes.[214]"
    },
    {
        "uniqueId": "S0441",
        "target": "S0441 PowerShower",
        "description": "PowerShower has the ability to deploy a reconnaissance module to retrieve a list of the active processes.[215]"
    },
    {
        "uniqueId": "S0194",
        "target": "S0194 PowerSploit",
        "description": "PowerSploit's Get-ProcessTokenPrivilege Privesc-PowerUp module can enumerate privileges for a given process.[216][217]"
    },
    {
        "uniqueId": "S0393",
        "target": "S0393 PowerStallion",
        "description": "PowerStallion has been used to monitor process lists.[218]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS has used get_tasklist to discover processes on the compromised host.[219]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER may collect process information by running tasklist on a victim.[220]"
    },
    {
        "uniqueId": "S0238",
        "target": "S0238 Proxysvc",
        "description": "Proxysvc lists processes running on the system.[162]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy can list the running processes and get the process ID and parent process\u2019s ID.[221]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot has the ability to check running processes.[222]"
    },
    {
        "uniqueId": "S0629",
        "target": "S0629 RainyDay",
        "description": "RainyDay can enumerate processes on a target system.[188]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can gather a list of running processes by using Tasklist.[223]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA lists the system\u2019s processes.[224][225]"
    },
    {
        "uniqueId": "S0662",
        "target": "S0662 RCSession",
        "description": "RCSession can identify processes based on PID.[226]"
    },
    {
        "uniqueId": "S0125",
        "target": "S0125 Remsec",
        "description": "Remsec can obtain a process list from the victim.[227]"
    },
    {
        "uniqueId": "S0448",
        "target": "S0448 Rising Sun",
        "description": "Rising Sun can enumerate all running processes and process information on an infected machine.[228]"
    },
    {
        "uniqueId": "G0106",
        "target": "G0106 Rocke",
        "description": "Rocke can detect a running process's PID on the infected machine.[229]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin checks the running processes for evidence it may be running in a sandbox environment. It specifically enumerates processes for Wireshark and Sysinternals.[230]"
    },
    {
        "uniqueId": "S0240",
        "target": "S0240 ROKRAT",
        "description": "ROKRAT can list the current running processes on the system.[231][232]"
    },
    {
        "uniqueId": "S1078",
        "target": "S1078 RotaJakiro",
        "description": "RotaJakiro can monitor the /proc/[PID] directory of known RotaJakiro processes as a part of its persistence when executing with non-root permissions. If the process is found dead, it resurrects the process. RotaJakiro processes can be matched to an associated Advisory Lock, in the /proc/locks folder, to ensure it doesn't spawn more than one process.[233]"
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal can use GetCurrentProcess to enumerate processes.[234]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can obtain information about process integrity levels.[235]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk has called CreateToolhelp32Snapshot to enumerate all running processes.[236]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot has enumerated running processes on a compromised host to determine if it is running under the process name dfrgui.exe.[202]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has the ability to execute the tasklist command.[237]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot can enumerate a list of running processes on a compromised machine.[238]"
    },
    {
        "uniqueId": "S0345",
        "target": "S0345 Seasalt",
        "description": "Seasalt has a command to perform a process listing.[35]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has collected the PID of a malicious process.[239]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter listed all running processes on the machine.[240]"
    },
    {
        "uniqueId": "S0063",
        "target": "S0063 SHOTPUT",
        "description": "SHOTPUT has a command to obtain a process listing.[241]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has used tools to identify running processes on the victim's machine.[242]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can enumerate processes, including properties to determine if they have the Common Language Runtime (CLR) loaded.[243]"
    },
    {
        "uniqueId": "S0468",
        "target": "S0468 Skidmap",
        "description": "Skidmap has monitored critical processes to ensure resiliency.[244]"
    },
    {
        "uniqueId": "S0533",
        "target": "S0533 SLOTHFULMEDIA",
        "description": "SLOTHFULMEDIA has enumerated processes by ID, name, or privileges.[245]"
    },
    {
        "uniqueId": "S1124",
        "target": "S1124 SocGholish",
        "description": "SocGholish can list processes on targeted hosts.[246]"
    },
    {
        "uniqueId": "S0273",
        "target": "S0273 Socksbot",
        "description": "Socksbot can list all running processes.[247]"
    },
    {
        "uniqueId": "S0627",
        "target": "S0627 SodaMaster",
        "description": "SodaMaster can search a list of running processes.[203]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "During the SolarWinds Compromise, APT29 used multiple command-line utilities to enumerate running processes.[248][249][250]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can use the getprocesslist command to enumerate processes on a compromised host.[251][127][252]"
    },
    {
        "uniqueId": "S0516",
        "target": "S0516 SoreFang",
        "description": "SoreFang can enumerate processes on a victim machine through use of Tasklist.[253]"
    },
    {
        "uniqueId": "G0038",
        "target": "G0038 Stealth Falcon",
        "description": "Stealth Falcon malware gathers a list of running processes.[254]"
    },
    {
        "uniqueId": "S0142",
        "target": "S0142 StreamEx",
        "description": "StreamEx has the ability to enumerate processes.[255]"
    },
    {
        "uniqueId": "S0491",
        "target": "S0491 StrongPity",
        "description": "StrongPity can determine if a user is logged in by checking to see if explorer.exe is running.[256]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST collected a list of process names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.[257]"
    },
    {
        "uniqueId": "S0562",
        "target": "S0562 SUNSPOT",
        "description": "SUNSPOT monitored running processes for instances of MsBuild.exe by hashing the name of each running process and comparing it to the corresponding value 0x53D525. It also extracted command-line arguments and individual arguments from the running MsBuild.exe process to identify the directory path of the Orion software Visual Studio solution.[258]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can collect a list of running processes from an infected host.[259]"
    },
    {
        "uniqueId": "S0018",
        "target": "S0018 Sykipot",
        "description": "Sykipot may gather a list of running processes by running tasklist /v.[260]"
    },
    {
        "uniqueId": "S0242",
        "target": "S0242 SynAck",
        "description": "SynAck enumerates all running processes.[261][262]"
    },
    {
        "uniqueId": "S0464",
        "target": "S0464 SYSCON",
        "description": "SYSCON has the ability to use Tasklist to list running processes.[263]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can collect information about running processes.[264]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor can use GetCurrentProcessId for process discovery.[265]"
    },
    {
        "uniqueId": "S0586",
        "target": "S0586 TAINTEDSCRIBE",
        "description": "TAINTEDSCRIBE can execute ProcessList for process discovery.[266]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to identify running processes and associated plugins on an infected host.[267]"
    },
    {
        "uniqueId": "S0057",
        "target": "S0057 Tasklist",
        "description": "Tasklist can be used to discover processes running on a system.[268]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has searched for rival malware and removes it if found.[269] TeamTNT has also searched for running processes containing the strings aliyun or liyun to identify machines running Alibaba Cloud Security tools.[270]"
    },
    {
        "uniqueId": "S0595",
        "target": "S0595 ThiefQuest",
        "description": "ThiefQuest obtains a list of running processes using the function kill_unwanted.[271]"
    },
    {
        "uniqueId": "G1022",
        "target": "G1022 ToddyCat",
        "description": "ToddyCat has run cmd /c start /b tasklist to enumerate processes.[192]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot uses module networkDll for process list discovery.[272][273]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can use Tasklist to collect a list of running tasks.[28][274]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper is capable of enumerating the running processes on the system using pslist.[275][276]"
    },
    {
        "uniqueId": "S0436",
        "target": "S0436 TSCookie",
        "description": "TSCookie has the ability to list processes on the infected host.[277]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover running processes using the tasklist /v command.[102] Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes.[218]"
    },
    {
        "uniqueId": "S0333",
        "target": "S0333 UBoatRAT",
        "description": "UBoatRAT can list running processes on the system.[278]"
    },
    {
        "uniqueId": "S0022",
        "target": "S0022 Uroburos",
        "description": "Uroburos can use its Process List command to enumerate processes on compromised hosts.[279]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has gathered information about running processes.[280][281]"
    },
    {
        "uniqueId": "S0452",
        "target": "S0452 USBferry",
        "description": "USBferry can use tasklist to gather information about the process running on the infected system.[276]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has the ability to enumerate running processes on a compromised host.[282]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN can get a list of the processes and running tasks on the system.[283]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer can gather a list of processes.[284]"
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon",
        "description": "Volt Typhoon has enumerated running processes on targeted systems.[285][286]"
    },
    {
        "uniqueId": "S0670",
        "target": "S0670 WarzoneRAT",
        "description": "WarzoneRAT can obtain a list of processes on a compromised host.[287]"
    },
    {
        "uniqueId": "S0579",
        "target": "S0579 Waterbear",
        "description": "Waterbear can identify the process for a specific security product.[288]"
    },
    {
        "uniqueId": "G0112",
        "target": "G0112 Windshift",
        "description": "Windshift has used malware to enumerate active processes.[289]"
    },
    {
        "uniqueId": "S0219",
        "target": "S0219 WINERACK",
        "description": "WINERACK can enumerate processes.[212]"
    },
    {
        "uniqueId": "S0059",
        "target": "S0059 WinMM",
        "description": "WinMM sets a WH_CBT Windows hook to collect information on process creation.[290]"
    },
    {
        "uniqueId": "S0141",
        "target": "S0141 Winnti for Windows",
        "description": "Winnti for Windows can check if the explorer.exe process is responsible for calling its install function.[291]"
    },
    {
        "uniqueId": "G0044",
        "target": "G0044 Winnti Group",
        "description": "Winnti Group looked for a specific process running on infected servers.[292]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT can call NtQuerySystemProcessInformation with SystemProcessInformation to enumerate all running processes, including associated information such as PID, parent PID, image name, and owner.[293]"
    },
    {
        "uniqueId": "S0161",
        "target": "S0161 XAgentOSX",
        "description": "XAgentOSX contains the getProcessList function to run ps aux to get running processes.[294]"
    },
    {
        "uniqueId": "S0248",
        "target": "S0248 yty",
        "description": "yty gets an output of running processes using the tasklist command.[295]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy uses the tasklist and wmic process get Capture, ExecutablePath commands to gather the processes running on the system.[53][296][54][297][298]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda checks for running processes on the victim\u2019s machine.[299]"
    },
    {
        "uniqueId": "S1114",
        "target": "S1114 ZIPLINE",
        "description": "ZIPLINE can identify running processes and their names.[300]"
    },
    {
        "uniqueId": "S0672",
        "target": "S0672 Zox",
        "description": "Zox has the ability to list processes.[301]"
    },
    {
        "uniqueId": "S0412",
        "target": "S0412 ZxShell",
        "description": "ZxShell has a command, ps, to obtain a listing of processes on the system.[302]"
    },
    {
        "uniqueId": "S1013",
        "target": "S1013 ZxxZ",
        "description": "ZxxZ has created a snapshot of running processes using CreateToolhelp32Snapshot.[303]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls may attempt to get information about running processes on a system."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Unit 42. (2017, December 15). Unit 42 Playbook Viewer. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "11",
        "target": "11 Identified in Targeted Attacks. Retrieved January 14, 2016.",
        "description": "Yates, M. (2017, June 18). APT3 Uncovered: The code evolution of Pirpi. Retrieved September 28, 2017."
    },
    {
        "uniqueId": "APT30",
        "target": "APT30 AND THE MECHANICS OF A LONG-RUNNING CYBER ESPIONAGE OPERATION. Retrieved May 1, 2015.",
        "description": "Mamedov, O. Sinitsyn, F. Ivanov, A.. (2017, October 24). Bad Rabbit ransomware. Retrieved January 28, 2021."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "Sherstobitoff, R. (2018, March 08). Hidden Cobra Targets Turkish Financial Sector With New Bankshot Implant. Retrieved May 18, 2018."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "FireEye Labs/FireEye Threat Intelligence. (2015, May 14). Hiding in Plain Sight: FireEye and Microsoft Expose Obfuscation Tactic. Retrieved January 22, 2016."
    },
    {
        "uniqueId": "BE2",
        "target": "BE2 custom plugins, router abuse, and target profiles. Retrieved March 24, 2016.",
        "description": "Cherepanov, A.. (2016, January 3). BlackEnergy by the SSHBearDoor: attacks against Ukrainian news media and electric industry . Retrieved June 10, 2020."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Miller-Osborn, J. and Grunzweig, J.. (2017, February 16). menuPass Returns with New Malware and New Attacks Against Japanese Academics and Organizations. Retrieved March 1, 2017."
    },
    {
        "uniqueId": "FIN6",
        "target": "FIN6 \u201cFrameworkPOS\u201d: Point-of-Sale Malware Analysis & Internals. Retrieved September 8, 2020.",
        "description": "Patrick Wardle. (n.d.). Mac Malware of 2017. Retrieved September 21, 2018."
    },
    {
        "uniqueId": "TA505",
        "target": "TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020.",
        "description": "FireEye Threat Intelligence. (2015, July 13). Demonstrating Hustle, Chinese APT Groups Quickly Use Zero-Day Vulnerability (CVE-2015-5119) Following Hacking Team Leak. Retrieved January 25, 2016."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017.",
        "description": "McLellan, T. and Moore, J. et al. (2021, April 29). UNC2447 SOMBRAT and FIVEHANDS Ransomware: A Sophisticated Financial Threat. Retrieved June 2, 2021."
    },
    {
        "uniqueId": "10",
        "target": "10 Years. Retrieved July 14, 2022.",
        "description": "Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021."
    },
    {
        "uniqueId": "APT15",
        "target": "APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS. Retrieved April 4, 2018.",
        "description": "US-CERT. (2018, August 09). MAR-10135536-17 \u2013 North Korean Trojan: KEYMARBLE. Retrieved August 16, 2018."
    },
    {
        "uniqueId": "2019",
        "target": "2019 Campaign. Retrieved April 28, 2020.",
        "description": "Threat Intelligence Team. (2021, August 23). New variant of Konni malware used in campaign targetting Russia. Retrieved January 5, 2022."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Backdoor Masquerades as Ethical Hacking Tool. Retrieved February 2, 2022.",
        "description": "BI.ZONE Cyber Threats Research Team. (2021, May 13). From pentest to APT attack: cybercriminal group FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022."
    },
    {
        "uniqueId": "19",
        "target": "19 lures to target Azerbaijan public and private sectors. Retrieved April 27, 2020.",
        "description": "FireEye. (2018, February 20). APT37 (Reaper): The Overlooked North Korean Actor. Retrieved March 1, 2018."
    },
    {
        "uniqueId": "V3",
        "target": "V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.",
        "description": "Sardiwal, M, et al. (2017, December 7). New Targeted Attack in the Middle East by APT34, a Suspected Iranian Threat Group, Using CVE-2017-11882 Exploit. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "APT27",
        "target": "APT27 Turns to Ransomware. Retrieved November 12, 2021.",
        "description": "Kaspersky Lab's Global Research & Analysis Team. (2016, August 9). The ProjectSauron APT. Technical Analysis. Retrieved August 17, 2016."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Financial Security Institute. (2020, February 28). Profiling of TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 Remote Access Trojan: SLOTHFULMEDIA. Retrieved October 2, 2020.",
        "description": "Secureworks. (n.d.). GOLD PRELUDE . Retrieved March 22, 2024."
    },
    {
        "uniqueId": "365",
        "target": "365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021.",
        "description": "CrowdStrike. (2022, January 27). Early Bird Catches the Wormhole: Observations from the StellarParticle Campaign. Retrieved February 7, 2022."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 SOREFANG. Retrieved September 29, 2020.",
        "description": "Marczak, B. and Scott-Railton, J.. (2016, May 29). Keep Calm and (Don\u2019t) Enable Macros: A New Threat Actor Targets UAE Dissidents. Retrieved June 8, 2016."
    },
    {
        "uniqueId": "StrongPity3",
        "target": "StrongPity3 APT. Retrieved July 20, 2020.",
        "description": "FireEye. (2020, December 13). Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor. Retrieved January 4, 2021."
    },
    {
        "uniqueId": "v2",
        "target": "v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021.",
        "description": "USG. (2020, May 12). MAR-10288834-2.v1 \u2013 North Korean Trojan: TAINTEDSCRIBE. Retrieved March 5, 2021."
    },
    {
        "uniqueId": "T1219",
        "target": "T1219 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1219",
        "target": "T1219 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 12 April 2024"
    },
    {
        "uniqueId": "G1024",
        "target": "G1024 Akira",
        "description": "Akira uses legitimate utilities such as AnyDesk and PuTTy for maintaining remote access to victim environments.[6][7]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors installed the AnyDesk remote desktop application onto the compromised network.[8]"
    },
    {
        "uniqueId": "C0018",
        "target": "C0018 C0018",
        "description": "During C0018, the threat actors used AnyDesk to transfer tools between systems.[9][10]"
    },
    {
        "uniqueId": "C0027",
        "target": "C0027 C0027",
        "description": "During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools.[11]"
    },
    {
        "uniqueId": "S0030",
        "target": "S0030 Carbanak",
        "description": "Carbanak has a plugin for VNC and Ammyy Admin Tool.[12]"
    },
    {
        "uniqueId": "G0008",
        "target": "G0008 Carbanak",
        "description": "Carbanak used legitimate programs such as AmmyyAdmin and Team Viewer for remote interactive C2 to target systems.[13]"
    },
    {
        "uniqueId": "G0080",
        "target": "G0080 Cobalt Group",
        "description": "Cobalt Group used the Ammyy Admin tool as well as TeamViewer for remote access, including to preserve remote access if a Cobalt Strike module was lost.[14][15][16]"
    },
    {
        "uniqueId": "G0105",
        "target": "G0105 DarkVishnya",
        "description": "DarkVishnya used DameWare Mini Remote Control for lateral movement.[17]"
    },
    {
        "uniqueId": "S0384",
        "target": "S0384 Dridex",
        "description": "Dridex contains a module for VNC.[18]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor has checked for the LogMein event log in an attempt to encrypt files in remote machines.[19]"
    },
    {
        "uniqueId": "G0120",
        "target": "G0120 Evilnum",
        "description": "EVILNUM has used the malware variant, TerraTV, to run a legitimate TeamViewer application to connect to compromrised machines.[20]"
    },
    {
        "uniqueId": "G0046",
        "target": "G0046 FIN7",
        "description": "FIN7 has utilized the remote management tool Atera to download malware to a compromised system.[21]"
    },
    {
        "uniqueId": "G0115",
        "target": "G0115 GOLD SOUTHFIELD",
        "description": "GOLD SOUTHFIELD has used the cloud-based remote management and monitoring tool \"ConnectWise Control\" to deploy REvil.[22]"
    },
    {
        "uniqueId": "S0601",
        "target": "S0601 Hildegard",
        "description": "Hildegard has established tmate sessions for C2 communications.[23]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used a modified TeamViewer client as a command and control channel.[24][25]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used legitimate applications ScreenConnect and AteraAgent to manage systems remotely and move laterally.[26][27][28]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has installed TeamViewer on targeted systems.[29]"
    },
    {
        "uniqueId": "C0002",
        "target": "C0002 Night Dragon",
        "description": "During Night Dragon, threat actors used several remote administration tools as persistent infiltration channels.[30]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM has the capability to download a VNC module from command and control (C2).[31]"
    },
    {
        "uniqueId": "G0048",
        "target": "G0048 RTM",
        "description": "RTM has used a modified version of TeamViewer and Remote Utilities for remote access.[32]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team has used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers.[33][34]"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider",
        "description": "During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools.[11]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has established tmate sessions for C2 communications.[23][37]"
    },
    {
        "uniqueId": "G0076",
        "target": "G0076 Thrip",
        "description": "Thrip used a cloud-based remote access software called LogMeIn for their attacks.[38]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot uses vncDll module to remote control the victim machine.[39][40]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Consider disabling unnecessary remote connection functionality, including both unapproved software installations and specific features built into supported applications."
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Use application control to mitigate installation and use of unapproved software that can be used for remote access."
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Properly configure firewalls, application firewalls, and proxies to limit outgoing traffic to sites and services used by remote access software."
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion detection and prevention systems that use network signatures may be able to prevent traffic to remote access services."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for applications and processes related to remote admin software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators. Domain Fronting may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions."
    },
    {
        "uniqueId": "2015",
        "target": "2015 Global Threat Report. Retrieved April 11, 2018.",
        "description": "CrySyS Lab. (2013, March 20). TeamSpy \u2013 Obshie manevri. Ispolzovat\u2019 tolko s razreshenija S-a. Retrieved April 11, 2018."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7. Retrieved April 5, 2022.",
        "description": "Tetra Defense. (2020, March). CAUSE AND EFFECT: SODINOKIBI RANSOMWARE ANALYSIS. Retrieved December 14, 2020."
    },
    {
        "uniqueId": "2020",
        "target": "2020 Global Threat Report. Retrieved December 11, 2020.",
        "description": "Peretz, A. and Theck, E. (2021, March 5). Earth Vetala \u2013 MuddyWater Continues to Target Organizations in the Middle East. Retrieved March 18, 2021."
    },
    {
        "uniqueId": "TA450",
        "target": "TA450 Uses Embedded Links in PDF Attachments in Latest Campaign. Retrieved March 27, 2024.",
        "description": "Counter Threat Unit Research Team. (2019, December 29). BRONZE PRESIDENT Targets NGOs. Retrieved April 13, 2021."
    },
    {
        "uniqueId": "T1589",
        "target": "T1589 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1589",
        "target": "T1589 Sub-techniques:  T1589.001, T1589.002, T1589.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "02",
        "target": "02 October 2020",
        "description": "Last Modified: 19 April 2024"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 has conducted targeted surveillance against activists and bloggers.[11]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has researched employees to target for social engineering attacks.[12]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has identified specific potential victims at targeted organizations.[13]"
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$",
        "description": "LAPSUS$ has gathered detailed information of target employees to enhance their social engineering lures.[14]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound has acquired mobile phone numbers of potential targets, possibly for mobile malware or additional phishing operations.[15]"
    },
    {
        "uniqueId": "C0022",
        "target": "C0022 Operation Dream Job",
        "description": "For Operation Dream Job, Lazarus Group conducted extensive reconnaissance research on potential targets.[16]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors targeted people based on their organizational roles and privileges.[17]"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields."
    },
    {
        "uniqueId": "Office365",
        "target": "Office365 ActiveSync Username Enumeration. Retrieved December 9, 2021.",
        "description": "Noah Corradin and Shuyang Wang. (2023, August 1). Behind The Breach: Self-Service Password Reset (SSPR) Abuse in Azure AD. Retrieved March 28, 2024."
    },
    {
        "uniqueId": "000",
        "target": "000 drivers. Retrieved October 19, 2020.",
        "description": "Detectify. (2016, April 28). Slack bot token leakage exposing business critical information. Retrieved October 19, 2020."
    },
    {
        "uniqueId": "773",
        "target": "773 million email addresses, 21 million passwords. Retrieved October 20, 2020.",
        "description": "Amnesty International. (2021, February 24). Vietnamese activists targeted by notorious hacking group. Retrieved March 1, 2021."
    },
    {
        "uniqueId": "M365",
        "target": "M365 Defender. (2022, March 24). DEV-0537 Criminal Actor Targeting Organizations for Data Exfiltration and Destruction. Retrieved May 17, 2022.",
        "description": "Miller, J. et al. (2021, July 13). Operation SpoofedScholars: A Conversation with TA453. Retrieved August 18, 2021."
    },
    {
        "uniqueId": "T1133",
        "target": "T1133 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1133",
        "target": "T1133 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 30 March 2023"
    },
    {
        "uniqueId": "C0028",
        "target": "C0028 2015 Ukraine Electric Power Attack",
        "description": "During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. [5]"
    },
    {
        "uniqueId": "G1024",
        "target": "G1024 Akira",
        "description": "Akira uses compromised VPN accounts for initial access to victim networks.[6]"
    },
    {
        "uniqueId": "G0026",
        "target": "G0026 APT18",
        "description": "APT18 actors leverage legitimate credentials to log into external remote services.[7]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has used Tor and a variety of commercial VPN services to route brute force authentication attempts.[8]"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 has used compromised identities to access networks via VPNs and Citrix.[9][10]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service.[11]"
    },
    {
        "uniqueId": "C0027",
        "target": "C0027 C0027",
        "description": "During C0027, Scattered Spider used Citrix and VPNs to persist in compromised environments.[12]"
    },
    {
        "uniqueId": "C0032",
        "target": "C0032 C0032",
        "description": "During the C0032 campaign, TEMP.Veles used VPN access to persist in the victim environment.[13]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used legitimate credentials to login to an external VPN, Citrix, SSH, and other remote services.[14][15]"
    },
    {
        "uniqueId": "C0004",
        "target": "C0004 CostaRicto",
        "description": "During CostaRicto, the threat actors set up remote tunneling using an SSH tool to maintain access to a compromised environment.[16]"
    },
    {
        "uniqueId": "S0600",
        "target": "S0600 Doki",
        "description": "Doki was executed through an open Docker daemon API port.[17]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.[18][19]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN).[20]"
    },
    {
        "uniqueId": "G0053",
        "target": "G0053 FIN5",
        "description": "FIN5 has used legitimate VPN, Citrix, or VNC credentials to maintain access to a victim environment.[21][22][23]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM has used VPN services, including SoftEther VPN, to access and maintain persistence in victim environments.[24][25]"
    },
    {
        "uniqueId": "G0115",
        "target": "G0115 GOLD SOUTHFIELD",
        "description": "GOLD SOUTHFIELD has used publicly-accessible RDP and remote management and monitoring (RMM) servers to gain access to victim machines.[26]"
    },
    {
        "uniqueId": "S0601",
        "target": "S0601 Hildegard",
        "description": "Hildegard was executed through an unsecure kubelet that allowed anonymous access to the victim environment.[4]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has gained access through VPNs including with compromised accounts and stolen VPN certificates.[27][28]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used RDP to establish persistence.[29]"
    },
    {
        "uniqueId": "S0599",
        "target": "S0599 Kinsing",
        "description": "Kinsing was executed in an Ubuntu container deployed via an open Docker daemon API.[30]"
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$",
        "description": "LAPSUS$ has gained access to internet-facing systems and applications, including virtual private network (VPN), remote desktop protocol (RDP), and virtual desktop infrastructure (VDI) including Citrix. [31][32]"
    },
    {
        "uniqueId": "G0065",
        "target": "G0065 Leviathan",
        "description": "Leviathan has used external remote services such as virtual private networks (VPN) to gain initial access.[33]"
    },
    {
        "uniqueId": "S0362",
        "target": "S0362 Linux Rabbit",
        "description": "Linux Rabbit attempts to gain access to the server via SSH.[34]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can establish an SSH connection from a compromised host to a server.[35]"
    },
    {
        "uniqueId": "C0002",
        "target": "C0002 Night Dragon",
        "description": "During Night Dragon, threat actors used compromised VPN accounts to gain access to victim systems.[36]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig uses remote services such as VPN, Citrix, or OWA to persist in an environment.[37]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors enabled WinRM over HTTP/HTTPS as a backup persistence mechanism using the following command: cscript //nologo \"C:\\Windows\\System32\\winrm.vbs\" set winrm/config/service@{EnableCompatibilityHttpsListener=\"true\"}.[38]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors used stolen credentials to connect to the victim's network via VPN.[39]"
    },
    {
        "uniqueId": "G0034",
        "target": "G0034 Sandworm Team",
        "description": "Sandworm Team has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network. Sandworm Team has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.[40][41][42]"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider",
        "description": "Scattered Spider has leveraged legitimate remote management tools to maintain persistent access.[43]"
    },
    {
        "uniqueId": "C0024",
        "target": "C0024 SolarWinds Compromise",
        "description": "For the SolarWinds Compromise, APT29 used compromised identities to access networks via SSH, VPNs, and other remote access tools.[44][45]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has used open-source tools such as Weave Scope to target exposed Docker API ports and gain initial access to victim environments.[46][47] TeamTNT has also targeted exposed kubelets for Kubernetes environments.[4]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "Threat Group-3390 actors look for and use VPN profiles during an operation to access the network using external VPN services.[48] Threat Group-3390 has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.[49]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure.[50]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Disable or block remotely available services that may be unnecessary."
    },
    {
        "uniqueId": "M1035",
        "target": "M1035 Limit Access to Resource Over Network",
        "description": "Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems."
    },
    {
        "uniqueId": "M1032",
        "target": "M1032 Multi-factor Authentication",
        "description": "Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of Multi-Factor Authentication Interception techniques for some two-factor authentication implementations."
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Metadata",
        "description": "Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours."
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that may use Valid Accounts to access and/or persist within a network using External Remote Services. Use of External Remote Services may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using External Remote Services."
    },
    {
        "uniqueId": "22",
        "target": "22 Secureworks. (n.d.). GOLD SAHARA. Retrieved February 20, 2024.",
        "description": "Adair, S. (2017, February 17). Detecting and Responding to Advanced Threats within Exchange Environments. Retrieved March 20, 2017."
    },
    {
        "uniqueId": "APT29",
        "target": "APT29 targets COVID-19 vaccine development. Retrieved September 29, 2020.",
        "description": "Douglas Bienstock. (2022, August 18). You Can\u2019t Audit Me: APT29 Continues Targeting Microsoft 365. Retrieved February 23, 2023."
    },
    {
        "uniqueId": "APT15",
        "target": "APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS. Retrieved April 4, 2018.",
        "description": "MSTIC. (2021, December 6). NICKEL targeting government organizations across Latin America and Europe. Retrieved March 18, 2022."
    },
    {
        "uniqueId": "M365",
        "target": "M365 Defender. (2022, March 24). DEV-0537 Criminal Actor Targeting Organizations for Data Exfiltration and Destruction. Retrieved May 17, 2022.",
        "description": "Brown, D., et al. (2022, April 28). LAPSUS$: Recent techniques, tactics and procedures. Retrieved December 22, 2022."
    },
    {
        "uniqueId": "APT40",
        "target": "APT40 Actors Associated with China\u2019s MSS Hainan State Security Department. Retrieved August 12, 2021.",
        "description": "Anomali Labs. (2018, December 6). Pulling Linux Rabbit/Rabbot Malware Out of a Hat. Retrieved March 4, 2019."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 - New Targeted Attack in the Middle East. Retrieved December 20, 2017.",
        "description": "Cybereason Nocturnus. (2022, May 4). Operation CuckooBees: Deep-Dive into Stealthy Winnti Techniques. Retrieved September 22, 2022."
    },
    {
        "uniqueId": "3390",
        "target": "3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",
        "description": "Counter Threat Unit Research Team. (2017, June 27). BRONZE UNION Cyberespionage Persists Despite Disclosures. Retrieved July 13, 2017."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "RESOURCES"
    },
    {
        "uniqueId": "2024",
        "target": "2024 MITRE ATT&CK Matrix Poster",
        "description": "Last updated April 2024"
    },
    {
        "uniqueId": "T1591",
        "target": "T1591 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1591",
        "target": "T1591 Sub-techniques:  T1591.001, T1591.002, T1591.003, T1591.004",
        "description": "\u24d8"
    },
    {
        "uniqueId": "02",
        "target": "02 October 2020",
        "description": "Last Modified: 27 August 2021"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others.[3]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group has studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.[4]"
    },
    {
        "uniqueId": "C0022",
        "target": "C0022 Operation Dream Job",
        "description": "For Operation Dream Job, Lazarus Group gathered victim organization information to identify specific targets.[5]"
    },
    {
        "uniqueId": "M1056",
        "target": "M1056 Pre-compromise",
        "description": "This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties."
    },
    {
        "uniqueId": "T1557",
        "target": "T1557 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1557",
        "target": "T1557 Sub-techniques:  T1557.001, T1557.002, T1557.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "11",
        "target": "11 February 2020",
        "description": "Last Modified: 18 April 2024"
    },
    {
        "uniqueId": "S0281",
        "target": "S0281 Dok",
        "description": "Dok proxies web traffic to potentially monitor and alter victim HTTP(S) traffic.[10][11]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used modified versions of PHProxy to examine web traffic between the victim and the accessed website.[12]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Disable legacy network protocols that may be used to intercept network traffic if applicable, especially those that are not needed within an environment."
    },
    {
        "uniqueId": "M1041",
        "target": "M1041 Encrypt Sensitive Information",
        "description": "Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS."
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Use network appliances and host-based security software to block network traffic that is not necessary within the environment, such as legacy protocols that may be leveraged for AiTM conditions."
    },
    {
        "uniqueId": "M1035",
        "target": "M1035 Limit Access to Resource Over Network",
        "description": "Limit access to network infrastructure and resources that can be used to reshape traffic or otherwise produce AiTM conditions."
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level."
    },
    {
        "uniqueId": "M1030",
        "target": "M1030 Network Segmentation",
        "description": "Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity."
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application\u2019s certificate does not match the one expected by the host."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.[13]"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Traffic Content",
        "description": "Monitor network traffic for anomalies associated with known AiTM behavior."
    },
    {
        "uniqueId": "DS0019",
        "target": "DS0019 Service Service Creation",
        "description": "Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as remote logins or process creation events."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Modification",
        "description": "Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \"0\" indicates LLMNR is disabled."
    },
    {
        "uniqueId": "T1649",
        "target": "T1649 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1649",
        "target": "T1649 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "03",
        "target": "03 August 2022",
        "description": "Last Modified: 02 March 2023"
    },
    {
        "uniqueId": "S0677",
        "target": "S0677 AADInternals",
        "description": "AADInternals can create and export various authentication certificates, including those associated with Azure AD joined/registered devices.[8]"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 has abused misconfigured AD CS certificate templates to impersonate admin users and create additional authentication certificates.[9]"
    },
    {
        "uniqueId": "S0002",
        "target": "S0002 Mimikatz",
        "description": "Mimikatz's CRYPTO module can create and export various types of authentication certificates.[10]"
    },
    {
        "uniqueId": "M1015",
        "target": "M1015 Active Directory Configuration",
        "description": "Ensure certificate authorities (CA) are properly secured, including treating CA servers (and other resources hosting CA certificates) as tier 0 assets. Harden abusable CA settings and attributes."
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Check and remediate unneeded existing authentication certificates as well as common abusable misconfigurations of CA settings and permissions, such as AD CS certificate enrollment permissions and published overly permissive certificate templates (which define available settings for created certificates). For example, available AD CS certificate templates can be checked via the Certificate Authority MMC snap-in (certsrv.msc). certutil.exe can also be used to examine various information within an AD CS CA database.[4][11][12]"
    },
    {
        "uniqueId": "M1042",
        "target": "M1042 Disable or Remove Feature or Program",
        "description": "Consider disabling old/dangerous authentication protocols (e.g. NTLM), as well as unnecessary certificate features, such as potentially vulnerable AD CS web and other enrollment server roles.[4]"
    },
    {
        "uniqueId": "M1041",
        "target": "M1041 Encrypt Sensitive Information",
        "description": "Ensure certificates as well as associated private keys are appropriately secured. Consider utilizing additional hardware credential protections such as trusted platform modules (TPM) or hardware security modules (HSM). Enforce HTTPS and enable Extended Protection forAuthentication.[4]"
    },
    {
        "uniqueId": "DS0026",
        "target": "DS0026 Active Directory Active Directory Credential Request",
        "description": "Monitor AD CS certificate requests (ex: EID 4886) as well as issued certificates (ex: EID 4887) for abnormal activity, including unexpected certificate enrollments and signs of abuse within certificate attributes (such as abusable EKUs).[4]"
    },
    {
        "uniqueId": "4900",
        "target": "4900 once a potentially malicious certificate is enrolled).[4]",
        "description": "DS0015 Application Log Application Log Content"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor for the execution of commands and other utilities abused to forge and/or steal certificates and related private keys.[4]"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for attempts to access files that store information about certificates and their associated private keys. For example, personal certificates for users may be stored on disk in folders such as %APPDATA%\\Microsoft\\SystemCertificates\\My\\Certificates\\.[4][1]"
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Monitor certificate-based authentication events, such as EID 4768 when an AD CS certificate is used for Kerberos authentication (especially those that don\u2019t correspond to legitimately issued certificates) or when Secure Channel (Schannel, associated with SSL/TLS) is highlighted as the Logon Process associated with an EID 4624 logon event.[4]"
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Access",
        "description": "Monitor for attempts to access information stored in the Registry about certificates and their associated private keys. For example, user certificates are commonly stored under HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\SystemCertificates.[4][1]"
    },
    {
        "uniqueId": "APT29",
        "target": "APT29 by Taking a Deeper Look at Windows Credential Roaming. Retrieved November 9, 2022.",
        "description": "Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022."
    },
    {
        "uniqueId": "APT29",
        "target": "APT29 Phishing Campaigns. Retrieved August 3, 2022.",
        "description": "Metcalf, S. (2015, November 13). Unofficial Guide to Mimikatz & Command Reference. Retrieved December 23, 2015."
    },
    {
        "uniqueId": "T1552",
        "target": "T1552 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1552",
        "target": "T1552 Sub-techniques:  T1552.001, T1552.002, T1552.003, T1552.004, T1552.005, T1552.006, T1552.007, T1552.008",
        "description": "\u24d8"
    },
    {
        "uniqueId": "04",
        "target": "04 February 2020",
        "description": "Last Modified: 15 April 2024"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth uses an external software known as NetPass to recover passwords. [2]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate uses NirSoft tools to steal user credentials from the infected machine.[3] NirSoft tools are executed via process hollowing in a newly-created instance of vbc.exe or regasm.exe."
    },
    {
        "uniqueId": "S1091",
        "target": "S1091 Pacu",
        "description": "Pacu can search for sensitive data: for example, in Code Build environment variables, EC2 user data, and Cloud Formation templates.[4]"
    },
    {
        "uniqueId": "M1015",
        "target": "M1015 Active Directory Configuration",
        "description": "Remove vulnerable Group Policy Preferences.[5]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found."
    },
    {
        "uniqueId": "M1041",
        "target": "M1041 Encrypt Sensitive Information",
        "description": "When possible, store keys on separate cryptographic hardware instead of on the local system."
    },
    {
        "uniqueId": "M1037",
        "target": "M1037 Filter Network Traffic",
        "description": "Limit access to the Instance Metadata API. A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.[6]"
    },
    {
        "uniqueId": "M1035",
        "target": "M1035 Limit Access to Resource Over Network",
        "description": "Limit network access to sensitive services, such as the Instance Metadata API."
    },
    {
        "uniqueId": "M1028",
        "target": "M1028 Operating System Configuration",
        "description": "There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:set +o history and set -o history to start logging again;unset HISTFILE being added to a user's .bash_rc file; andln -s /dev/null ~/.bash_history to write commands to /dev/nullinstead."
    },
    {
        "uniqueId": "M1027",
        "target": "M1027 Password Policies",
        "description": "Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files."
    },
    {
        "uniqueId": "M1026",
        "target": "M1026 Privileged Account Management",
        "description": "If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Restrict file shares to specific directories with access only to necessary users."
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "Apply patch KB2962486 which prevents credentials from being stored in GPPs.[7][8]"
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.[9]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's .bash_history is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like cat ~/.bash_history."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Authentication",
        "description": "Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Access",
        "description": "Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials."
    },
    {
        "uniqueId": "T1211",
        "target": "T1211 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1211",
        "target": "T1211 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 15 October 2023"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 has used CVE-2015-4902 to bypass security features.[4][5]"
    },
    {
        "uniqueId": "M1048",
        "target": "M1048 Application Isolation and Sandboxing",
        "description": "Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. [6]"
    },
    {
        "uniqueId": "M1050",
        "target": "M1050 Exploit Protection",
        "description": "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. [7] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. [8] Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion."
    },
    {
        "uniqueId": "M1019",
        "target": "M1019 Threat Intelligence Program",
        "description": "Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization."
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "Update software regularly by employing patch management for internal enterprise endpoints and servers."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes."
    },
    {
        "uniqueId": "APT28",
        "target": "APT28 Under the Scope. Retrieved February 23, 2017.",
        "description": "Anthe, C. et al. (2015, October 19). Microsoft Security Intelligence Report Volume 19. Retrieved December 23, 2015."
    },
    {
        "uniqueId": "000",
        "target": "000 at Pwn2Own hacking contest - updated. Retrieved March 12, 2018.",
        "description": "Nunez, N. (2017, August 9). Moving Beyond EMET II \u2013 Windows Defender Exploit Guard. Retrieved March 12, 2018."
    },
    {
        "uniqueId": "T1016",
        "target": "T1016 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1016",
        "target": "T1016 Sub-techniques:  T1016.001, T1016.002",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 28 July 2023"
    },
    {
        "uniqueId": "S1028",
        "target": "S1028 Action RAT",
        "description": "Action RAT has the ability to collect the MAC address of an infected host.[3]"
    },
    {
        "uniqueId": "S0552",
        "target": "S0552 AdFind",
        "description": "AdFind can extract subnet information from Active Directory.[4][5][6]"
    },
    {
        "uniqueId": "G0018",
        "target": "G0018 admin@338",
        "description": "admin@338 actors used the following command after exploiting a machine with LOWBALL malware to acquire information about local networks: ipconfig /all >> %temp%\\download[7]"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can collect the IP address of the victim machine and spawn instances of netsh.exe to enumerate wireless settings.[8][9]"
    },
    {
        "uniqueId": "S0092",
        "target": "S0092 Agent.btz",
        "description": "Agent.btz collects the network adapter\u2019s IP and MAC address as well as IP addresses of the network adapter\u2019s default gateway, primary/secondary WINS, DHCP, and DNS servers, and saves them into a log file.[10]"
    },
    {
        "uniqueId": "S1025",
        "target": "S1025 Amadey",
        "description": "Amadey can identify the IP address of a victim machine.[11]"
    },
    {
        "uniqueId": "S0504",
        "target": "S0504 Anchor",
        "description": "Anchor can determine the public IP and location of a compromised host.[12]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can identify the IP of a targeted system.[13]"
    },
    {
        "uniqueId": "G0006",
        "target": "G0006 APT1",
        "description": "APT1 used the ipconfig /all command to gather network configuration information.[14]"
    },
    {
        "uniqueId": "G0073",
        "target": "G0073 APT19",
        "description": "APT19 used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim\u2019s machine.[15]"
    },
    {
        "uniqueId": "G0022",
        "target": "G0022 APT3",
        "description": "A keylogging tool used by APT3 gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.[16][17]"
    },
    {
        "uniqueId": "G0050",
        "target": "G0050 APT32",
        "description": "APT32 used the ipconfig /all command to gather the IP address from the system.[18]"
    },
    {
        "uniqueId": "G0096",
        "target": "G0096 APT41",
        "description": "APT41 collected MAC addresses from victim machines.[19][20]"
    },
    {
        "uniqueId": "S0456",
        "target": "S0456 Aria-body",
        "description": "Aria-body has the ability to identify the location, public IP address, and domain name on a compromised host.[21]"
    },
    {
        "uniqueId": "S0099",
        "target": "S0099 Arp",
        "description": "Arp can be used to display ARP configuration information on the host.[22]"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth collects the external IP address from the system. [23]"
    },
    {
        "uniqueId": "S0640",
        "target": "S0640 Avaddon",
        "description": "Avaddon can collect the external IP address of the victim.[24]"
    },
    {
        "uniqueId": "S0473",
        "target": "S0473 Avenger",
        "description": "Avenger can identify the domain of the compromised host.[25]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can collect host IP information from the victim\u2019s machine.[26]"
    },
    {
        "uniqueId": "S0414",
        "target": "S0414 BabyShark",
        "description": "BabyShark has executed the ipconfig /all command.[27]"
    },
    {
        "uniqueId": "S0093",
        "target": "S0093 Backdoor.Oldrea",
        "description": "Backdoor.Oldrea collects information about the Internet adapter configuration.[28][29]"
    },
    {
        "uniqueId": "S0245",
        "target": "S0245 BADCALL",
        "description": "BADCALL collects the network adapter information.[30]"
    },
    {
        "uniqueId": "S0642",
        "target": "S0642 BADFLICK",
        "description": "BADFLICK has captured victim IP address details.[31]"
    },
    {
        "uniqueId": "S0234",
        "target": "S0234 Bandook",
        "description": "Bandook has a command to get the public IP address from a system.[32]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can collect the IP address and NetBIOS name of an infected machine.[33]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal can execute ipconfig on the victim\u2019s machine.[34][35][36]"
    },
    {
        "uniqueId": "S0089",
        "target": "S0089 BlackEnergy",
        "description": "BlackEnergy has gathered information about network IP configurations using ipconfig.exe and about routing tables using route.exe.[37][38]"
    },
    {
        "uniqueId": "S0520",
        "target": "S0520 BLINDINGCAN",
        "description": "BLINDINGCAN has collected the victim machine's local IP address information and MAC address.[39]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT can collect IP information from the victim\u2019s machine.[40]"
    },
    {
        "uniqueId": "S0486",
        "target": "S0486 Bonadan",
        "description": "Bonadan can find the external IP address of the infected host.[41]"
    },
    {
        "uniqueId": "S0651",
        "target": "S0651 BoxCaon",
        "description": "BoxCaon can collect the victim's MAC address by using the GetAdaptersInfo API.[42]"
    },
    {
        "uniqueId": "S0252",
        "target": "S0252 Brave Prince",
        "description": "Brave Prince gathers network configuration information as well as the ARP cache.[43]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors used code to obtain the external public-facing IPv4 address of the compromised host.[44]"
    },
    {
        "uniqueId": "C0017",
        "target": "C0017 C0017",
        "description": "During C0017, APT41 used cmd.exe /c ping %userdomain% for discovery.[45]"
    },
    {
        "uniqueId": "C0018",
        "target": "C0018 C0018",
        "description": "During C0018, the threat actors ran nslookup and Advanced IP Scanner on the target network.[46]"
    },
    {
        "uniqueId": "S0274",
        "target": "S0274 Calisto",
        "description": "Calisto runs the ifconfig command to obtain the IP address from the victim\u2019s machine.[47]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon can collect the IP address of the victims and other computers on the network using the commands: ipconfig -all nbtstat -n, and nbtstat -s.[48][49]"
    },
    {
        "uniqueId": "S0261",
        "target": "S0261 Catchamas",
        "description": "Catchamas gathers the Mac address, IP address, and the network adapter information from the victim\u2019s machine.[50]"
    },
    {
        "uniqueId": "S0572",
        "target": "S0572 Caterpillar WebShell",
        "description": "Caterpillar WebShell can gather the IP address from the victim's machine using the IP config command.[51]"
    },
    {
        "uniqueId": "S0674",
        "target": "S0674 CharmPower",
        "description": "CharmPower has the ability to use ipconfig to enumerate system network settings.[52]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used ipconfig, Ping, and tracert to enumerate the IP address and network environment and settings of the local host.[53]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme can enumerate the IP address of a compromised host.[54]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling can enumerate the IP address of a compromised machine.[55][56]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can determine the NetBios name and the IP addresses of targets machines including domain controllers.[57][58]"
    },
    {
        "uniqueId": "S0244",
        "target": "S0244 Comnie",
        "description": "Comnie uses ipconfig /all and route PRINT to identify network adapter and interface information.[59]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can retrieve the ARP cache from the local system by using the GetIpNetTable() API call and check to ensure IP addresses it connects to are for local, non-Internet, systems.[60]"
    },
    {
        "uniqueId": "S0488",
        "target": "S0488 CrackMapExec",
        "description": "CrackMapExec can collect DNS information from the targeted system.[61]"
    },
    {
        "uniqueId": "S1024",
        "target": "S1024 CreepySnail",
        "description": "CreepySnail can use getmac and Get-NetIPAddress to enumerate network settings.[62]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson contains a command to collect the victim MAC address and LAN IP.[63][64]"
    },
    {
        "uniqueId": "S0625",
        "target": "S0625 Cuba",
        "description": "Cuba can retrieve the ARP cache from the local system by using GetIpNetTable.[65]"
    },
    {
        "uniqueId": "S0687",
        "target": "S0687 Cyclops Blink",
        "description": "Cyclops Blink can use the Linux API if_nameindex to gather network interface names.[66][67]"
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel",
        "description": "Darkhotel has collected the IP address and network adapter information from the victim\u2019s machine.[68][69]"
    },
    {
        "uniqueId": "S1052",
        "target": "S1052 DEADEYE",
        "description": "DEADEYE can discover the DNS domain name of a targeted system.[45]"
    },
    {
        "uniqueId": "S0354",
        "target": "S0354 Denis",
        "description": "Denis uses ipconfig to gather the IP address from the system.[18]"
    },
    {
        "uniqueId": "S0659",
        "target": "S0659 Diavol",
        "description": "Diavol can enumerate victims' local and external IPs when registering with C2.[70]"
    },
    {
        "uniqueId": "S0472",
        "target": "S0472 down_new",
        "description": "down_new has the ability to identify the MAC address of a compromised host.[25]"
    },
    {
        "uniqueId": "G0035",
        "target": "G0035 Dragonfly",
        "description": "Dragonfly has used batch scripts to enumerate network information, including information about trusts, zones, and the domain.[71]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack can collect the host's IP addresses using the ipconfig command.[72][73]"
    },
    {
        "uniqueId": "S0038",
        "target": "S0038 Duqu",
        "description": "The reconnaissance modules used with Duqu can collect information on network configuration.[74]"
    },
    {
        "uniqueId": "S0024",
        "target": "S0024 Dyre",
        "description": "Dyre has the ability to identify network settings on a compromised host.[75]"
    },
    {
        "uniqueId": "G1006",
        "target": "G1006 Earth Lusca",
        "description": "Earth Lusca used the command ipconfig to obtain information about network configurations.[76]"
    },
    {
        "uniqueId": "S0605",
        "target": "S0605 EKANS",
        "description": "EKANS can determine the domain of a compromised host.[77]"
    },
    {
        "uniqueId": "S0081",
        "target": "S0081 Elise",
        "description": "Elise executes ipconfig /all after initial communication is made to the remote server.[78][79]"
    },
    {
        "uniqueId": "S0082",
        "target": "S0082 Emissary",
        "description": "Emissary has the capability to execute the command ipconfig /all.[80]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire can acquire network configuration information like DNS servers, public IP, and network proxies used by a host.[81][82]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic uses the nbtstat -n and nbtstat -s commands on the victim\u2019s machine.[83]"
    },
    {
        "uniqueId": "S0569",
        "target": "S0569 Explosive",
        "description": "Explosive has collected the MAC address from the victim's machine.[84]"
    },
    {
        "uniqueId": "S0181",
        "target": "S0181 FALLCHILL",
        "description": "FALLCHILL collects MAC address and local IP address information from the victim.[85]"
    },
    {
        "uniqueId": "S0512",
        "target": "S0512 FatDuke",
        "description": "FatDuke can identify the MAC address on the target computer.[86]"
    },
    {
        "uniqueId": "S0171",
        "target": "S0171 Felismus",
        "description": "Felismus collects the victim LAN IP address and sends it to the C2 server.[87]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT collects information about the network including the IP address and DHCP server.[88]"
    },
    {
        "uniqueId": "G1016",
        "target": "G1016 FIN13",
        "description": "FIN13 has used nslookup and ipconfig for network reconnaissance efforts. FIN13 has also utilized a compromised Symantec Altiris console and LanDesk account to retrieve network information.[89][90]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has been used to execute the ipconfig /all command on a victim system.[91]"
    },
    {
        "uniqueId": "C0001",
        "target": "C0001 Frankenstein",
        "description": "During Frankenstein, the threat actors used Empire to find the public IP address of a compromised system.[82]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can parse the ProxyServer string in the Registry to discover http proxies.[92]"
    },
    {
        "uniqueId": "C0007",
        "target": "C0007 FunnyDream",
        "description": "During FunnyDream, the threat actors used ipconfig for discovery on remote systems.[92]"
    },
    {
        "uniqueId": "G0093",
        "target": "G0093 GALLIUM",
        "description": "GALLIUM used ipconfig /all to obtain information about the victim network configuration. The group also ran a modified version of NBTscan to identify available NetBIOS name servers.[93]"
    },
    {
        "uniqueId": "S0049",
        "target": "S0049 GeminiDuke",
        "description": "GeminiDuke collects information on network settings and Internet proxy settings from the victim.[94]"
    },
    {
        "uniqueId": "S0588",
        "target": "S0588 GoldMax",
        "description": "GoldMax retrieved a list of the system's network interface after execution.[95]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can determine the IP and physical location of the compromised host via IPinfo.[96]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT collects the victim IP address, MAC address, as well as the victim account domain name.[97]"
    },
    {
        "uniqueId": "S0690",
        "target": "S0690 Green Lambert",
        "description": "Green Lambert can obtain proxy information from a victim's machine using system environment variables.[98][99]"
    },
    {
        "uniqueId": "S0632",
        "target": "S0632 GrimAgent",
        "description": "GrimAgent can enumerate the IP and domain of a target system.[100]"
    },
    {
        "uniqueId": "G0125",
        "target": "G0125 HAFNIUM",
        "description": "HAFNIUM has collected IP information via IPInfo.[101]"
    },
    {
        "uniqueId": "G1001",
        "target": "G1001 HEXANE",
        "description": "HEXANE has used Ping and tracert for network discovery.[102]"
    },
    {
        "uniqueId": "G0126",
        "target": "G0126 Higaisa",
        "description": "Higaisa used ipconfig to gather network configuration information.[103][104]"
    },
    {
        "uniqueId": "S0431",
        "target": "S0431 HotCroissant",
        "description": "HotCroissant has the ability to identify the IP address of the compromised machine.[105]"
    },
    {
        "uniqueId": "S0203",
        "target": "S0203 Hydraq",
        "description": "Hydraq creates a backdoor through which remote attackers can retrieve IP addresses of compromised machines.[106][107]"
    },
    {
        "uniqueId": "S1022",
        "target": "S1022 IceApple",
        "description": "The IceApple ifconfig module can iterate over all network interfaces on the host and retrieve the name, description, MAC address, DNS suffix, DNS servers, gateways, IPv4 addresses, and subnet masks.[108]"
    },
    {
        "uniqueId": "S0101",
        "target": "S0101 ifconfig",
        "description": "ifconfig can be used to display adapter configuration on Unix systems, including information for TCP/IP, DNS, and DHCP."
    },
    {
        "uniqueId": "S0278",
        "target": "S0278 iKitten",
        "description": "iKitten will look for the current IP address.[109]"
    },
    {
        "uniqueId": "S0604",
        "target": "S0604 Industroyer",
        "description": "Industroyer\u2019s 61850 payload component enumerates connected network adapters and their corresponding IP addresses.[110]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole gathers information on the IP forwarding table, MAC address, configured proxy, and network SSID.[111][112]"
    },
    {
        "uniqueId": "S0100",
        "target": "S0100 ipconfig",
        "description": "ipconfig can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP."
    },
    {
        "uniqueId": "S0015",
        "target": "S0015 Ixeshe",
        "description": "Ixeshe enumerates the IP address, network proxy settings, and domain name from a victim's system.[113]"
    },
    {
        "uniqueId": "S0044",
        "target": "S0044 JHUHUGIT",
        "description": "A JHUHUGIT variant gathers network interface card information.[114]"
    },
    {
        "uniqueId": "S0201",
        "target": "S0201 JPIN",
        "description": "JPIN can obtain network information, including DNS, IP, and proxies.[115]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can gather victim internal and external IPs.[116]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar gathers information about network adapters.[117]"
    },
    {
        "uniqueId": "G0004",
        "target": "G0004 Ke3chang",
        "description": "Ke3chang has performed local network configuration discovery using ipconfig.[118][119][120]"
    },
    {
        "uniqueId": "S0487",
        "target": "S0487 Kessel",
        "description": "Kessel has collected the DNS address of the infected host.[41]"
    },
    {
        "uniqueId": "S1020",
        "target": "S1020 Kevin",
        "description": "Kevin can collect the MAC address and other information from a victim machine using ipconfig/all.[102]"
    },
    {
        "uniqueId": "S0387",
        "target": "S0387 KeyBoy",
        "description": "KeyBoy can determine the public or WAN IP address for the system.[121]"
    },
    {
        "uniqueId": "S0271",
        "target": "S0271 KEYMARBLE",
        "description": "KEYMARBLE gathers the MAC address of the victim\u2019s machine.[122]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used ipconfig/all to gather network configuration information.[123]"
    },
    {
        "uniqueId": "S0250",
        "target": "S0250 Koadic",
        "description": "Koadic can retrieve the contents of the IP routing table as well as information about the Windows domain.[124][125]"
    },
    {
        "uniqueId": "S0641",
        "target": "S0641 Kobalos",
        "description": "Kobalos can record the IP address of the target machine.[126]"
    },
    {
        "uniqueId": "S0356",
        "target": "S0356 KONNI",
        "description": "KONNI can collect the IP address from the victim\u2019s machine.[127]"
    },
    {
        "uniqueId": "S1075",
        "target": "S1075 KOPILUWAK",
        "description": "KOPILUWAK can use Arp to discover a target's network configuration setttings.[128]"
    },
    {
        "uniqueId": "S0236",
        "target": "S0236 Kwampirs",
        "description": "Kwampirs collects network adapter and interface information by using the commands ipconfig /all, arp -a and route print. It also collects the system's MAC address with getmac and domain configuration with net config workstation.[129]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "Lazarus Group malware IndiaIndia obtains and sends to its C2 server information about the first network interface card\u2019s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.[130][131]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron gathers information about network adapters using the Win32 API call GetAdaptersInfo.[132]"
    },
    {
        "uniqueId": "S0513",
        "target": "S0513 LiteDuke",
        "description": "LiteDuke has the ability to discover the proxy configuration of Firefox and/or Opera.[86]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar can retrieve network information from a compromised host.[133]"
    },
    {
        "uniqueId": "S0447",
        "target": "S0447 Lokibot",
        "description": "Lokibot has the ability to discover the domain name of the infected host.[134]"
    },
    {
        "uniqueId": "S0451",
        "target": "S0451 LoudMiner",
        "description": "LoudMiner used a script to gather the IP address of the infected machine before sending to the C2.[135]"
    },
    {
        "uniqueId": "S0532",
        "target": "S0532 Lucifer",
        "description": "Lucifer can collect the IP address of a compromised host.[136]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete collects the MAC address of the target computer and other network configuration information.[137][138]"
    },
    {
        "uniqueId": "S1016",
        "target": "S1016 MacMa",
        "description": "MacMa can collect IP addresses from a compromised host.[139]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can use the GetAdaptersInfo function to retrieve information about network adapters and the GetIpNetTable function to retrieve the IPv4 to physical network address mapping table.[140]"
    },
    {
        "uniqueId": "G0059",
        "target": "G0059 Magic Hound",
        "description": "Magic Hound malware gathers the victim's local IP address, MAC address, and external IP address.[141][142][143]"
    },
    {
        "uniqueId": "G0045",
        "target": "G0045 menuPass",
        "description": "menuPass has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.[144]"
    },
    {
        "uniqueId": "S1015",
        "target": "S1015 Milan",
        "description": "Milan can run C:\\Windows\\system32\\cmd.exe /c cmd /c ipconfig /all 2>&1 to discover network settings.[145]"
    },
    {
        "uniqueId": "S0084",
        "target": "S0084 Mis-Type",
        "description": "Mis-Type may create a file containing the results of the command cmd.exe /c ipconfig /all.[146]"
    },
    {
        "uniqueId": "S0149",
        "target": "S0149 MoonWind",
        "description": "MoonWind obtains the victim IP address.[147]"
    },
    {
        "uniqueId": "S0284",
        "target": "S0284 More_eggs",
        "description": "More_eggs has the capability to gather the IP address from the victim's machine.[148]"
    },
    {
        "uniqueId": "G1009",
        "target": "G1009 Moses Staff",
        "description": "Moses Staff has collected the domain name of a compromised network.[149]"
    },
    {
        "uniqueId": "S0256",
        "target": "S0256 Mosquito",
        "description": "Mosquito uses the ipconfig command.[150]"
    },
    {
        "uniqueId": "G0069",
        "target": "G0069 MuddyWater",
        "description": "MuddyWater has used malware to collect the victim\u2019s IP address and domain name.[151]"
    },
    {
        "uniqueId": "G0129",
        "target": "G0129 Mustang Panda",
        "description": "Mustang Panda has used ipconfig and arp to determine network configuration information.[152]"
    },
    {
        "uniqueId": "S0205",
        "target": "S0205 Naid",
        "description": "Naid collects the domain name from a compromised host.[153]"
    },
    {
        "uniqueId": "G0019",
        "target": "G0019 Naikon",
        "description": "Naikon uses commands such as netsh interface show to discover network interface settings.[154]"
    },
    {
        "uniqueId": "S0228",
        "target": "S0228 NanHaiShu",
        "description": "NanHaiShu can gather information about the victim proxy server.[155]"
    },
    {
        "uniqueId": "S0336",
        "target": "S0336 NanoCore",
        "description": "NanoCore gathers the IP address from the victim\u2019s machine.[156]"
    },
    {
        "uniqueId": "S0590",
        "target": "S0590 NBTscan",
        "description": "NBTscan can be used to collect MAC addresses.[157][158]"
    },
    {
        "uniqueId": "S0102",
        "target": "S0102 nbtstat",
        "description": "nbtstat can be used to discover local NetBIOS domain names."
    },
    {
        "uniqueId": "S0691",
        "target": "S0691 Neoichor",
        "description": "Neoichor can gather the IP address from an infected host.[120]"
    },
    {
        "uniqueId": "S0198",
        "target": "S0198 NETWIRE",
        "description": "NETWIRE can collect the IP address of a compromised host.[159][160]"
    },
    {
        "uniqueId": "S1106",
        "target": "S1106 NGLite",
        "description": "NGLite identifies the victim system MAC and IPv4 addresses and uses these to establish a victim identifier.[161]"
    },
    {
        "uniqueId": "S1100",
        "target": "S1100 Ninja",
        "description": "Ninja can enumerate the IP address on compromised systems.[162]"
    },
    {
        "uniqueId": "S0359",
        "target": "S0359 Nltest",
        "description": "Nltest may be used to enumerate the parent domain of a local machine using /parentdomain.[163]"
    },
    {
        "uniqueId": "S0353",
        "target": "S0353 NOKKI",
        "description": "NOKKI can gather information on the victim IP address.[164]"
    },
    {
        "uniqueId": "S0346",
        "target": "S0346 OceanSalt",
        "description": "OceanSalt can collect the victim\u2019s IP address.[165]"
    },
    {
        "uniqueId": "S0340",
        "target": "S0340 Octopus",
        "description": "Octopus can collect the host IP address from the victim\u2019s machine.[166]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has run ipconfig /all on a victim.[167][168]"
    },
    {
        "uniqueId": "S0439",
        "target": "S0439 Okrum",
        "description": "Okrum can collect network information, including the host IP address, DNS, and proxy information.[169]"
    },
    {
        "uniqueId": "S0365",
        "target": "S0365 Olympic Destroyer",
        "description": "Olympic Destroyer uses API calls to enumerate the infected system's ARP table.[170]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used ipconfig, nbtstat, tracert, route print, and cat /etc/hosts commands.[171]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors discovered the local network configuration with ipconfig.[172]"
    },
    {
        "uniqueId": "S0229",
        "target": "S0229 Orz",
        "description": "Orz can gather victim proxy information.[155]"
    },
    {
        "uniqueId": "S0165",
        "target": "S0165 OSInfo",
        "description": "OSInfo discovers the current domain information.[16]"
    },
    {
        "uniqueId": "S0352",
        "target": "S0352 OSX_OCEANLOTUS.D",
        "description": "OSX_OCEANLOTUS.D can collect the network interface MAC address on the infected host.[173][174]"
    },
    {
        "uniqueId": "S0556",
        "target": "S0556 Pay2Key",
        "description": "Pay2Key can identify the IP and MAC addresses of the compromised host.[175]"
    },
    {
        "uniqueId": "S1050",
        "target": "S1050 PcShare",
        "description": "PcShare can obtain the proxy settings of a compromised machine using InternetQueryOptionA and its IP address by running nslookup myip.opendns.comresolver1.opendns.com\\r\\n.[92]"
    },
    {
        "uniqueId": "S0587",
        "target": "S0587 Penquin",
        "description": "Penquin can report the IP of the compromised host to attacker controlled infrastructure.[176]"
    },
    {
        "uniqueId": "S1031",
        "target": "S1031 PingPull",
        "description": "PingPull can retrieve the IP address of a compromised host.[177]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon can collect and send the local IP address, RDP information, and the network adapter physical address as a part of its C2 beacon.[178]"
    },
    {
        "uniqueId": "S0124",
        "target": "S0124 Pisloader",
        "description": "Pisloader has a command to collect the victim's IP address.[179]"
    },
    {
        "uniqueId": "S0254",
        "target": "S0254 PLAINTEE",
        "description": "PLAINTEE uses the ipconfig /all command to gather the victim\u2019s IP address.[180]"
    },
    {
        "uniqueId": "S0378",
        "target": "S0378 PoshC2",
        "description": "PoshC2 can enumerate network adapter information.[181]"
    },
    {
        "uniqueId": "S0139",
        "target": "S0139 PowerDuke",
        "description": "PowerDuke has a command to get the victim's domain and NetBIOS name.[182]"
    },
    {
        "uniqueId": "S0441",
        "target": "S0441 PowerShower",
        "description": "PowerShower has the ability to identify the current Windows domain of the infected host.[183]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS can retrieve IP, network adapter configuration information, and domain from compromised hosts.[184][185]"
    },
    {
        "uniqueId": "S0184",
        "target": "S0184 POWRUNER",
        "description": "POWRUNER may collect network configuration data by running ipconfig /all on a victim.[186]"
    },
    {
        "uniqueId": "S0113",
        "target": "S0113 Prikormka",
        "description": "A module in Prikormka collects information from the victim about its IP addresses and MAC addresses.[187]"
    },
    {
        "uniqueId": "S0238",
        "target": "S0238 Proxysvc",
        "description": "Proxysvc collects the network adapter information and domain/username information based on current remote sessions.[188]"
    },
    {
        "uniqueId": "S0192",
        "target": "S0192 Pupy",
        "description": "Pupy has built in commands to identify a host\u2019s IP address and find out other network configuration settings by viewing connected sessions.[189]"
    },
    {
        "uniqueId": "S0583",
        "target": "S0583 Pysa",
        "description": "Pysa can perform network reconnaissance using the Advanced IP Scanner tool.[190]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can use net config workstation, arp -a, nslookup, and ipconfig /all to gather network configuration information.[191][192][193][194][195]"
    },
    {
        "uniqueId": "S0269",
        "target": "S0269 QUADAGENT",
        "description": "QUADAGENT gathers the current domain the victim system belongs to.[196]"
    },
    {
        "uniqueId": "S0262",
        "target": "S0262 QuasarRAT",
        "description": "QuasarRAT has the ability to enumerate the Wide Area Network (WAN) IP through requests to ip-api[.]com, freegeoip[.]net, or api[.]ipify[.]org observed with user-agent string Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0.[197]"
    },
    {
        "uniqueId": "S1076",
        "target": "S1076 QUIETCANARY",
        "description": "QUIETCANARY can identify the default proxy setting on a compromised host.[128]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can use ipconfig and Arp to collect network configuration information, including routing information and ARP tables.[198]"
    },
    {
        "uniqueId": "S0241",
        "target": "S0241 RATANKBA",
        "description": "RATANKBA gathers the victim\u2019s IP address via the ipconfig -all command.[199][200]"
    },
    {
        "uniqueId": "S0172",
        "target": "S0172 Reaver",
        "description": "Reaver collects the victim's IP address.[201]"
    },
    {
        "uniqueId": "S0153",
        "target": "S0153 RedLeaves",
        "description": "RedLeaves can obtain information about network parameters.[144]"
    },
    {
        "uniqueId": "S0125",
        "target": "S0125 Remsec",
        "description": "Remsec can obtain information about network configuration, including the routing table, ARP cache, and DNS cache.[202]"
    },
    {
        "uniqueId": "S0379",
        "target": "S0379 Revenge RAT",
        "description": "Revenge RAT collects the IP address and MAC address from the system.[203]"
    },
    {
        "uniqueId": "S0433",
        "target": "S0433 Rifdoor",
        "description": "Rifdoor has the ability to identify the IP address of the compromised host.[204]"
    },
    {
        "uniqueId": "S0448",
        "target": "S0448 Rising Sun",
        "description": "Rising Sun can detect network adapter and IP address information.[205]"
    },
    {
        "uniqueId": "S0270",
        "target": "S0270 RogueRobin",
        "description": "RogueRobin gathers the IP address and domain from the victim\u2019s machine.[206]"
    },
    {
        "uniqueId": "S0103",
        "target": "S0103 route",
        "description": "route can be used to discover routing configuration information."
    },
    {
        "uniqueId": "S1073",
        "target": "S1073 Royal",
        "description": "Royal can enumerate IP addresses using GetIpAddrTable.[207]"
    },
    {
        "uniqueId": "S0446",
        "target": "S0446 Ryuk",
        "description": "Ryuk has called GetIpNetTable in attempt to identify all mounted drives and hosts that have Address Resolution Protocol (ARP) entries.[208][209]"
    },
    {
        "uniqueId": "S0085",
        "target": "S0085 S-Type",
        "description": "S-Type has used ipconfig /all on a compromised host.[146]"
    },
    {
        "uniqueId": "S1018",
        "target": "S1018 Saint Bot",
        "description": "Saint Bot can collect the IP address of a victim machine.[210]"
    },
    {
        "uniqueId": "S1085",
        "target": "S1085 Sardonic",
        "description": "Sardonic has the ability to execute the ipconfig command.[211]"
    },
    {
        "uniqueId": "S0461",
        "target": "S0461 SDBbot",
        "description": "SDBbot has the ability to determine the domain name and whether a proxy is configured on a compromised host.[212]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has collected the domain name of the victim system.[213]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Shamoon obtains the target's IP address and local network segment.[214][215]"
    },
    {
        "uniqueId": "S0450",
        "target": "S0450 SHARPSTATS",
        "description": "SHARPSTATS has the ability to identify the domain of the compromised host.[185]"
    },
    {
        "uniqueId": "S0445",
        "target": "S0445 ShimRatReporter",
        "description": "ShimRatReporter gathered the local proxy, domain, IP, routing tables, mac address, gateway, DNS servers, and DHCP status information from an infected host.[216]"
    },
    {
        "uniqueId": "S0589",
        "target": "S0589 Sibot",
        "description": "Sibot checked if the compromised system is configured to use proxies.[95]"
    },
    {
        "uniqueId": "G1008",
        "target": "G1008 SideCopy",
        "description": "SideCopy has identified the IP address of a compromised host.[3]"
    },
    {
        "uniqueId": "S0610",
        "target": "S0610 SideTwist",
        "description": "SideTwist has the ability to collect the domain name on a compromised host.[217]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has used malware to collect information on network interfaces, including the MAC address.[218]"
    },
    {
        "uniqueId": "S0633",
        "target": "S0633 Sliver",
        "description": "Sliver has the ability to gather network configuration information.[219]"
    },
    {
        "uniqueId": "S1035",
        "target": "S1035 Small Sieve",
        "description": "Small Sieve can obtain the IP address of a victim host.[220]"
    },
    {
        "uniqueId": "S1124",
        "target": "S1124 SocGholish",
        "description": "SocGholish has the ability to enumerate the domain name of a victim, as well as if the host is a member of an Active Directory domain.[221][222][223]"
    },
    {
        "uniqueId": "S0516",
        "target": "S0516 SoreFang",
        "description": "SoreFang can collect the TCP/IP, DNS, DHCP, and network adapter configuration on a compromised host via ipconfig.exe /all.[224]"
    },
    {
        "uniqueId": "S0374",
        "target": "S0374 SpeakUp",
        "description": "SpeakUp uses the ifconfig -a command. [225]"
    },
    {
        "uniqueId": "S0646",
        "target": "S0646 SpicyOmelette",
        "description": "SpicyOmelette can identify the IP of a compromised system.[226]"
    },
    {
        "uniqueId": "S1030",
        "target": "S1030 Squirrelwaffle",
        "description": "Squirrelwaffle has collected the victim\u2019s external IP address.[227]"
    },
    {
        "uniqueId": "S1037",
        "target": "S1037 STARWHALE",
        "description": "STARWHALE has the ability to collect the IP address of an infected host.[228]"
    },
    {
        "uniqueId": "G0038",
        "target": "G0038 Stealth Falcon",
        "description": "Stealth Falcon malware gathers the Address Resolution Protocol (ARP) table from the victim.[229]"
    },
    {
        "uniqueId": "S0491",
        "target": "S0491 StrongPity",
        "description": "StrongPity can identify the IP address of a compromised host.[230]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet collects the IP address of a compromised system.[231]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST collected all network interface MAC addresses that are up and not loopback devices, as well as IP address, DHCP configuration, and domain information.[232]"
    },
    {
        "uniqueId": "S0018",
        "target": "S0018 Sykipot",
        "description": "Sykipot may use ipconfig /all to gather system network configuration details.[233]"
    },
    {
        "uniqueId": "S0060",
        "target": "S0060 Sys10",
        "description": "Sys10 collects the local IP address of the victim and sends it to the C2.[154]"
    },
    {
        "uniqueId": "S0663",
        "target": "S0663 SysUpdate",
        "description": "SysUpdate can collected the IP address and domain name of a compromised host.[234]"
    },
    {
        "uniqueId": "S0098",
        "target": "S0098 T9000",
        "description": "T9000 gathers and beacons the MAC and IP addresses during installation.[235]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor has collected the MAC address of a compromised host; it can also use GetAdaptersInfo to identify network adapters.[236][237]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to identify the MAC address on an infected host.[238]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has enumerated the host machine\u2019s IP address.[239]"
    },
    {
        "uniqueId": "G0027",
        "target": "G0027 Threat Group-3390",
        "description": "Threat Group-3390 actors use NBTscan to discover vulnerable systems.[240]"
    },
    {
        "uniqueId": "S0678",
        "target": "S0678 Torisma",
        "description": "Torisma can collect the local MAC address using GetAdaptersInfo as well as the system's IP address.[241]"
    },
    {
        "uniqueId": "S0266",
        "target": "S0266 TrickBot",
        "description": "TrickBot obtains the IP address, location, and other relevant network information from the victim\u2019s machine.[242][243][57]"
    },
    {
        "uniqueId": "S0094",
        "target": "S0094 Trojan.Karagany",
        "description": "Trojan.Karagany can gather information on the network configuration of a compromised host.[244]"
    },
    {
        "uniqueId": "G0081",
        "target": "G0081 Tropic Trooper",
        "description": "Tropic Trooper has used scripts to collect the host's network topology.[245]"
    },
    {
        "uniqueId": "S0436",
        "target": "S0436 TSCookie",
        "description": "TSCookie has the ability to identify the IP of the infected host.[246]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian can retrieve the internal IP address of a compromised host.[247]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, net config, ipconfig /all, and route commands, as well as NBTscan.[83][248][249] Turla RPC backdoors have also retrieved registered RPC interface information from process memory.[250]"
    },
    {
        "uniqueId": "S0130",
        "target": "S0130 Unknown Logger",
        "description": "Unknown Logger can obtain information about the victim's IP address.[251]"
    },
    {
        "uniqueId": "S0275",
        "target": "S0275 UPPERCUT",
        "description": "UPPERCUT has the capability to gather the victim's proxy information.[252]"
    },
    {
        "uniqueId": "S0452",
        "target": "S0452 USBferry",
        "description": "USBferry can detect the infected machine's network topology using ipconfig and arp.[245]"
    },
    {
        "uniqueId": "S0476",
        "target": "S0476 Valak",
        "description": "Valak has the ability to identify the domain and the MAC and IP addresses of an infected machine.[253]"
    },
    {
        "uniqueId": "S0257",
        "target": "S0257 VERMIN",
        "description": "VERMIN gathers the local IP address.[254]"
    },
    {
        "uniqueId": "S0180",
        "target": "S0180 Volgmer",
        "description": "Volgmer can gather the IP address from the victim's machine.[255]"
    },
    {
        "uniqueId": "G1017",
        "target": "G1017 Volt Typhoon",
        "description": "Volt Typhoon has executed multiple commands to enumerate network topology and settings including ipconfig, netsh interface firewall show all, and netsh interface portproxy show all.[256]"
    },
    {
        "uniqueId": "S0366",
        "target": "S0366 WannaCry",
        "description": "WannaCry will attempt to determine the local network segment it is a part of.[257]"
    },
    {
        "uniqueId": "S0515",
        "target": "S0515 WellMail",
        "description": "WellMail can identify the IP address of the victim system.[258]"
    },
    {
        "uniqueId": "S0514",
        "target": "S0514 WellMess",
        "description": "WellMess can identify the IP address and user domain on the target machine.[259][260]"
    },
    {
        "uniqueId": "G0102",
        "target": "G0102 Wizard Spider",
        "description": "Wizard Spider has used ipconfig to identify the network configuration of a victim machine. Wizard Spider has also used the PowerShell cmdlet Get-ADComputer to collect IP address data from Active Directory.[261][262]"
    },
    {
        "uniqueId": "S1065",
        "target": "S1065 Woody RAT",
        "description": "Woody RAT can retrieve network interface and proxy information.[263]"
    },
    {
        "uniqueId": "S0341",
        "target": "S0341 Xbash",
        "description": "Xbash can collect IP addresses and local intranet information from a victim\u2019s machine.[264]"
    },
    {
        "uniqueId": "S0653",
        "target": "S0653 xCaon",
        "description": "xCaon has used the GetAdaptersInfo() API call to get the victim's MAC address.[42]"
    },
    {
        "uniqueId": "S0248",
        "target": "S0248 yty",
        "description": "yty runs ipconfig /all and collects the domain name.[265]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy runs the ipconfig /all command.[266]"
    },
    {
        "uniqueId": "S0230",
        "target": "S0230 ZeroT",
        "description": "ZeroT gathers the victim's IP address and domain information, and then sends it to its C2 server.[267]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has used a tool to enumerate proxy settings in the target environment.[268]"
    },
    {
        "uniqueId": "S0350",
        "target": "S0350 zwShell",
        "description": "zwShell can obtain the victim IP address.[269]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls (such as GetAdaptersInfo() and GetIpNetTable()) that may gather details about the network configuration and settings, such as IP and/or MAC addresses."
    },
    {
        "uniqueId": "DS0012",
        "target": "DS0012 Script Script Execution",
        "description": "Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Initiates Global Intrusion Campaign Using Multiple Exploits. Retrieved February 17, 2022.",
        "description": "Threat Intelligence Team. (2021, December 2). SideCopy APT: Connecting lures victims, payloads to infrastructure. Retrieved June 13, 2022."
    },
    {
        "uniqueId": "FIN6",
        "target": "FIN6 Intrusion, an Actor Recently Tied to Ryuk and LockerGoga Ransomware. Retrieved April 17, 2019.",
        "description": "Goody, K., et al (2019, January 11). A Nasty Trick: From Credential Theft Malware to Business Disruption. Retrieved May 12, 2020."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018."
    },
    {
        "uniqueId": "APT3",
        "target": "APT3 Uncovered: The code evolution of Pirpi. Retrieved September 28, 2017.",
        "description": "Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021.",
        "description": "CheckPoint. (2020, May 7). Naikon APT: Cyber Espionage Reloaded. Retrieved May 26, 2020."
    },
    {
        "uniqueId": "10",
        "target": "10 years of play. Retrieved January 26, 2022.",
        "description": "F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016."
    },
    {
        "uniqueId": "BE2",
        "target": "BE2 custom plugins, router abuse, and target profiles. Retrieved March 24, 2016.",
        "description": "US-CERT. (2020, August 19). MAR-10295134-1.v1 \u2013 North Korean Remote Access Trojan: BLINDINGCAN. Retrieved August 19, 2020."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Costa, F. (2022, May 1). RaaS AvosLocker Incident Response Analysis. Retrieved January 11, 2023."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022.",
        "description": "Jansen, W . (2021, January 12). Abusing cloud services to fly under the radar. Retrieved January 19, 2021."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 North Korean Trojan: HOTCROISSANT. Retrieved May 1, 2020.",
        "description": "Symantec Security Response. (2010, January 18). The Trojan.Hydraq Incident. Retrieved February 20, 2018."
    },
    {
        "uniqueId": "42",
        "target": "42 Playbook Viewer. Retrieved December 20, 2017.",
        "description": "Windows Defender Advanced Threat Hunting Team. (2016, April 29). PLATINUM: Targeted attacks in South and Southeast Asia. Retrieved February 15, 2018."
    },
    {
        "uniqueId": "APT15",
        "target": "APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS. Retrieved April 4, 2018.",
        "description": "MSTIC. (2021, December 6). NICKEL targeting government organizations across Latin America and Europe. Retrieved March 18, 2022."
    },
    {
        "uniqueId": "17",
        "target": "17 \u2013 North Korean Trojan: KEYMARBLE. Retrieved August 16, 2018.",
        "description": "An, J and Malhotra, A. (2021, November 10). North Korean attackers use malicious blogs to deliver malware to high-profile South Korean targets. Retrieved December 29, 2021."
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022.",
        "description": "Kazem, M. (2019, November 25). Trojan:W32/Lokibot. Retrieved May 15, 2020."
    },
    {
        "uniqueId": "43",
        "target": "43 steals Venezuelan military secrets to provide intelligence support for the reactionaries \u2014 HpReact campaign. Retrieved November 20, 2020.",
        "description": "M.L\u00e9veill\u00e9, M., Cherepanov, A.. (2022, January 25). Watering hole deploys new macOS malware, DazzleSpy, in Asia. Retrieved May 6, 2022."
    },
    {
        "uniqueId": "APT35",
        "target": "APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.",
        "description": "DFIR Report. (2021, November 15). Exchange Exploit Leads to Domain Wide Ransomware. Retrieved January 5, 2023."
    },
    {
        "uniqueId": "V3",
        "target": "V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.",
        "description": "Sardiwal, M, et al. (2017, December 7). New Targeted Attack in the Middle East by APT34, a Suspected Iranian Threat Group, Using CVE-2017-11882 Exploit. Retrieved December 20, 2017."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.",
        "description": "Schwarz, D. et al. (2019, October 16). TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021.",
        "description": "Hegel, T. (2021, January 13). A Global Perspective of the SideWinder APT. Retrieved January 27, 2021."
    },
    {
        "uniqueId": "2024",
        "target": "2024 Threat Detection Report: SocGholish. Retrieved March 22, 2024.",
        "description": "Secureworks. (n.d.). GOLD PRELUDE . Retrieved March 22, 2024."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 SOREFANG. Retrieved September 29, 2020.",
        "description": "Check Point Research. (2019, February 4). SpeakUp: A New Undetected Backdoor Linux Trojan. Retrieved April 17, 2019."
    },
    {
        "uniqueId": "StrongPity3",
        "target": "StrongPity3 APT. Retrieved July 20, 2020.",
        "description": "Nicolas Falliere, Liam O Murchu, Eric Chien 2011, February W32.Stuxnet Dossier (Version 1.4) Retrieved. 2017/09/22"
    },
    {
        "uniqueId": "v2",
        "target": "v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021.",
        "description": "GReAT. (2019, April 10). Project TajMahal \u2013 a sophisticated new APT framework. Retrieved October 14, 2019."
    },
    {
        "uniqueId": "3390",
        "target": "3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018.",
        "description": "Beek, C. (2020, November 5). Operation North Star: Behind The Scenes. Retrieved December 20, 2021."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Symantec DeepSight Adversary Intelligence Team. (2019, June 20). Waterbug: Espionage Group Rolls Out Brand-New Toolset in Attacks Against Governments. Retrieved July 8, 2019.",
        "description": "Faou, M. (2020, May). From Agent.btz to ComRAT v4: A ten-year journey. Retrieved June 15, 2020."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018.",
        "description": "Salem, E. et al. (2020, May 28). VALAK: MORE THAN MEETS THE EYE . Retrieved June 19, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMAIL. Retrieved September 29, 2020.",
        "description": "PWC. (2020, July 16). How WellMess malware has been used to target COVID-19 vaccines. Retrieved September 24, 2020."
    },
    {
        "uniqueId": "v1",
        "target": "v1 \u2013 WELLMESS. Retrieved September 24, 2020.",
        "description": "Sean Gallagher, Peter Mackenzie, Elida Leite, Syed Shahram, Bill Kearney, Anand Aijan, Sivagnanam Gn, Suraj Mundalik. (2020, October 14). They\u2019re back: inside a new Ryuk ransomware attack. Retrieved October 14, 2020."
    },
    {
        "uniqueId": "31",
        "target": "31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021.",
        "description": "McAfee\u00ae Foundstone\u00ae Professional Services and McAfee Labs\u2122. (2011, February 10). Global Energy Cyberattacks: \u201cNight Dragon\u201d. Retrieved February 19, 2018."
    },
    {
        "uniqueId": "T1080",
        "target": "T1080 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1080",
        "target": "T1080 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 31 May 2023"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has placed malware on file shares and given it the same name as legitimate documents on the share.[2]"
    },
    {
        "uniqueId": "G1021",
        "target": "G1021 Cinnamon Tempest",
        "description": "Cinnamon Tempest has deployed ransomware from a batch file in a network share.[3]"
    },
    {
        "uniqueId": "S0575",
        "target": "S0575 Conti",
        "description": "Conti can spread itself by infecting other remote machines via network shared drives.[4][5]"
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel",
        "description": "Darkhotel used a virus that propagates by infecting executables stored on shared drives.[6]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group has injected malicious macros into all Word and Excel documents on mapped network drives.[7]"
    },
    {
        "uniqueId": "S0132",
        "target": "S0132 H1N1",
        "description": "H1N1 has functionality to copy itself to network shares.[8]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole can replace legitimate software or documents in the compromised network with their trojanized versions, in an attempt to propagate itself within the network.[9]"
    },
    {
        "uniqueId": "S0133",
        "target": "S0133 Miner-C",
        "description": "Miner-C copies itself into the public folder of Network Attached Storage (NAS) devices and infects new victims who open the file.[10]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can spread itself by infecting other portable executable files on networks shared drives.[11]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet infects remote servers via network shares and by infecting WinCC database views with malicious code.[12]"
    },
    {
        "uniqueId": "S0386",
        "target": "S0386 Ursnif",
        "description": "Ursnif has copied itself to and infected files in network drives for propagation.[13][14]"
    },
    {
        "uniqueId": "M1049",
        "target": "M1049 Antivirus/Antimalware",
        "description": "Anti-virus can be used to automatically quarantine suspicious files.[15]"
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Identify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using application control [16] tools, like AppLocker, [17] [18] or Software Restriction Policies [19] where appropriate. [20]"
    },
    {
        "uniqueId": "M1050",
        "target": "M1050 Exploit Protection",
        "description": "Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET)."
    },
    {
        "uniqueId": "M1022",
        "target": "M1022 Restrict File and Directory Permissions",
        "description": "Protect shared folders by minimizing users who have write access."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious."
    },
    {
        "uniqueId": "DS0033",
        "target": "DS0033 Network Share Network Share Access",
        "description": "Monitor for unexpected and abnormal accesses to network shares, especially those also associated with file activity."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques."
    },
    {
        "uniqueId": "22",
        "target": "22 Caragay, R. (2015, March 26). URSNIF: The Multifaceted Malware. Retrieved June 5, 2019.",
        "description": "Caragay, R. (2014, December 11). Info-Stealing File Infector Hits US, UK. Retrieved June 5, 2019."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "RESOURCES"
    },
    {
        "uniqueId": "000",
        "target": "000 members and 15 channels, find and start discussions with the community on all things ATT&CK.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1195",
        "target": "T1195 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1195",
        "target": "T1195 Sub-techniques:  T1195.001, T1195.002, T1195.003",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 26 February 2024"
    },
    {
        "uniqueId": "M1013",
        "target": "M1013 Application Developer Guidance",
        "description": "Application developers should be cautious when selecting third-party libraries to integrate into their application. Additionally, where possible, developers should lock software dependencies to specific versions rather than pulling the latest version on build.[8]"
    },
    {
        "uniqueId": "M1046",
        "target": "M1046 Boot Integrity",
        "description": "Use secure methods to boot a system and verify the integrity of the operating system and loading mechanisms."
    },
    {
        "uniqueId": "M1033",
        "target": "M1033 Limit Software Installation",
        "description": "Where possible, consider requiring developers to pull from internal repositories containing verified and approved packages rather than from external ones.[8]"
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation."
    },
    {
        "uniqueId": "M1016",
        "target": "M1016 Vulnerability Scanning",
        "description": "Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.[9]"
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Metadata",
        "description": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity."
    },
    {
        "uniqueId": "DS0013",
        "target": "DS0013 Sensor Health Host Status",
        "description": "Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and compare against known good baseline behavior."
    },
    {
        "uniqueId": "10",
        "target": "10 CI/CD Security Risks. Retrieved March 24, 2024.",
        "description": "OWASP. (2018, February 23). OWASP Top Ten Project. Retrieved April 3, 2018."
    },
    {
        "uniqueId": "T1621",
        "target": "T1621 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1621",
        "target": "T1621 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "365",
        "target": "365 Defender; Shanief Webb",
        "description": "Version: 1.1"
    },
    {
        "uniqueId": "01",
        "target": "01 April 2022",
        "description": "Last Modified: 19 April 2024"
    },
    {
        "uniqueId": "G0016",
        "target": "G0016 APT29",
        "description": "APT29 has used repeated MFA requests to gain access to victim accounts.[4][5]"
    },
    {
        "uniqueId": "C0027",
        "target": "C0027 C0027",
        "description": "During C0027, Scattered Spider attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge.[6]"
    },
    {
        "uniqueId": "G1004",
        "target": "G1004 LAPSUS$",
        "description": "LAPSUS$ has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval.[7]"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider",
        "description": "Scattered Spider has used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.[8]"
    },
    {
        "uniqueId": "M1036",
        "target": "M1036 Account Use Policies",
        "description": "Enable account restrictions to prevent login attempts, and the subsequent 2FA/MFA service requests, from being initiated from suspicious locations or when the source of the login attempts do not match the location of the 2FA/MFA smart device. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.[9]"
    },
    {
        "uniqueId": "M1032",
        "target": "M1032 Multi-factor Authentication",
        "description": "Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.[3]"
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised."
    },
    {
        "uniqueId": "DS0028",
        "target": "DS0028 Logon Session Logon Session Creation",
        "description": "Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Authentication",
        "description": "Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism."
    },
    {
        "uniqueId": "M365",
        "target": "M365 Defender. (2022, March 24). DEV-0537 Criminal Actor Targeting Organizations for Data Exfiltration and Destruction. Retrieved May 17, 2022.",
        "description": "CrowdStrike. (2023, January 10). SCATTERED SPIDER Exploits Windows Security Deficiencies with Bring-Your-Own-Vulnerable-Driver Tactic in Attempt to Bypass Endpoint Security. Retrieved July 5, 2023."
    },
    {
        "uniqueId": "T1217",
        "target": "T1217 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1217",
        "target": "T1217 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 16 April 2023"
    },
    {
        "uniqueId": "G0082",
        "target": "G0082 APT38",
        "description": "APT38 has collected browser bookmark information to learn more about compromised hosts, obtain personal information about users, and acquire details about internal network resources.[3]"
    },
    {
        "uniqueId": "S0274",
        "target": "S0274 Calisto",
        "description": "Calisto collects information on bookmarks from Google Chrome.[4]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used type \\\\c$\\Users\\\\Favorites\\Links\\Bookmarks bar\\Imported From IE*citrix* for bookmark discovery.[5]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can retrieve browser history.[6]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack can retrieve browser history.[7][8]"
    },
    {
        "uniqueId": "S0363",
        "target": "S0363 Empire",
        "description": "Empire has the ability to gather browser data such as bookmarks and visited sites.[9]"
    },
    {
        "uniqueId": "G0117",
        "target": "G0117 Fox Kitten",
        "description": "Fox Kitten has used Google Chrome bookmarks to identify internal resources and assets.[10]"
    },
    {
        "uniqueId": "S0681",
        "target": "S0681 Lizar",
        "description": "Lizar can retrieve browser history and database files.[11][12]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete retrieves the user profile data (e.g., browsers) from Chrome and Firefox browsers.[13]"
    },
    {
        "uniqueId": "S1060",
        "target": "S1060 Mafalda",
        "description": "Mafalda can collect the contents of the %USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\LocalState file.[14]"
    },
    {
        "uniqueId": "S1122",
        "target": "S1122 Mispadu",
        "description": "Mispadu can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.[15][16]"
    },
    {
        "uniqueId": "S0079",
        "target": "S0079 MobileOrder",
        "description": "MobileOrder has a command to upload to its C2 server victim browser bookmarks.[17]"
    },
    {
        "uniqueId": "S1012",
        "target": "S1012 PowerLess",
        "description": "PowerLess has a browser info stealer module that can read Chrome and Edge browser database files.[18]"
    },
    {
        "uniqueId": "G1015",
        "target": "G1015 Scattered Spider",
        "description": "Scattered Spider retrieves browser histories via infostealer malware such as Raccoon Stealer.[19]"
    },
    {
        "uniqueId": "S1042",
        "target": "S1042 SUGARDUMP",
        "description": "SUGARDUMP has collected browser bookmark and history information.[20]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that could be taken to gather browser information, such as local files and databases (e.g., %APPDATA%/Google/Chrome).[2] Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Access",
        "description": "Monitor for unusual access to stored browser data, such as local files and databases (e.g., %APPDATA%/Google/Chrome).[2] Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for processes with arguments that may be associated with gathering browser information, such as local files and databases (e.g., %APPDATA%/Google/Chrome).[2]"
    },
    {
        "uniqueId": "FIN7",
        "target": "FIN7 Backdoor Masquerades as Ethical Hacking Tool. Retrieved February 2, 2022.",
        "description": "BI.ZONE Cyber Threats Research Team. (2021, May 13). From pentest to APT attack: cybercriminal group FIN7 disguises its malware as an ethical hacker\u2019s toolkit. Retrieved February 2, 2022."
    },
    {
        "uniqueId": "TA0042",
        "target": "TA0042 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TACTICS"
    },
    {
        "uniqueId": "TA0042",
        "target": "TA0042 Created: 30 September 2020",
        "description": "Last Modified: 30 September 2020"
    },
    {
        "uniqueId": "T1650",
        "target": "T1650 Acquire Access Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems. In some cases, adversary groups may form partnerships to share compromised systems with each other.",
        "description": "T1583 Acquire Infrastructure Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost. Additionally, botnets are available for rent or purchase."
    },
    {
        "uniqueId": "001",
        "target": "001 Domains Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.",
        "description": ".002 DNS Server Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations."
    },
    {
        "uniqueId": "003",
        "target": "003 Virtual Private Server Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.",
        "description": ".004 Server Adversaries may buy, lease, rent, or obtain physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in Drive-by Compromise, enabling Phishing operations, or facilitating Command and Control. Instead of compromising a third-party Server or renting a Virtual Private Server, adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused."
    },
    {
        "uniqueId": "005",
        "target": "005 Botnet Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).",
        "description": ".006 Web Services Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them."
    },
    {
        "uniqueId": "007",
        "target": "007 Serverless Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.",
        "description": ".008 Malvertising Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites."
    },
    {
        "uniqueId": "T1586",
        "target": "T1586 Compromise Accounts Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. Establish Accounts), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.",
        "description": ".001 Social Media Accounts Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona."
    },
    {
        "uniqueId": "002",
        "target": "002 Email Accounts Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct Phishing for Information, Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: Domains).",
        "description": ".003 Cloud Accounts Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers."
    },
    {
        "uniqueId": "T1584",
        "target": "T1584 Compromise Infrastructure Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.",
        "description": ".001 Domains Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps."
    },
    {
        "uniqueId": "002",
        "target": "002 DNS Server Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.",
        "description": ".003 Virtual Private Server Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves."
    },
    {
        "uniqueId": "004",
        "target": "004 Server Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a Server or Virtual Private Server, adversaries may compromise third-party servers in support of operations.",
        "description": ".005 Botnet Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS)."
    },
    {
        "uniqueId": "006",
        "target": "006 Web Services Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
        "description": ".007 Serverless Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them."
    },
    {
        "uniqueId": "008",
        "target": "008 Network Devices Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not Initial Access to that environment -- instead leveraging these devices to support additional targeting.",
        "description": "T1587 Develop Capabilities Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle."
    },
    {
        "uniqueId": "001",
        "target": "001 Malware Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.",
        "description": ".002 Code Signing Certificates Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is."
    },
    {
        "uniqueId": "003",
        "target": "003 Digital Certificates Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).",
        "description": ".004 Exploits Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via Vulnerabilities to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis."
    },
    {
        "uniqueId": "T1585",
        "target": "T1585 Establish Accounts Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.",
        "description": ".001 Social Media Accounts Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations."
    },
    {
        "uniqueId": "002",
        "target": "002 Email Accounts Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct Phishing for Information or Phishing. Establishing email accounts may also allow adversaries to abuse free services \u2013 such as trial periods \u2013 to Acquire Infrastructure for follow-on purposes.",
        "description": ".003 Cloud Accounts Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers."
    },
    {
        "uniqueId": "T1588",
        "target": "T1588 Obtain Capabilities Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.",
        "description": ".001 Malware Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors."
    },
    {
        "uniqueId": "002",
        "target": "002 Tool Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.",
        "description": ".003 Code Signing Certificates Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is."
    },
    {
        "uniqueId": "004",
        "target": "004 Digital Certificates Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.",
        "description": ".005 Exploits Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors."
    },
    {
        "uniqueId": "006",
        "target": "006 Vulnerabilities Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.",
        "description": ".007 Artificial Intelligence Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting Reconnaissance, creating basic scripts, assisting social engineering, and even developing payloads."
    },
    {
        "uniqueId": "T1608",
        "target": "T1608 Stage Capabilities Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.",
        "description": ".001 Upload Malware Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server."
    },
    {
        "uniqueId": "002",
        "target": "002 Upload Tool Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.",
        "description": ".003 Install Digital Certificate Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it."
    },
    {
        "uniqueId": "004",
        "target": "004 Drive-by Target Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as Application Access Token. Prior to Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).",
        "description": ".005 Link Target Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link."
    },
    {
        "uniqueId": "006",
        "target": "006 SEO Poisoning Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site\u2019s ranking/score/reputation calculated by their web crawlers and algorithms.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1212",
        "target": "T1212 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1212",
        "target": "T1212 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "18",
        "target": "18 April 2018",
        "description": "Last Modified: 15 October 2023"
    },
    {
        "uniqueId": "M1013",
        "target": "M1013 Application Developer Guidance",
        "description": "Application developers should consider taking measures to validate authentication requests by enabling one-time passwords, providing timestamps or sequence numbers for messages sent, using digital signatures, and/or using random session keys.[4][3]"
    },
    {
        "uniqueId": "M1048",
        "target": "M1048 Application Isolation and Sandboxing",
        "description": "Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist.[7]"
    },
    {
        "uniqueId": "M1050",
        "target": "M1050 Exploit Protection",
        "description": "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.[8] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.[9] Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion."
    },
    {
        "uniqueId": "M1019",
        "target": "M1019 Threat Intelligence Program",
        "description": "Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization."
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "Update software regularly by employing patch management for internal enterprise endpoints and servers."
    },
    {
        "uniqueId": "DS0015",
        "target": "DS0015 Application Log Application Log Content",
        "description": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes."
    },
    {
        "uniqueId": "DS0002",
        "target": "DS0002 User Account User Account Authentication",
        "description": "Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen."
    },
    {
        "uniqueId": "0558",
        "target": "0558 techniques for unauthorized email access. Retrieved September 18, 2023.",
        "description": "Goodin, D. (2017, March 17). Virtual machine escape fetches $105,000 at Pwn2Own hacking contest - updated. Retrieved March 12, 2018."
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TACTICS"
    },
    {
        "uniqueId": "14",
        "target": "14 ID Name Description",
        "description": "TA0043 Reconnaissance The adversary is trying to gather information they can use to plan future operations."
    },
    {
        "uniqueId": "TA0042",
        "target": "TA0042 Resource Development The adversary is trying to establish resources they can use to support operations.",
        "description": "TA0001 Initial Access The adversary is trying to get into your network."
    },
    {
        "uniqueId": "TA0002",
        "target": "TA0002 Execution The adversary is trying to run malicious code.",
        "description": "TA0003 Persistence The adversary is trying to maintain their foothold."
    },
    {
        "uniqueId": "TA0004",
        "target": "TA0004 Privilege Escalation The adversary is trying to gain higher-level permissions.",
        "description": "TA0005 Defense Evasion The adversary is trying to avoid being detected."
    },
    {
        "uniqueId": "TA0006",
        "target": "TA0006 Credential Access The adversary is trying to steal account names and passwords.",
        "description": "TA0007 Discovery The adversary is trying to figure out your environment."
    },
    {
        "uniqueId": "TA0008",
        "target": "TA0008 Lateral Movement The adversary is trying to move through your environment.",
        "description": "TA0009 Collection The adversary is trying to gather data of interest to their goal."
    },
    {
        "uniqueId": "TA0011",
        "target": "TA0011 Command and Control The adversary is trying to communicate with compromised systems to control them.",
        "description": "TA0010 Exfiltration The adversary is trying to steal data."
    },
    {
        "uniqueId": "TA0040",
        "target": "TA0040 Impact The adversary is trying to manipulate, interrupt, or destroy your systems and data.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1120",
        "target": "T1120 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1120",
        "target": "T1120 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 30 March 2023"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "ADVSTORESHELL can list connected devices.[3]"
    },
    {
        "uniqueId": "G0007",
        "target": "G0007 APT28",
        "description": "APT28 uses a module to receive a notification every time a USB mass storage device is inserted into a victim.[4]"
    },
    {
        "uniqueId": "G0067",
        "target": "G0067 APT37",
        "description": "APT37 has a Bluetooth device harvester, which uses Windows Bluetooth APIs to find information on connected Bluetooth devices. [5]"
    },
    {
        "uniqueId": "S0438",
        "target": "S0438 Attor",
        "description": "Attor has a plugin that collects information about inserted storage devices, modems, and phone devices.[6]"
    },
    {
        "uniqueId": "G0135",
        "target": "G0135 BackdoorDiplomacy",
        "description": "BackdoorDiplomacy has used an executable to detect removable media, such as USB flash drives.[7]"
    },
    {
        "uniqueId": "S0128",
        "target": "S0128 BADNEWS",
        "description": "BADNEWS checks for new hard drives on the victim, such as USB devices, by listening for the WM_DEVICECHANGE window message.[8][9]"
    },
    {
        "uniqueId": "S0234",
        "target": "S0234 Bandook",
        "description": "Bandook can detect USB devices.[10]"
    },
    {
        "uniqueId": "S0089",
        "target": "S0089 BlackEnergy",
        "description": "BlackEnergy can gather very specific information about attached USB devices, to include device instance ID and drive geometry.[11]"
    },
    {
        "uniqueId": "S0454",
        "target": "S0454 Cadelspy",
        "description": "Cadelspy has the ability to steal information about printers and the documents sent to printers.[12]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson has the ability to discover pluggable/removable drives to extract files from.[13][14]"
    },
    {
        "uniqueId": "S0538",
        "target": "S0538 Crutch",
        "description": "Crutch can monitor for removable drives being plugged into the compromised machine.[15]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can list signed PnP drivers for smartcard readers.[16]"
    },
    {
        "uniqueId": "S0062",
        "target": "S0062 DustySky",
        "description": "DustySky can detect connected USB devices.[17]"
    },
    {
        "uniqueId": "G0020",
        "target": "G0020 Equation",
        "description": "Equation has used tools with the functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.[18]"
    },
    {
        "uniqueId": "S0679",
        "target": "S0679 Ferocious",
        "description": "Ferocious can run GET.WORKSPACE in Microsoft Excel to check if a mouse is present.[19]"
    },
    {
        "uniqueId": "S0381",
        "target": "S0381 FlawedAmmyy",
        "description": "FlawedAmmyy will attempt to detect if a usable smart card is current inserted into a card reader.[20]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "The FunnyDream FilepakMonitor component can detect removable drive insertion.[21]"
    },
    {
        "uniqueId": "G0047",
        "target": "G0047 Gamaredon Group",
        "description": "Gamaredon Group tools have contained an application to check performance of USB flash drives. Gamaredon Group has also used malware to scan for removable drives.[22][23]"
    },
    {
        "uniqueId": "S1027",
        "target": "S1027 Heyoka Backdoor",
        "description": "Heyoka Backdoor can identify removable media attached to victim's machines.[24]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can map UPnP ports.[25]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete detects the insertion of new devices by listening for the WM_DEVICECHANGE window message.[26]"
    },
    {
        "uniqueId": "S1026",
        "target": "S1026 Mongall",
        "description": "Mongall can identify removable media attached to compromised hosts.[24]"
    },
    {
        "uniqueId": "S0149",
        "target": "S0149 MoonWind",
        "description": "MoonWind obtains the number of removable drives from the victim.[27]"
    },
    {
        "uniqueId": "S1090",
        "target": "S1090 NightClub",
        "description": "NightClub has the ability to monitor removable drives.[28]"
    },
    {
        "uniqueId": "S0385",
        "target": "S0385 njRAT",
        "description": "njRAT will attempt to detect if the victim system has a camera during the initial infection. njRAT can also detect any removable drives connected to the system.[29][30]"
    },
    {
        "uniqueId": "S0644",
        "target": "S0644 ObliqueRAT",
        "description": "ObliqueRAT can discover pluggable/removable drives to extract files from.[31]"
    },
    {
        "uniqueId": "G0049",
        "target": "G0049 OilRig",
        "description": "OilRig has used tools to identify if a mouse is connected to a targeted system.[32]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the fsutil fsinfo drives command as part of their advanced reconnaissance.[33]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors discovered removable disks attached to a system.[34]"
    },
    {
        "uniqueId": "S0113",
        "target": "S0113 Prikormka",
        "description": "A module in Prikormka collects information on available printers and disk drives.[35]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can identify peripheral devices on targeted systems.[36]"
    },
    {
        "uniqueId": "S0686",
        "target": "S0686 QuietSieve",
        "description": "QuietSieve can identify and search removable drives for specific file name extensions.[37]"
    },
    {
        "uniqueId": "S0481",
        "target": "S0481 Ragnar Locker",
        "description": "Ragnar Locker may attempt to connect to removable drives and mapped network drives.[38]"
    },
    {
        "uniqueId": "S0458",
        "target": "S0458 Ramsay",
        "description": "Ramsay can scan for removable media which may contain documents for collection.[39][40]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can obtain a list of smart card readers attached to the victim.[41][42]"
    },
    {
        "uniqueId": "S1089",
        "target": "S1089 SharpDisco",
        "description": "SharpDisco has dropped a plugin to monitor external drives to C:\\Users\\Public\\It3.exe.[28]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet enumerates removable drives for infection.[43]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can check for the number of devices plugged into an infected host.[44]"
    },
    {
        "uniqueId": "S0098",
        "target": "S0098 T9000",
        "description": "T9000 searches through connected drives for removable storage devices.[45]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to identify connected Apple devices.[46]"
    },
    {
        "uniqueId": "G0139",
        "target": "G0139 TeamTNT",
        "description": "TeamTNT has searched for attached VGA devices using lspci.[47]"
    },
    {
        "uniqueId": "S0647",
        "target": "S0647 Turian",
        "description": "Turian can scan for removable media to collect data.[7]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla has used fsutil fsinfo drives to list connected drives.[48]"
    },
    {
        "uniqueId": "S0452",
        "target": "S0452 USBferry",
        "description": "USBferry can check for connected USB devices.[49]"
    },
    {
        "uniqueId": "S0136",
        "target": "S0136 USBStealer",
        "description": "USBStealer monitors victims for insertion of removable drives. When dropped onto a second victim, it also enumerates drives connected to the system.[50]"
    },
    {
        "uniqueId": "S0366",
        "target": "S0366 WannaCry",
        "description": "WannaCry contains a thread that will attempt to scan for new attached drives every few seconds. If one is identified, it will encrypt the files on the attached device.[51]"
    },
    {
        "uniqueId": "S0612",
        "target": "S0612 WastedLocker",
        "description": "WastedLocker can enumerate removable drives prior to the encryption process.[52]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy enumerates information about connected storage devices.[53]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system."
    },
    {
        "uniqueId": "2021",
        "target": "2021 Settle, A., et al. (2016, August 8). MONSOON - Analysis Of An APT Campaign. Retrieved September 22, 2016.",
        "description": "Lunghi, D., et al. (2017, December). Untangling the Patchwork Cyberespionage Group. Retrieved July 10, 2018."
    },
    {
        "uniqueId": "BE2",
        "target": "BE2 custom plugins, router abuse, and target profiles. Retrieved March 24, 2016.",
        "description": "Symantec Security Response. (2015, December 7). Iran-based attackers use back door threats to spy on Middle Eastern targets. Retrieved April 17, 2019."
    },
    {
        "uniqueId": "10",
        "target": "10 Years. Retrieved July 14, 2022.",
        "description": "Kamluk, V. & Gostev, A. (2016, February). Adwind - A Cross-Platform RAT. Retrieved April 23, 2019."
    },
    {
        "uniqueId": "APT34",
        "target": "APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021.",
        "description": "Cybereason Nocturnus. (2022, May 4). Operation CuckooBees: Deep-Dive into Stealthy Winnti Techniques. Retrieved September 22, 2022."
    },
    {
        "uniqueId": "22",
        "target": "22 Schlapfer, Patrick. (2022, June 6). A New Loader Gets Ready. Retrieved December 13, 2022.",
        "description": "Grunzweig, J. and Miller-Osborn, J.. (2016, February 4). T9000: Advanced Modular Backdoor Uses Complex Anti-Analysis Techniques. Retrieved April 15, 2016."
    },
    {
        "uniqueId": "T1547",
        "target": "T1547 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1547",
        "target": "T1547 Sub-techniques:  T1547.001, T1547.002, T1547.003, T1547.004, T1547.005, T1547.006, T1547.007, T1547.008, T1547.009, T1547.010, T1547.012, T1547.013, T1547.014, T1547.015",
        "description": "\u24d8"
    },
    {
        "uniqueId": "23",
        "target": "23 January 2020",
        "description": "Last Modified: 16 April 2024"
    },
    {
        "uniqueId": "S0651",
        "target": "S0651 BoxCaon",
        "description": "BoxCaon established persistence by setting the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load registry key to point to its executable.[6]"
    },
    {
        "uniqueId": "S0567",
        "target": "S0567 Dtrack",
        "description": "Dtrack\u2019s RAT makes a persistent target file with auto execution on the host start.[7]"
    },
    {
        "uniqueId": "S0084",
        "target": "S0084 Mis-Type",
        "description": "Mis-Type has created registry keys for persistence, including HKCU\\Software\\bkfouerioyou, HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{6afa8072-b2b1-31a8-b5c1-{Unique Identifier}, and HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3BF41072-B2B1-31A8-B5C1-{Unique Identifier}.[8]"
    },
    {
        "uniqueId": "S0083",
        "target": "S0083 Misdat",
        "description": "Misdat has created registry keys for persistence, including HKCU\\Software\\dnimtsoleht\\StubPath, HKCU\\Software\\snimtsOleht\\StubPath, HKCU\\Software\\Backtsaleht\\StubPath, HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed. Components\\{3bf41072-b2b1-21c8-b5c1-bd56d32fbda7}, and HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3ef41072-a2f1-21c8-c5c1-70c2c3bc7905}.[8]"
    },
    {
        "uniqueId": "S0653",
        "target": "S0653 xCaon",
        "description": "xCaon has added persistence via the Registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load which causes the malware to run each time any user logs in.[6]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."
    },
    {
        "uniqueId": "DS0027",
        "target": "DS0027 Driver Driver Load",
        "description": "Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."
    },
    {
        "uniqueId": "DS0008",
        "target": "DS0008 Kernel Kernel Module Load",
        "description": "Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."
    },
    {
        "uniqueId": "DS0011",
        "target": "DS0011 Module Module Load",
        "description": "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Creation",
        "description": "Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry."
    },
    {
        "uniqueId": "T1124",
        "target": "T1124 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1124",
        "target": "T1124 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 16 April 2024"
    },
    {
        "uniqueId": "S0331",
        "target": "S0331 Agent Tesla",
        "description": "Agent Tesla can collect the timestamp from the victim\u2019s machine.[13]"
    },
    {
        "uniqueId": "S0622",
        "target": "S0622 AppleSeed",
        "description": "AppleSeed can pull a timestamp from the victim's machine.[14]"
    },
    {
        "uniqueId": "S0373",
        "target": "S0373 Astaroth",
        "description": "Astaroth collects the timestamp from the infected machine. [15]"
    },
    {
        "uniqueId": "S1053",
        "target": "S1053 AvosLocker",
        "description": "AvosLocker has checked the system time before and after encryption.[16]"
    },
    {
        "uniqueId": "S0344",
        "target": "S0344 Azorult",
        "description": "Azorult can collect the time zone information from the system.[17][18]"
    },
    {
        "uniqueId": "S1081",
        "target": "S1081 BADHATCH",
        "description": "BADHATCH can obtain the DATETIME and UPTIME from a compromised machine.[19]"
    },
    {
        "uniqueId": "S0534",
        "target": "S0534 Bazar",
        "description": "Bazar can collect the time on the compromised host.[20][21]"
    },
    {
        "uniqueId": "S0574",
        "target": "S0574 BendyBear",
        "description": "BendyBear has the ability to determine local time on a compromised host.[22]"
    },
    {
        "uniqueId": "S0017",
        "target": "S0017 BISCUIT",
        "description": "BISCUIT has a command to collect the system UPTIME.[23]"
    },
    {
        "uniqueId": "S0268",
        "target": "S0268 Bisonal",
        "description": "Bisonal can check the system time set on the infected host.[24]"
    },
    {
        "uniqueId": "S0657",
        "target": "S0657 BLUELIGHT",
        "description": "BLUELIGHT can collect the local time on a compromised host.[25]"
    },
    {
        "uniqueId": "G0060",
        "target": "G0060 BRONZE BUTLER",
        "description": "BRONZE BUTLER has used net time to check the local time on a target system.[26]"
    },
    {
        "uniqueId": "S0471",
        "target": "S0471 build_downer",
        "description": "build_downer has the ability to determine the local time to ensure malware installation only happens during the hours that the infected system is active.[27]"
    },
    {
        "uniqueId": "C0015",
        "target": "C0015 C0015",
        "description": "During C0015, the threat actors used the command net view /all time to gather the local time of a compromised network.[28]"
    },
    {
        "uniqueId": "S0351",
        "target": "S0351 Cannon",
        "description": "Cannon can collect the current time zone information from the victim\u2019s machine.[29]"
    },
    {
        "uniqueId": "S0335",
        "target": "S0335 Carbon",
        "description": "Carbon uses the command net time \\127.0.0.1 to get information the system\u2019s time.[30]"
    },
    {
        "uniqueId": "S1043",
        "target": "S1043 ccf32",
        "description": "ccf32 can determine the local time on targeted machines.[31]"
    },
    {
        "uniqueId": "G0114",
        "target": "G0114 Chimera",
        "description": "Chimera has used time /t and net time \\ip/hostname for system time discovery.[32]"
    },
    {
        "uniqueId": "S0660",
        "target": "S0660 Clambling",
        "description": "Clambling can determine the current time.[33]"
    },
    {
        "uniqueId": "S0126",
        "target": "S0126 ComRAT",
        "description": "ComRAT has checked the victim system's date and time to perform tasks during business hours (9 to 5, Monday to Friday).[34]"
    },
    {
        "uniqueId": "S0608",
        "target": "S0608 Conficker",
        "description": "Conficker uses the current UTC victim system date for domain generation and connects to time servers to determine the current date.[35][36]"
    },
    {
        "uniqueId": "S0115",
        "target": "S0115 Crimson",
        "description": "Crimson has the ability to determine the date and time on a compromised host.[37]"
    },
    {
        "uniqueId": "S1111",
        "target": "S1111 DarkGate",
        "description": "DarkGate creates a log file for capturing keylogging, clipboard, and related data using the victim host's current date for the filename.[38] DarkGate queries victim system epoch time during execution.[38] DarkGate captures system time information as part of automated profiling on initial installation.[39]"
    },
    {
        "uniqueId": "G0012",
        "target": "G0012 Darkhotel",
        "description": "Darkhotel malware can obtain system time from a compromised host.[40]"
    },
    {
        "uniqueId": "S0673",
        "target": "S0673 DarkWatchman",
        "description": "DarkWatchman can collect time zone information and system UPTIME.[41]"
    },
    {
        "uniqueId": "S1033",
        "target": "S1033 DCSrv",
        "description": "DCSrv can compare the current time on an infected host with a configuration value to determine when to start the encryption process.[42]"
    },
    {
        "uniqueId": "S0694",
        "target": "S0694 DRATzarus",
        "description": "DRATzarus can use the GetTickCount and GetSystemTimeAsFileTime API calls to inspect system time.[43]"
    },
    {
        "uniqueId": "S0554",
        "target": "S0554 Egregor",
        "description": "Egregor contains functionality to query the local/system time.[44]"
    },
    {
        "uniqueId": "S0091",
        "target": "S0091 Epic",
        "description": "Epic uses the net time command to get the system time from the machine and collect the current date and time zone information.[45]"
    },
    {
        "uniqueId": "S0396",
        "target": "S0396 EvilBunny",
        "description": "EvilBunny has used the API calls NtQuerySystemTime, GetSystemTimeAsFileTime, and GetTickCount to gather time metrics as part of its checks to see if the malware is running in a sandbox.[46]"
    },
    {
        "uniqueId": "S0267",
        "target": "S0267 FELIXROOT",
        "description": "FELIXROOT gathers the time zone information from the victim\u2019s machine.[47]"
    },
    {
        "uniqueId": "S1044",
        "target": "S1044 FunnyDream",
        "description": "FunnyDream can check system time to help determine when changes were made to specified files.[31]"
    },
    {
        "uniqueId": "S0588",
        "target": "S0588 GoldMax",
        "description": "GoldMax can check the current date-time value of the compromised system, comparing it to the hardcoded execution trigger and can send the current timestamp to the C2 server.[48][49]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can determine the time on the victim machine via IPinfo.[50]"
    },
    {
        "uniqueId": "S0237",
        "target": "S0237 GravityRAT",
        "description": "GravityRAT can obtain the date and time of a system.[51]"
    },
    {
        "uniqueId": "S0690",
        "target": "S0690 Green Lambert",
        "description": "Green Lambert can collect the date and time from a compromised host.[52][53]"
    },
    {
        "uniqueId": "S0417",
        "target": "S0417 GRIFFON",
        "description": "GRIFFON has used a reconnaissance module that can be used to retrieve the date and time of the system.[54]"
    },
    {
        "uniqueId": "G0126",
        "target": "G0126 Higaisa",
        "description": "Higaisa used a function to gather the current time.[55]"
    },
    {
        "uniqueId": "S0376",
        "target": "S0376 HOPLIGHT",
        "description": "HOPLIGHT has been observed collecting system time from victim machines.[56]"
    },
    {
        "uniqueId": "S0260",
        "target": "S0260 InvisiMole",
        "description": "InvisiMole gathers the local system time from the victim\u2019s machine.[57][58]"
    },
    {
        "uniqueId": "S1051",
        "target": "S1051 KEYPLUG",
        "description": "KEYPLUG can obtain the current tick count of an infected computer.[59]"
    },
    {
        "uniqueId": "G0032",
        "target": "G0032 Lazarus Group",
        "description": "A Destover-like implant used by Lazarus Group can obtain the current system time and send it to the C2 server.[60]"
    },
    {
        "uniqueId": "S0455",
        "target": "S0455 Metamorfo",
        "description": "Metamorfo uses JavaScript to get the system time.[61]"
    },
    {
        "uniqueId": "S0149",
        "target": "S0149 MoonWind",
        "description": "MoonWind obtains the victim's current time.[62]"
    },
    {
        "uniqueId": "S0039",
        "target": "S0039 Net",
        "description": "The net time command can be used in Net to determine the local or remote system time.[63]"
    },
    {
        "uniqueId": "S0353",
        "target": "S0353 NOKKI",
        "description": "NOKKI can collect the current timestamp of the victim's machine.[64]"
    },
    {
        "uniqueId": "S0439",
        "target": "S0439 Okrum",
        "description": "Okrum can obtain the date and time of the compromised system.[65]"
    },
    {
        "uniqueId": "S0264",
        "target": "S0264 OopsIE",
        "description": "OopsIE checks to see if the system is configured with \"Daylight\" time and checks for a specific region to be set for the timezone.[66]"
    },
    {
        "uniqueId": "C0012",
        "target": "C0012 Operation CuckooBees",
        "description": "During Operation CuckooBees, the threat actors used the net time command as part of their advanced reconnaissance.[67]"
    },
    {
        "uniqueId": "C0014",
        "target": "C0014 Operation Wocao",
        "description": "During Operation Wocao, threat actors used the time command to retrieve the current time of a compromised system.[68]"
    },
    {
        "uniqueId": "S0501",
        "target": "S0501 PipeMon",
        "description": "PipeMon can send time zone information from a compromised host to C2.[69]"
    },
    {
        "uniqueId": "S0139",
        "target": "S0139 PowerDuke",
        "description": "PowerDuke has commands to get the time the machine was built, the time, and the time zone.[70]"
    },
    {
        "uniqueId": "S0238",
        "target": "S0238 Proxysvc",
        "description": "As part of the data reconnaissance phase, Proxysvc grabs the system time to send back to the control server.[60]"
    },
    {
        "uniqueId": "S0650",
        "target": "S0650 QakBot",
        "description": "QakBot can identify the system time on a targeted host.[71]"
    },
    {
        "uniqueId": "S0148",
        "target": "S0148 RTM",
        "description": "RTM can obtain the victim time zone.[72]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has collected the current date and time of the victim system.[73]"
    },
    {
        "uniqueId": "S0140",
        "target": "S0140 Shamoon",
        "description": "Shamoon obtains the system time and will only activate if it is greater than a preset date.[74][75]"
    },
    {
        "uniqueId": "S0450",
        "target": "S0450 SHARPSTATS",
        "description": "SHARPSTATS has the ability to identify the current date and time on the compromised host.[76]"
    },
    {
        "uniqueId": "G0121",
        "target": "G0121 Sidewinder",
        "description": "Sidewinder has used tools to obtain the current system time.[77]"
    },
    {
        "uniqueId": "S0692",
        "target": "S0692 SILENTTRINITY",
        "description": "SILENTTRINITY can collect start time information from a compromised host.[78]"
    },
    {
        "uniqueId": "S0615",
        "target": "S0615 SombRAT",
        "description": "SombRAT can execute getinfo to discover the current time on a compromised host.[79][80]"
    },
    {
        "uniqueId": "S0380",
        "target": "S0380 StoneDrill",
        "description": "StoneDrill can obtain the current date and time of the victim machine.[81]"
    },
    {
        "uniqueId": "S1034",
        "target": "S1034 StrifeWater",
        "description": "StrifeWater can collect the time zone from the victim's machine.[82]"
    },
    {
        "uniqueId": "S0603",
        "target": "S0603 Stuxnet",
        "description": "Stuxnet collects the time and date of a system when it is infected.[83]"
    },
    {
        "uniqueId": "S0559",
        "target": "S0559 SUNBURST",
        "description": "SUNBURST collected device UPTIME.[84][85]"
    },
    {
        "uniqueId": "S1064",
        "target": "S1064 SVCReady",
        "description": "SVCReady can collect time zone information.[86]"
    },
    {
        "uniqueId": "S0098",
        "target": "S0098 T9000",
        "description": "T9000 gathers and beacons the system time during installation.[87]"
    },
    {
        "uniqueId": "S0011",
        "target": "S0011 Taidoor",
        "description": "Taidoor can use GetLocalTime and GetSystemTime to collect system time.[88]"
    },
    {
        "uniqueId": "S0586",
        "target": "S0586 TAINTEDSCRIBE",
        "description": "TAINTEDSCRIBE can execute GetLocalTime for time discovery.[89]"
    },
    {
        "uniqueId": "S0467",
        "target": "S0467 TajMahal",
        "description": "TajMahal has the ability to determine local time on a compromised host.[90]"
    },
    {
        "uniqueId": "G0089",
        "target": "G0089 The White Company",
        "description": "The White Company has checked the current date on the victim system.[91]"
    },
    {
        "uniqueId": "S0678",
        "target": "S0678 Torisma",
        "description": "Torisma can collect the current time on a victim machine.[92]"
    },
    {
        "uniqueId": "G0010",
        "target": "G0010 Turla",
        "description": "Turla surveys a system upon check-in to discover the system time by using the net time command.[45]"
    },
    {
        "uniqueId": "S0275",
        "target": "S0275 UPPERCUT",
        "description": "UPPERCUT has the capability to obtain the time zone information and current timestamp of the victim\u2019s machine.[93]"
    },
    {
        "uniqueId": "S0466",
        "target": "S0466 WindTail",
        "description": "WindTail has the ability to generate the current date and time.[94]"
    },
    {
        "uniqueId": "S0251",
        "target": "S0251 Zebrocy",
        "description": "Zebrocy gathers the current time zone and date information from the system.[95][96]"
    },
    {
        "uniqueId": "S0330",
        "target": "S0330 Zeus Panda",
        "description": "Zeus Panda collects the current system time (UTC) and sends it back to the C2 server.[97]"
    },
    {
        "uniqueId": "G0128",
        "target": "G0128 ZIRCONIUM",
        "description": "ZIRCONIUM has used a tool to capture the time on a compromised host in order to register it with C2.[98]"
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process OS API Execution",
        "description": "Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information."
    },
    {
        "uniqueId": "FIN8",
        "target": "FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.",
        "description": "Cybereason Nocturnus. (2020, July 16). A BAZAR OF TRICKS: FOLLOWING TEAM9\u2019S DEVELOPMENT CYCLES. Retrieved November 18, 2020."
    },
    {
        "uniqueId": "Team9",
        "target": "Team9 malware family. Retrieved December 1, 2020.",
        "description": "Harbison, M. (2021, February 9). BendyBear: Novel Chinese Shellcode Linked With Cyber Espionage Group BlackTech. Retrieved February 16, 2021."
    },
    {
        "uniqueId": "APT1",
        "target": "APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016.",
        "description": "Zykov, K. (2020, August 13). CactusPete APT group\u2019s updated Bisonal backdoor. Retrieved May 5, 2021."
    },
    {
        "uniqueId": "APT41",
        "target": "APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.",
        "description": "Sherstobitoff, R., Malhotra, A. (2018, April 24). Analyzing Operation GhostSecret: Attack Seeks to Steal Data Worldwide. Retrieved May 16, 2018."
    },
    {
        "uniqueId": "V3",
        "target": "V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.",
        "description": "Hegel, T. (2021, January 13). A Global Perspective of the SideWinder APT. Retrieved January 27, 2021."
    },
    {
        "uniqueId": "22",
        "target": "22 FireEye. (2020, December 13). Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor. Retrieved January 4, 2021.",
        "description": "MSTIC. (2020, December 18). Analyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers . Retrieved January 5, 2021."
    },
    {
        "uniqueId": "v2",
        "target": "v2 \u2013 Chinese Remote Access Trojan: TAIDOOR. Retrieved August 24, 2021.",
        "description": "USG. (2020, May 12). MAR-10288834-2.v1 \u2013 North Korean Trojan: TAINTEDSCRIBE. Retrieved March 5, 2021."
    },
    {
        "uniqueId": "APT10",
        "target": "APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018.",
        "description": "Wardle, Patrick. (2018, December 20). Middle East Cyber-Espionage analyzing WindShift's implant: OSX.WindTail (part 1). Retrieved October 3, 2019."
    },
    {
        "uniqueId": "31",
        "target": "31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021.",
        "description": "Contact Us"
    },
    {
        "uniqueId": "T1176",
        "target": "T1176 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "T1176",
        "target": "T1176 Sub-techniques:  No sub-techniques",
        "description": "\u24d8"
    },
    {
        "uniqueId": "16",
        "target": "16 January 2018",
        "description": "Last Modified: 18 April 2024"
    },
    {
        "uniqueId": "S0482",
        "target": "S0482 Bundlore",
        "description": "Bundlore can install malicious browser extensions that are used to hijack user searches.[13]"
    },
    {
        "uniqueId": "S0531",
        "target": "S0531 Grandoreiro",
        "description": "Grandoreiro can use malicious browser extensions to steal cookies and other user information.[14]"
    },
    {
        "uniqueId": "G0094",
        "target": "G0094 Kimsuky",
        "description": "Kimsuky has used Google Chrome browser extensions to infect victims and to steal passwords and cookies.[15][16]"
    },
    {
        "uniqueId": "S1122",
        "target": "S1122 Mispadu",
        "description": "Mispadu utilizes malicious Google Chrome browser extensions to steal financial data.[17]"
    },
    {
        "uniqueId": "S0402",
        "target": "S0402 OSX/Shlayer",
        "description": "OSX/Shlayer can install malicious Safari browser extensions to serve ads.[18][19]"
    },
    {
        "uniqueId": "M1047",
        "target": "M1047 Audit",
        "description": "Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones."
    },
    {
        "uniqueId": "M1038",
        "target": "M1038 Execution Prevention",
        "description": "Set a browser extension allow or deny list as appropriate for your security policy. [20]"
    },
    {
        "uniqueId": "M1033",
        "target": "M1033 Limit Software Installation",
        "description": "Only install browser extensions from trusted sources that can be verified. Browser extensions for some browsers can be controlled through Group Policy. Change settings to prevent the browser from installing extensions without sufficient permissions."
    },
    {
        "uniqueId": "M1051",
        "target": "M1051 Update Software",
        "description": "Ensure operating systems and browsers are using the most current version."
    },
    {
        "uniqueId": "M1017",
        "target": "M1017 User Training",
        "description": "Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run."
    },
    {
        "uniqueId": "DS0017",
        "target": "DS0017 Command Command Execution",
        "description": "Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration."
    },
    {
        "uniqueId": "DS0022",
        "target": "DS0022 File File Creation",
        "description": "Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    },
    {
        "uniqueId": "DS0009",
        "target": "DS0009 Process Process Creation",
        "description": "Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence."
    },
    {
        "uniqueId": "DS0024",
        "target": "DS0024 Windows Registry Windows Registry Key Creation",
        "description": "Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation."
    },
    {
        "uniqueId": "TA413",
        "target": "TA413 Leverages New FriarFox Browser Extension to Target the Gmail Accounts of Global Tibetan Organizations. Retrieved February 26, 2024.",
        "description": "Microsoft Threat Intelligence. (2020, December 10). Widespread malware campaign seeks to silently inject ads into search results, affects multiple browsers. Retrieved February 26, 2024."
    },
    {
        "uniqueId": "T1029",
        "target": "T1029 Matrices",
        "description": "Tactics"
    },
    {
        "uniqueId": "2024",
        "target": "2024 in McLean, VA. Register for in-person participation here and virtual participation here",
        "description": "TECHNIQUES"
    },
    {
        "uniqueId": "C2",
        "target": "C2 Channel or Exfiltration Over Alternative Protocol.",
        "description": "ID: T1029"
    },
    {
        "uniqueId": "31",
        "target": "31 May 2017",
        "description": "Last Modified: 28 March 2020"
    },
    {
        "uniqueId": "S0045",
        "target": "S0045 ADVSTORESHELL",
        "description": "ADVSTORESHELL collects, compresses, encrypts, and exfiltrates data to the C2 server every 10 minutes.[1]"
    },
    {
        "uniqueId": "S0667",
        "target": "S0667 Chrommme",
        "description": "Chrommme can set itself to sleep before requesting a new command from C2.[2]"
    },
    {
        "uniqueId": "S0154",
        "target": "S0154 Cobalt Strike",
        "description": "Cobalt Strike can set its Beacon payload to reach out to the C2 server on an arbitrary and random interval.[3]"
    },
    {
        "uniqueId": "S0126",
        "target": "S0126 ComRAT",
        "description": "ComRAT has been programmed to sleep outside local business hours (9 to 5, Monday to Friday).[4]"
    },
    {
        "uniqueId": "S0200",
        "target": "S0200 Dipsind",
        "description": "Dipsind can be configured to only run during normal working hours, which would make its communications harder to distinguish from normal traffic.[5]"
    },
    {
        "uniqueId": "S0696",
        "target": "S0696 Flagpro",
        "description": "Flagpro has the ability to wait for a specified time interval between communicating with and executing commands from C2.[6]"
    },
    {
        "uniqueId": "G0126",
        "target": "G0126 Higaisa",
        "description": "Higaisa sent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes.[7]"
    },
    {
        "uniqueId": "S0283",
        "target": "S0283 jRAT",
        "description": "jRAT can be configured to reconnect at certain intervals.[8]"
    },
    {
        "uniqueId": "S0265",
        "target": "S0265 Kazuar",
        "description": "Kazuar can sleep for a specific time and be set to communicate at specific intervals.[9]"
    },
    {
        "uniqueId": "S0395",
        "target": "S0395 LightNeuron",
        "description": "LightNeuron can be configured to exfiltrate data during nighttime or working hours.[10]"
    },
    {
        "uniqueId": "S0211",
        "target": "S0211 Linfo",
        "description": "Linfo creates a backdoor through which remote attackers can change the frequency at which compromised hosts contact remote C2 infrastructure.[11]"
    },
    {
        "uniqueId": "S0409",
        "target": "S0409 Machete",
        "description": "Machete sends stolen data to the C2 server every 10 minutes.[12]"
    },
    {
        "uniqueId": "S1100",
        "target": "S1100 Ninja",
        "description": "Ninja can configure its agent to work only in specific time frames.[13]"
    },
    {
        "uniqueId": "S0223",
        "target": "S0223 POWERSTATS",
        "description": "POWERSTATS can sleep for a given number of seconds.[14]"
    },
    {
        "uniqueId": "S0596",
        "target": "S0596 ShadowPad",
        "description": "ShadowPad has sent data back to C2 every 8 hours.[15]"
    },
    {
        "uniqueId": "S1019",
        "target": "S1019 Shark",
        "description": "Shark can pause C2 communications for a specified time.[16]"
    },
    {
        "uniqueId": "S0444",
        "target": "S0444 ShimRat",
        "description": "ShimRat can sleep when instructed to do so by the C2.[17]"
    },
    {
        "uniqueId": "S0668",
        "target": "S0668 TinyTurla",
        "description": "TinyTurla contacts its C2 based on a scheduled timing set in its configuration.[18]"
    },
    {
        "uniqueId": "M1031",
        "target": "M1031 Network Intrusion Prevention",
        "description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools. [19]"
    },
    {
        "uniqueId": "DS0029",
        "target": "DS0029 Network Traffic Network Connection Creation",
        "description": "Monitor for newly constructed network connections that are sent or received by untrusted hosts."
    },
    {
        "uniqueId": "19",
        "target": "19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.",
        "description": "Kamluk, V. & Gostev, A. (2016, February). Adwind - A Cross-Platform RAT. Retrieved April 23, 2019."
    }
]